(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    272607,       6165]
NotebookOptionsPosition[    265987,       6047]
NotebookOutlinePosition[    266379,       6063]
CellTagsIndexPosition[    266336,       6060]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2D global conformal block demo", "Title",
 CellChangeTimes->{{3.964951229276133*^9, 3.9649512662044363`*^9}, {
  3.9649518026129723`*^9, 3.964951803816304*^9}, {3.964952220288821*^9, 
  3.9649522212212954`*^9}},ExpressionUUID->"1d37c3ca-d612-49a8-b824-\
032a67794d32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Define"}], " ", "projective", " ", "lightcone", " ", 
    "variables", " ", "for", " ", "the", " ", "four", " ", "operators"}], " ",
    "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"X", "[", "i", "]"}], "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "Lorentzian"}], " ", "inner", " ", "product", " ", 
     "on", " ", "the", " ", "auxiliary", " ", 
     SuperscriptBox["R", 
      RowBox[{"3", ",", "1"}]], " ", "space"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Inn", "[", 
     RowBox[{"Y_", ",", "Z_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], " ", 
      RowBox[{"Z", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Y", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{"Z", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}]}]}], "  ", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "Note"}], " ", "that", " ", "at", " ", "this", " ", 
     "stage", " ", "we", " ", 
     RowBox[{"haven", "'"}], "t", " ", "yet", " ", "restricted", " ", "to", " ",
      "the", " ", "lightcone"}], " ", "***)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", " ", "The"}], " ", "scalar", " ", "4"}], "-", 
      RowBox[{"point", " ", "conformal", " ", "block"}]}], ",", " ", 
     RowBox[{"expressed", " ", "in", " ", "terms", " ", "of", " ", 
      RowBox[{"G", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}]}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FourPointFunction", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Inn", "[", 
        RowBox[{
         RowBox[{"X", "[", "1", "]"}], ",", 
         RowBox[{"X", "[", "2", "]"}]}], "]"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "/",
          "2"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"Inn", "[", 
        RowBox[{
         RowBox[{"X", "[", "3", "]"}], ",", 
         RowBox[{"X", "[", "4", "]"}]}], "]"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], ")"}]}], "/",
          "2"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Inn", "[", 
          RowBox[{
           RowBox[{"X", "[", "2", "]"}], ",", 
           RowBox[{"X", "[", "4", "]"}]}], "]"}], "/", 
         RowBox[{"Inn", "[", 
          RowBox[{
           RowBox[{"X", "[", "1", "]"}], ",", 
           RowBox[{"X", "[", "4", "]"}]}], "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
         "2"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Inn", "[", 
          RowBox[{
           RowBox[{"X", "[", "1", "]"}], ",", 
           RowBox[{"X", "[", "4", "]"}]}], "]"}], "/", 
         RowBox[{"Inn", "[", 
          RowBox[{
           RowBox[{"X", "[", "1", "]"}], ",", 
           RowBox[{"X", "[", "3", "]"}]}], "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
         "2"}], ")"}]}], " ", 
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inn", "[", 
          RowBox[{
           RowBox[{"X", "[", "1", "]"}], ",", 
           RowBox[{"X", "[", "2", "]"}]}], "]"}], " ", 
         RowBox[{
          RowBox[{"Inn", "[", 
           RowBox[{
            RowBox[{"X", "[", "3", "]"}], ",", 
            RowBox[{"X", "[", "4", "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Inn", "[", 
             RowBox[{
              RowBox[{"X", "[", "1", "]"}], ",", 
              RowBox[{"X", "[", "3", "]"}]}], "]"}], " ", 
            RowBox[{"Inn", "[", 
             RowBox[{
              RowBox[{"X", "[", "2", "]"}], ",", 
              RowBox[{"X", "[", "4", "]"}]}], "]"}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"Inn", "[", 
          RowBox[{
           RowBox[{"X", "[", "1", "]"}], ",", 
           RowBox[{"X", "[", "4", "]"}]}], "]"}], " ", 
         RowBox[{
          RowBox[{"Inn", "[", 
           RowBox[{
            RowBox[{"X", "[", "2", "]"}], ",", 
            RowBox[{"X", "[", "3", "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Inn", "[", 
             RowBox[{
              RowBox[{"X", "[", "1", "]"}], ",", 
              RowBox[{"X", "[", "3", "]"}]}], "]"}], " ", 
            RowBox[{"Inn", "[", 
             RowBox[{
              RowBox[{"X", "[", "2", "]"}], ",", 
              RowBox[{"X", "[", "4", "]"}]}], "]"}]}], ")"}]}]}]}], "]"}]}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Define"}], " ", "the", " ", "conformal", " ", 
      "generators", " ", 
      RowBox[{"L", "[", 
       RowBox[{"i", ",", "j"}], "]"}], " ", "in", " ", "projective", " ", 
      "lightcone", " ", "representation"}], ",", " ", 
     RowBox[{
      RowBox[{
      "acting", " ", "on", " ", "the", " ", "first", " ", "two", " ", 
       "fields", " ", "in", " ", "the", " ", "4"}], "-", 
      RowBox[{"point", " ", "function"}]}], ",", " ", 
     RowBox[{"with", " ", "coordinates", " ", 
      RowBox[{"X", "[", "1", "]"}], " ", "and", " ", 
      RowBox[{"X", "[", "2", "]"}]}]}], " ", "***)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"L", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"1", ",", "i"}], "]"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"x", "[", 
            RowBox[{"1", ",", "j"}], "]"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"2", ",", "i"}], "]"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"x", "[", 
            RowBox[{"2", ",", "j"}], "]"}]}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[Equal]", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"1", ",", "j"}], "]"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"x", "[", 
            RowBox[{"1", ",", "i"}], "]"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"2", ",", "j"}], "]"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{"f", ",", 
           RowBox[{"x", "[", 
            RowBox[{"2", ",", "i"}], "]"}]}], "]"}]}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", 
       RowBox[{"L2", "[", "f", "]"}]}], " ", "is", " ", "minus", " ", "the", " ",
       "Casimir", " ", "operator"}], ",", " ", 
     RowBox[{
      SuperscriptBox["L", "2"], "=", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox["L", "AB"], 
       SubscriptBox["L", "AB"]}]}], ",", " ", 
     RowBox[{"acting", " ", "on", " ", "the", " ", "function", " ", "f"}]}], 
    " ", "***)"}], "\n", 
   RowBox[{
    RowBox[{"L2", "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "1"}], ",", 
          RowBox[{"-", "1"}], ",", "1"}], "]"}], " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[Equal]", "1"}], ",", 
          RowBox[{"-", "1"}], ",", "1"}], "]"}], " ", 
        RowBox[{
         RowBox[{"L", "[", 
          RowBox[{"i", ",", "j"}], "]"}], "[", 
         RowBox[{
          RowBox[{"L", "[", 
           RowBox[{"i", ",", "j"}], "]"}], "[", "f", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", " ", "We"}], " ", "will", " ", "set", " ", 
       RowBox[{"X", "[", "1", "]"}]}], "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"X", "[", "2", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", 
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}], "2"], ",", 
        FractionBox[
         RowBox[{"1", "-", 
          SuperscriptBox["a", "2"], "-", 
          SuperscriptBox["b", "2"]}], "2"], ",", "a", ",", "b"}], "}"}]}], ",",
      " ", 
     RowBox[{
      RowBox[{"X", "[", "3", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"X", "[", "4", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[Epsilon]", 
           RowBox[{"-", "2"}]]}], "2"], ",", 
        FractionBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Epsilon]", 
           RowBox[{"-", "2"}]]}], "2"], ",", "0", ",", 
        FractionBox["1", "\[Epsilon]"]}], "}"}]}]}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoordinateSubstitution", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "4"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"a", "^", "2"}], "+", 
           RowBox[{"b", "^", "2"}]}], ")"}], "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"a", "^", "2"}], "-", 
           RowBox[{"b", "^", "2"}]}], ")"}], "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "\[Rule]", "a"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "4"}], "]"}], "\[Rule]", "b"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "1"}], "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "4"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"4", ",", "1"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            RowBox[{"\[Epsilon]", "^", "2"}]}]}], ")"}], "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"4", ",", "2"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"\[Epsilon]", "^", "2"}]}]}], ")"}], "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"4", ",", "3"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"4", ",", "4"}], "]"}], "\[Rule]", 
        RowBox[{"1", "/", "\[Epsilon]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "After"}], " ", "taking", " ", "\[Epsilon]", " ", 
      "to", " ", "zero", " ", "limit"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", ",", "b"}], ")"}], " ", "will", " ", "be", " ", 
       "related", " ", "to", " ", "z", " ", "by", " ", "z"}], "=", 
      RowBox[{"a", "+", "ib"}]}]}], " ", "***)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "This"}], " ", "expression", " ", "is", " ", 
     "supposed", " ", "to", " ", "be", " ", "equal", " ", "to", " ", "be", " ",
      "the", " ", "Casimir", " ", "eigenvalue", " ", "when", " ", "acting", " ",
      "on", " ", "the", " ", "conformal", " ", "block"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{"Casimir", "=", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", ">", "0"}], " ", "&&", " ", 
       RowBox[{"b", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[Epsilon]", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[CapitalDelta]1", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[CapitalDelta]2", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[CapitalDelta]3", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[CapitalDelta]4", ">", "0"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"L2", "[", "FourPointFunction", "]"}]}], "/", 
           "FourPointFunction"}], "/.", "CoordinateSubstitution"}], "//", 
         "Simplify"}], ")"}], "/.", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.656785813483385*^9, 3.656785931236974*^9}, {
   3.656854036239213*^9, 3.6568543159478817`*^9}, {3.656854348699891*^9, 
   3.656854508635791*^9}, {3.6568546113478613`*^9, 3.6568546731424007`*^9}, 
   3.656855570302017*^9, {3.656856147015519*^9, 3.656856187031459*^9}, {
   3.9066424441946287`*^9, 3.906642562292264*^9}, {3.9066426207047*^9, 
   3.906642629175357*^9}, {3.906642669084496*^9, 3.906642676308216*^9}, {
   3.906642727917713*^9, 3.906642729702219*^9}, {3.9066428185672693`*^9, 
   3.906642849538087*^9}, {3.9066428872749853`*^9, 3.9066428901081*^9}, {
   3.906643052161624*^9, 3.906643081211769*^9}, {3.906643384509528*^9, 
   3.9066434232205267`*^9}, {3.906648561692079*^9, 3.9066485935565367`*^9}, {
   3.9649512474228487`*^9, 3.96495124821132*^9}},
 FontSize->12,ExpressionUUID->"033dd1c9-cbbc-4857-b09d-6b77d8d24751"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"G", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["b", "2"]}], ",", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "a"}], "+", 
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["b", "2"]}]}], "]"}]], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "2"]}], "+", 
         SuperscriptBox["a", "3"], "+", 
         SuperscriptBox["b", "2"], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["b", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[CapitalDelta]1", "-", "\[CapitalDelta]2",
          "-", "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["G", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "a"}], "+", 
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}]}], "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "a"}], "+", 
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "2"]}], "+", 
         SuperscriptBox["a", "3"], "+", 
         SuperscriptBox["b", "2"], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["b", "2"]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["G", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "a"}], "+", 
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["b", "2"]}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[CapitalDelta]1", "-", 
            "\[CapitalDelta]2", "-", "\[CapitalDelta]3", "+", 
            "\[CapitalDelta]4"}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["G", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["b", "2"]}], ",", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "a"}], "+", 
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["b", "2"]}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "a"}], "+", 
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["b", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["G", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                SuperscriptBox["b", "2"]}], ",", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "a"}], "+", 
                SuperscriptBox["a", "2"], "+", 
                SuperscriptBox["b", "2"]}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["b", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["G", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["a", "2"], "+", 
                SuperscriptBox["b", "2"]}], ",", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "a"}], "+", 
                SuperscriptBox["a", "2"], "+", 
                SuperscriptBox["b", "2"]}]}], "]"}]}]}], ")"}]}]}], ")"}]}]}],
      ")"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.9066428718903427`*^9, {3.90664290563358*^9, 3.906642927585108*^9}, 
   3.906643475199201*^9, 3.9066563730146914`*^9},
 FontSize->12,
 CellLabel->"Out[7]=",ExpressionUUID->"08c7e09f-a189-4598-b9a8-6afc69556ef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "Changing"}], " ", "variables"}], ",", " ", 
    RowBox[{"from", " ", 
     RowBox[{"G", "[", 
      RowBox[{"u", ",", "v"}], "]"}], " ", "to", " ", 
     RowBox[{"F", "[", 
      RowBox[{"z", ",", "zbar"}], "]"}]}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
    RowBox[{"F", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "u", "+", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "u"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "u", "-", "v"}], ")"}], "2"]}]], "-", "v"}], 
        ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "u", "-", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "u"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "u", "-", "v"}], ")"}], "2"]}]], "-", "v"}], 
        ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "verifying"}], " ", "that", " ", "the", " ", "change",
      " ", "of", " ", "coordinate", " ", "is", " ", "correct"}], " ", 
    "***)"}], "\[IndentingNewLine]", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"b", ">", "0"}], ",", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "a"}], "+", 
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}]}], "]"}], "//", "Simplify"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.65685566212551*^9, 3.656855752236074*^9}, {
  3.656856192635833*^9, 3.6568562182848883`*^9}, {3.906642931795652*^9, 
  3.906642949054606*^9}, {3.906642995867241*^9, 3.906643030637409*^9}},
 FontSize->12,
 CellLabel->"In[8]:=",ExpressionUUID->"58c7c32e-78c4-437b-9b4c-5ba21db9055e"],

Cell[BoxData[
 RowBox[{"F", "[", 
  RowBox[{
   RowBox[{"a", "+", 
    RowBox[{"\[ImaginaryI]", " ", "b"}]}], ",", 
   RowBox[{"a", "-", 
    RowBox[{"\[ImaginaryI]", " ", "b"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.906642951610051*^9, 3.906643031933916*^9, 
  3.906643478503168*^9, 3.906643513666204*^9, 3.906656373151362*^9},
 FontSize->12,
 CellLabel->"Out[9]=",ExpressionUUID->"6faa9f24-c768-45c5-a0ce-9f1737d02e25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "Casimir"}], " ", "eigenvalue"}], ",", " ", 
    RowBox[{
    "now", " ", "expressed", " ", "in", " ", "terms", " ", "of", " ", 
     RowBox[{"F", "[", 
      RowBox[{"z", ",", "zbar"}], "]"}]}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"CasimirZ", "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"b", ">", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Casimir", "//", "Simplify"}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "+", "zbar"}], ")"}], "/", "2"}]}], ",", 
         RowBox[{"b", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "zbar"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "I"}], ")"}]}]}]}], "}"}]}], "//", "Simplify"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.656855695018105*^9, 3.6568557893853197`*^9}, {
  3.656855828742614*^9, 3.6568558302553453`*^9}, {3.656856221911064*^9, 
  3.6568562366312227`*^9}, {3.9066430428644743`*^9, 3.9066430430890303`*^9}, {
  3.906643114105652*^9, 3.906643122944055*^9}, {3.906643254600272*^9, 
  3.906643276400385*^9}, {3.906643484409214*^9, 3.906643508810659*^9}},
 FontSize->12,
 CellLabel->"In[10]:=",ExpressionUUID->"6a44b5c0-3f09-452f-bffc-40e4da079006"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"z", "+", "zbar"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}]}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"F", "[", 
     RowBox[{"z", ",", "zbar"}], "]"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["zbar", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
       "2", "-", "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
        "\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["F", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "zbar"}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "zbar"}], ")"}], " ", 
      SuperscriptBox["zbar", "2"], " ", 
      RowBox[{
       SuperscriptBox["F", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "zbar"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "2", "-", "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
           "\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["F", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "zbar"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["F", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "zbar"}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.90664303624666*^9, 3.9066430441327257`*^9}, 
   3.906643129196479*^9, 3.9066432779679403`*^9, 3.906643515981627*^9, 
   3.906656373304186*^9},
 FontSize->12,
 CellLabel->"Out[10]=",ExpressionUUID->"d9361a30-9c98-4023-8058-3553d860bfc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Checking"}], " ", "the", " ", "leading", " ", "term", 
    " ", "in", " ", "the", " ", "conformal", " ", "block", " ", "from", " ", 
    "OPE"}], " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"H", "[", 
     RowBox[{"z_", ",", "zbar_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"z", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], ")"}]}], " ", 
     RowBox[{"zbar", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], 
       ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CasimirZ", "/.", 
         RowBox[{"F", "\[Rule]", "H"}]}], ")"}], "//", "Simplify"}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z", "\[Rule]", "0"}], ",", 
       RowBox[{"zbar", "\[Rule]", "0"}]}], "}"}]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.6568558321878567`*^9, 3.6568558398862753`*^9}, {
   3.6568559793370323`*^9, 3.6568560031952333`*^9}, {3.656856238738439*^9, 
   3.656856269028968*^9}, {3.906643220413611*^9, 3.906643220692356*^9}, 
   3.906643282424613*^9, 3.9066435239308643`*^9, 3.9066437191051617`*^9},
 FontSize->12,
 CellLabel->"In[13]:=",ExpressionUUID->"b57608a2-5a69-4603-afa5-3781a91f27e4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["s", "2"], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[CapitalDelta]"}], ")"}], " ", 
   "\[CapitalDelta]"}]}]], "Output",
 CellChangeTimes->{
  3.906643141343199*^9, 3.906643221061661*^9, 3.90664328310286*^9, {
   3.906643519744179*^9, 3.906643524440819*^9}, 3.906643732240129*^9, {
   3.906656373353937*^9, 3.9066563733837442`*^9}},
 FontSize->12,
 CellLabel->"Out[14]=",ExpressionUUID->"5f7421d8-37c5-4c20-a2dc-4c37e7128e11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "The"}], " ", "2", "D", " ", "scalar", " ", 
    "conformal", " ", "block"}], " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Block2D", "[", 
     RowBox[{"z_", ",", "zbar_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"z", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], ")"}]}], " ", 
     RowBox[{"zbar", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], ")"}]}], " ", 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
         "2"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
         "2"}]}], ",", 
       RowBox[{"\[CapitalDelta]", "+", "s"}], ",", "z"}], "]"}], " ", 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
         "2"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
         "2"}]}], ",", 
       RowBox[{"\[CapitalDelta]", "-", "s"}], ",", "zbar"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Checking"}], " ", "that", " ", "it", " ", "has", " ",
       "the", " ", "correct", " ", "Casimir", " ", "by", " ", "Taylor", " ", 
      "expansion", " ", "in", " ", "z"}], ",", " ", "zbar"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"CasimirZ", "-", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["s", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[CapitalDelta]"}], ")"}], " ", 
            "\[CapitalDelta]"}]}], ")"}]}], "/.", 
        RowBox[{"F", "\[Rule]", "Block2D"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z", "\[Rule]", 
          RowBox[{"\[Epsilon]", " ", "z"}]}], ",", 
         RowBox[{"zbar", "\[Rule]", 
          RowBox[{"\[Epsilon]", " ", "zbar"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{"a_", ",", "b_", ",", "c_", ",", 
          RowBox[{"\[Epsilon]", " ", "x_"}]}], "]"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Hypergeometric2F1", "[", 
           RowBox[{"a", ",", "b", ",", "c", ",", 
            RowBox[{"\[Epsilon]", " ", "x"}]}], "]"}], "+", 
          RowBox[{
           RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", "4"}]}], ")"}]}], 
       "}"}]}], ")"}], "//", "Simplify"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "Checking"}], " ", "that", " ", "it", " ", "has", " ",
      "the", " ", "correct", " ", "Casimir", " ", "by", " ", "plugging", " ", 
     "in", " ", "random", " ", "numerical", " ", "values"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CasimirZ", "-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["s", "2"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[CapitalDelta]"}], ")"}], " ", 
         "\[CapitalDelta]"}]}], ")"}]}], "/.", 
     RowBox[{"F", "\[Rule]", "Block2D"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "\[Rule]", ".3"}], ",", 
      RowBox[{"zbar", "\[Rule]", ".4"}], ",", 
      RowBox[{"\[CapitalDelta]", "\[Rule]", "1.3"}], ",", 
      RowBox[{"s", "\[Rule]", "1"}], ",", 
      RowBox[{"\[CapitalDelta]1", "\[Rule]", "1.7"}], ",", 
      RowBox[{"\[CapitalDelta]2", "\[Rule]", "1.8"}], ",", 
      RowBox[{"\[CapitalDelta]3", "\[Rule]", "1.22"}], ",", 
      RowBox[{"\[CapitalDelta]4", "\[Rule]", "1.25"}]}], "}"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.6567857953121147`*^9, 3.6567857954402313`*^9}, {
  3.906643558097286*^9, 3.906643594653782*^9}, {3.9066436370108843`*^9, 
  3.906643706347066*^9}, {3.906643737492578*^9, 3.9066439569489717`*^9}, {
  3.90664398850628*^9, 3.906643992126376*^9}, {3.906644049261278*^9, 
  3.9066440496060543`*^9}, {3.906644086233597*^9, 3.906644137706318*^9}, {
  3.906644176087817*^9, 3.906644338544092*^9}},
 FontSize->12,
 CellLabel->"In[15]:=",ExpressionUUID->"9c411356-30f2-4689-bf40-b875806594ae"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.90664370107522*^9, 3.9066438057527237`*^9}, {
   3.906643844109153*^9, 3.906643935017935*^9}, 3.9066440229259853`*^9, 
   3.906644054600718*^9, {3.906644132443173*^9, 3.906644153480288*^9}, {
   3.906644192913817*^9, 3.906644226037921*^9}, {3.906644294213558*^9, 
   3.9066443389057503`*^9}, 3.906656384767541*^9},
 FontSize->12,
 CellLabel->"Out[16]=",ExpressionUUID->"aa9a51ba-260f-43e2-809c-820e01e1bd05"],

Cell[BoxData[
 RowBox[{"-", "5.551115123125783`*^-17"}]], "Output",
 CellChangeTimes->{{3.90664370107522*^9, 3.9066438057527237`*^9}, {
   3.906643844109153*^9, 3.906643935017935*^9}, 3.9066440229259853`*^9, 
   3.906644054600718*^9, {3.906644132443173*^9, 3.906644153480288*^9}, {
   3.906644192913817*^9, 3.906644226037921*^9}, {3.906644294213558*^9, 
   3.9066443389057503`*^9}, 3.906656384785293*^9},
 FontSize->12,
 CellLabel->"Out[17]=",ExpressionUUID->"6fe170c6-418d-4ebf-92c4-a4086c60bfa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "testing"}], " ", "numerical", " ", "values", " ", 
    "of", " ", "the", " ", "conformal", " ", "block", " ", "itself"}], " ", 
   "***)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Block2D", "[", 
       RowBox[{"x", ",", "x"}], "]"}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]1", "\[Rule]", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{"\[CapitalDelta]2", "\[Rule]", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{"\[CapitalDelta]3", "\[Rule]", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{"\[CapitalDelta]4", "\[Rule]", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{"\[CapitalDelta]", "\[Rule]", "1.5"}], ",", 
       RowBox[{"s", "\[Rule]", "0"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65651678041634*^9, 3.656516807963438*^9}, 
   3.656516874439443*^9, {3.656858671745625*^9, 3.656858696521428*^9}, {
   3.6568587311644573`*^9, 3.6568587506245317`*^9}, {3.9066492809972553`*^9, 
   3.90664930279784*^9}, {3.906649462401545*^9, 3.9066494899758244`*^9}, {
   3.906656346632926*^9, 3.9066563468002253`*^9}, {3.906657606447538*^9, 
   3.906657613784474*^9}, 3.906659252817543*^9},
 FontSize->12,
 CellLabel->
  "In[266]:=",ExpressionUUID->"39b1b154-1a06-41ee-8135-c0dbf6e3dd52"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkGs8FPgChmU0BtMwFMb1uLcldWwUG++/Q7U4bFGS3EXRnlyyrrmMXFss
VkiKbDYSY0MXE8p1V8o9VC4JYWbEJlTUdj68v+fD8+X5vWoefrZewkJCQhlf
939aek13P5w5YpocYHuVUpxsImKm4D/K2omegEkVxeRnpt8W5OZXscxxRF/p
1a6xt6YTSprsEG0bbFaJ9DGxWDO1ejJw+wrrMP7azCwrSaFCM0W5+IvqMaRl
umU7xkti1dIzx13bBawJ53r+vY04emK5LpN1AgcXYsP0eapoNlO425TvDWWu
uIMxXQM7NEwqF1V9YB+vV+t7UBu08dgie+0zEGh4lV912Ibh7YlmqawgzARY
n0rJN0RWgfxDreM/4dpv7akbW3bDUvLmnvr8YNDaLlYd/myMO3MdBm9VwzA4
9KrP8BqQVi69+ZB2FG7O3GcvPjVH4aYfEi6w4lD9E2vIin4QEU9ymu1r4+Bc
kktx6Tz4tWNMWON4PMY/NlpHXTwE+vuAaG5+Avaf/m22fosdQvuyQvmqyTC+
0ta2I9Qeh3597mujnQb70PP+yTnO0LXSKFVoSwP15XZz20QX0Cg/vpk6+QvY
9NjBkjBXuN7//EfD4XS01KQyF2+7YdM36XoO2RlQKi2JkajwAJtWpZPMysLA
jpA9ocPe2HIgI+m2fxZinC8+PRZ0Ej3xfjMv2rJQrLOwkEY/BU2Kbple8EXE
XBCNmiU+aF27rtfXkw3yUm9Z5/5p0N9lG6imXELbkPnxD4H+yB0ON6v5fBUU
3rWCo9LB2Kt07PrIkQIcfiNRuDUgGLOOu9bTyguQKWZsn9YVDBV+mGf5tkL8
JyA7aS09BH4+hlpCLwsxKHtP4ax8GKRPcEqKdxfBye1skdnec3A4do0zv3Ad
c6cT17Ij2Hj74rB4kUIxZNT/PlLLYSPBheZlZ1aME2H9wZsm2Kjy9FO4k1UM
zhAlOtA6FowzJvERu36HAUu0oUn9PFpihxypkTdg6P79tuKBOOjfYlKVaDdh
Gb2+5YJPEiS+sJ0OqHDAOE/tZG1MR67PURfd/RxMSvr0MXamQ7NP1415hoOp
fz3KUvz6u2npgOeLOg52a05qnctKx/3S7Jq7epVo/ONRmYNsBgR2/AdWTyvR
RPfKDVXJxJGSnMdnN9yGXNG38eokC1qH5qabfq7Gv8UC+9rbchHy1Ai5i/fh
QDOo/XPyGuSqmSPr1jXg0VrqX9sf3sCdcbOOzj2NOLDOfEH9ZQUafa8oHuM3
Y0Bzev6eTRXea5tIlv+vDSa9+VKe++9C+EOZlKJWO6rkRW6VLHNh+MXtjl1F
B3pU46ZbnR6iI27n09Ytnfjuivi6kLFGqKbzPpTOdaGs/Ud3o+4W8JZHR/p3
9EApZX/0YPOfuD7LbWek9cJ2j6ps984OMJRvvJ2Y6EPX943hV/s7keJT412o
+Qzurr/S02q7sUTKJk5FD+CNsMq8UH8vgvSbq2WbBpGy50nj2lw/Riuaf+5W
ew7l0LU+A9dBfPLtu/xN+Au8ard9PDL/HFv3in725r7ElnnJsCj2MA4UqZ38
Q24E8Tm2z+RMxxCi7Kr+ymkUH0ZPaC9xX0GXf0RiwHoMTx8kGRX99zVkJOdp
zR/HcLwuR8VPdRIiDZc5GvmvMHXvU7Ds4hRO7+QOiVmNo8Kt9XmL3AzKLDwK
65fGEfS2R0vGhYf3PAWpqezX4HteHrlSKkCN3QFKlvkEJtpOmKTpzSP6+/iC
6qkJpHp/EqGlLUBt2HLwt/hJlCqZOLLWv4Pxrrgslv4ULk41WKk0LcJJpfPD
ut4ppP5o+iwgdQnv21PH/dlvsMZVbRKvXkGuiEuQreY0nGhc+dKFj5AZqSkS
bp5GbPmmrenea1gfyT5sFDCDR2/rusMMhIhQqQtnXHoW12PFBYo960hgHidV
unEWM3XJjmFDFHJ3NS+xsXkWScI7ddTHKWTVJYEd2DaLhF8innXNUkiihvNP
PR2z6BZ6voxVCsm/Je6cOTALI1fGem9VEdJS76UrLZhFTaKUz4C3CJF/rfiY
Kc8DRzmhP/ajCKnbmkRjnuHB2vr1dLMhlRj2yT3J9OfhnJ/Ye39CJZXnbmRs
PMsDd6z5bw1LKil60qogH8rDaNTqxFVnKknyW79NNZYH05CWizNxVGJbFXto
WzYPfz/kTA31Uckb48g8i3oehIwaL50MFyVMy0DdWAYfTBcTevQIjRQ+kpQw
ZvKxuDciT59HIzuMymcWZPhYjpSOXFimEZvN07+7s/hIey0Sn8EUIxeoLmp7
NfmwGs1Id9onRkSaLGSFjPmQVfcq1OOIkaXv1ISivPjIXP511ipFnMRX1Y8Y
nOJjtGvuTVqeONm41alO4PvVz9bWjpaIk28VcsKd/fn45NBmUtYiTvxX6O/3
RPAxZKVsy/8iTmaqV2Y+pfOxaj5urBsiQV5u6+oNe8AHZfPNRKcAOingMSMp
DXx4XvIzCY2hE49SO+3UR3zkUniLRb/QyYzmQGhhKx8ethLdWhV0sqQ4otzW
xYd8TpbmBI9OmOL8kxsn+XAzY/9w3HcD2T8lulqxQYCGAwIuJYhBxK5bFO+W
EiA1Muv4rngG6XD/2aZRWgBn6VuPI7MZxG6Yca1fTgCphrxys/sM4ta3af+q
mgBbLarYd78wSESjRrqFoQA36v9kuqdLksqr0JxwEUD3L4/weTcp8i78nai7
uwADtwrtb/lKEcOjN3jDngIkGEn1ng2SIlxJyaqBUwIMhiUytJOkSGvMyN7H
gQJo2Z63UaiUIi88Il1vJwjAUhgXOAgzCVWHmxdTIYAotbxwpZJJLCh+UWuV
Auybz97l8oBJUkbVPcKrBLA+F6PT28YkzNwL3wTdEyDKQqaYN8IkSmKO9042
ClBsXGv4YoM00eet9Ns8E+Ayf8Z/4Iw0ceYYMpU/C8D9vbEkzFSG3HFcYXQJ
zSG5VPPOPmsZwqDW0s9T5qCntHRpi5MMeehkQpuhzSFmQUSShMsQdXHzL9Uy
c4hTX1EuuitDVDoP7ZOVnUPzdn0dbosM+QeqN0AA
       "]]},
     Annotation[#, "Charting`Private`Tag$1680388#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 4.943096744955202}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.906649286092248*^9, 3.90664930706649*^9}, {
   3.906649466163218*^9, 3.906649490384594*^9}, 3.906656385968289*^9, 
   3.90665761586238*^9, 3.906659254271286*^9},
 FontSize->12,
 CellLabel->
  "Out[266]=",ExpressionUUID->"b2511d70-54f1-46c1-b153-9a2a8b4625c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "After"}], " ", "setting", " ", "\[CapitalDelta]1"}],
      "=", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"\[CapitalDelta]3", "=", "\[CapitalDelta]4"}]}]}], ",", " ", 
    RowBox[{
    "contribution", " ", "to", " ", "the", " ", "crossing", " ", "equation"}],
     ",", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v", "\[CapitalDelta]1"], 
      RowBox[{"F", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["u", "\[CapitalDelta]1"], 
      RowBox[{"F", "[", 
       RowBox[{"v", ",", "u"}], "]"}]}]}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CrossingBlock", "[", 
    RowBox[{"z_", ",", "zbar_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}], "^", "\[CapitalDelta]1"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "zbar"}], ")"}], "^", "\[CapitalDelta]1"}], " ", 
       RowBox[{"Block2D", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"z", "^", "\[CapitalDelta]1"}], " ", 
       RowBox[{"zbar", "^", "\[CapitalDelta]1"}], " ", 
       RowBox[{"Block2D", "[", 
        RowBox[{
         RowBox[{"1", "-", "z"}], ",", 
         RowBox[{"1", "-", "zbar"}]}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]2", "->", "\[CapitalDelta]1"}], ",", 
       RowBox[{"\[CapitalDelta]3", "->", "\[CapitalDelta]1"}], ",", 
       RowBox[{"\[CapitalDelta]4", "->", "\[CapitalDelta]1"}]}], "}"}]}], "//",
     "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.656517113095985*^9, 3.6565171960452347`*^9}, {
  3.6565182137828197`*^9, 3.656518216189303*^9}, {3.656518298821158*^9, 
  3.656518304413015*^9}, {3.656518338961588*^9, 3.6565183424981127`*^9}, {
  3.6565185718441153`*^9, 3.656518576100494*^9}, {3.656858515109173*^9, 
  3.656858608824276*^9}, {3.90665640349431*^9, 3.906656465791971*^9}},
 FontSize->12,
 CellLabel->"In[19]:=",ExpressionUUID->"5854f673-e70c-42bc-8b9c-2073ad914e1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "z"}], ")"}], 
     FractionBox[
      RowBox[{"s", "+", "\[CapitalDelta]"}], "2"]]}], " ", 
   SuperscriptBox["z", "\[CapitalDelta]1"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "zbar"}], ")"}], 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}]], " ", 
   SuperscriptBox["zbar", "\[CapitalDelta]1"], " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ",", 
     RowBox[{"1", "-", "zbar"}]}], "]"}], " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
     FractionBox[
      RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
     RowBox[{"s", "+", "\[CapitalDelta]"}], ",", 
     RowBox[{"1", "-", "z"}]}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "z"}], ")"}], "\[CapitalDelta]1"], " ", 
   SuperscriptBox["z", 
    FractionBox[
     RowBox[{"s", "+", "\[CapitalDelta]"}], "2"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "zbar"}], ")"}], "\[CapitalDelta]1"], " ", 
   SuperscriptBox["zbar", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}]], " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ",", "zbar"}], "]"}], " ", 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
     FractionBox[
      RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
     RowBox[{"s", "+", "\[CapitalDelta]"}], ",", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.9066564683800783`*^9},
 FontSize->12,
 CellLabel->"Out[19]=",ExpressionUUID->"f5d50b46-fb58-42ce-ba5b-aba55cc0b634"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "Extracting"}], " ", "the", " ", "x", " ", "and", " ", 
     RowBox[{"x", "^", "3"}], " ", "terms", " ", "in", " ", "the", " ", "z"}],
     "=", 
    RowBox[{"zbar", "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "+", 
      RowBox[{"x", " ", "expansion", " ", "of", " ", "CrossingBlock"}]}]}]}], 
   " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{"P2D", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"series", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"CrossingBlock", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "2"}], "+", "x"}], ",", 
          RowBox[{
           RowBox[{"1", "/", "2"}], "+", "x"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"O", "[", "x", "]"}], "^", "4"}]}], "//", "N"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SeriesCoefficient", "[", 
        RowBox[{"series", ",", "1"}], "]"}], ",", 
       RowBox[{"SeriesCoefficient", "[", 
        RowBox[{"series", ",", "3"}], "]"}]}], "}"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.656517532669936*^9, 3.656517536029497*^9}, {
  3.656517837935955*^9, 3.656517839500464*^9}, {3.6565182389182158`*^9, 
  3.656518258389674*^9}, {3.656858865780608*^9, 3.656858925125469*^9}, {
  3.906656480552705*^9, 3.906656538984592*^9}, {3.906656598718992*^9, 
  3.906656606775907*^9}, {3.906656708028716*^9, 3.9066567772577143`*^9}},
 FontSize->12,
 CellLabel->"In[32]:=",ExpressionUUID->"7d309ec3-65fb-4142-b611-e5e56934c397"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "Some"}], " ", "numerical", " ", "values", " ", "of", 
     " ", "P2D"}], ",", " ", 
    RowBox[{
     RowBox[{"with", " ", "\[CapitalDelta]1"}], "=", "2"}], ",", " ", 
    RowBox[{
    "at", " ", "different", " ", "values", " ", "of", " ", 
     "\[CapitalDelta]"}], ",", " ", 
    RowBox[{
     RowBox[{"spin", " ", "s"}], "=", "0"}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"weight", ",", 
      RowBox[{"P2D", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]1", "->", 
          RowBox[{"1", "/", "8"}]}], ",", 
         RowBox[{"\[CapitalDelta]", "->", "weight"}], ",", 
         RowBox[{"s", "->", "0"}]}], "}"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"weight", ",", "0", ",", "6", ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.656518360476411*^9, 3.6565183951021767`*^9}, {
  3.656858968999301*^9, 3.656859020071352*^9}, {3.906656788349955*^9, 
  3.9066568466951437`*^9}, {3.906657634392343*^9, 3.906657635177381*^9}},
 FontSize->12,
 CellLabel->"In[71]:=",ExpressionUUID->"a2af9ec6-390c-46ef-9f8d-c8fbf7801a94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8408964152537145`"}], ",", 
       RowBox[{"-", "0.7357843633470001`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"2.827972854212177`", ",", "1.4021971152564467`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"4.258908617906955`", ",", "11.874418759126234`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"4.510447092651888`", ",", "34.904157471064316`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"4.184120116516321`", ",", "64.23650471789199`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"3.618333840646016`", ",", "92.74350086207082`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"{", 
      RowBox[{"2.9956352110781004`", ",", "115.56100455563927`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9066568304411983`*^9, 3.906656847326037*^9}, 
   3.906657636896285*^9},
 FontSize->12,
 CellLabel->"Out[71]=",ExpressionUUID->"99b0cf77-0dc5-45ac-b5bf-cca2b80676ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxweight", "=", "30"}], ";", 
  RowBox[{"weightstep", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotP2D", "[", 
   RowBox[{"weight1_", ",", "spin_", ",", "gap_", ",", "color_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"P2D", "/", 
         RowBox[{"1.1", "^", 
          RowBox[{"(", "spin", ")"}]}]}], "/", 
        RowBox[{"2", "^", "weight"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]1", "->", "weight1"}], ",", 
         RowBox[{"\[CapitalDelta]", "->", "weight"}], ",", 
         RowBox[{"s", "->", "spin"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"weight", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"spin", ",", "gap"}], "]"}], ",", "maxweight", ",", 
        "weightstep"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
       RowBox[{"5", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", ".01", "]"}], ",", "color"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotIdentity", "[", "weight1_", "]"}], ":=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P2D", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]1", "->", "weight1"}], ",", 
         RowBox[{"\[CapitalDelta]", "->", "0"}], ",", 
         RowBox[{"s", "->", "0"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
        RowBox[{"50", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", ".015", "]"}], ",", "Black"}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GapPlot", "[", 
    RowBox[{"weight1_", ",", "gap_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"PlotP2D", "[", 
      RowBox[{"weight1", ",", "0", ",", "gap", ",", "Red"}], "]"}], ",", 
     RowBox[{"PlotP2D", "[", 
      RowBox[{"weight1", ",", "2", ",", "0", ",", "Brown"}], "]"}], ",", 
     RowBox[{"PlotP2D", "[", 
      RowBox[{"weight1", ",", "4", ",", "0", ",", "Blue"}], "]"}], ",", 
     RowBox[{"PlotIdentity", "[", "weight1", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Plotting"}], " ", "the", " ", "order", " ", "x", " ",
       "and", " ", 
      RowBox[{"x", "^", "3"}], " ", "components", " ", "of", " ", 
      "CrossingBlock", " ", 
      RowBox[{"(", 
       RowBox[{
       "suitably", " ", "rescaled", " ", "for", " ", "visualization"}], ")"}],
       " ", "for", " ", "external", " ", "weight", " ", "\[CapitalDelta]1"}], 
     "=", 
     RowBox[{"1", "/", "8"}]}], ",", " ", 
    RowBox[{
    "a", " ", "range", " ", "of", " ", "internal", " ", "weight", " ", 
     "\[CapitalDelta]"}], ",", " ", 
    RowBox[{
     RowBox[{"spin", " ", "s"}], "=", "0"}], ",", "2", ",", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"in", " ", "red"}], ",", " ", "brown", ",", " ", "blue"}], 
      ")"}], " ", "with", " ", "scalar", " ", "gap", " ", "0"}], ",", " ", 
    "1", ",", " ", 
    RowBox[{"and", " ", "2", " ", "respectively"}]}], " ", "***)"}]}], "\[IndentingNewLine]", 
 RowBox[{"GapPlot", "[", 
  RowBox[{
   RowBox[{"1", "/", "8"}], ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"GapPlot", "[", 
  RowBox[{
   RowBox[{"1", "/", "8"}], ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"GapPlot", "[", 
  RowBox[{
   RowBox[{"1", "/", "8"}], ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQvUv25a7ndq8dt/75dAhEKxwoOgmiX+X+vwKim+Qs
74Jo208r3oFojccCX0E0U9cFMK3D4MzwAkhX1OWA6Sff1ThB9NtPm3hBtO6S
XAkQvaqlHEy3/7bzjpZ+6zhJ7xyYjvOUDQDRp+qt4kH0Fj6+FBA9cZtLCYh+
Mu11FYhOyZq5AESfm9W8FkS/dr+3H0QnVGodAdE1Tw1Og+hpv/6cA9EvBNnP
g+g13Nseg2iDDJMXIHqB75F3IPqExbnvIPrpxVV/QbS5624w7T4vSSoGSLu8
D9IC0VXL3huBaK9GWVMQ/Uz1qDWIfqXwAUzLzDRxAtHf184H06tsZ7qB6FMa
8aEguumIbzSI3nFONAFEP5B7lAKibyx8BaYB3ui++Q==
  "],
 FontSize->12,
 CellLabel->
  "In[257]:=",ExpressionUUID->"05c4389f-c1ee-416b-8639-a97aa27894cf"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.6, 0.4, 0.2], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwVl2c81w8Xho1QiKIyQzZlhojvOT/JKKOIRBmhUPZIiOxooDLKDpE9K7JD
ZvZoGCkrkhEy8/yfN+d+e7+5P9d1jlg46l2jICMjk/rv/D/N5GTjkopm8e/4
nqTIXnLS97WnfVNks8iUd/DefBkFaZ7xoVylzgzK0i8Xm0VRkrSUBr9/jv+J
bpY+eVPXdpFc+5Y9JqenMbSphTVEjIqktpNm6SI3jfzF8EZ2lor0bE4mYTNo
CuWHLS4tJFGTPNfZxuf7JnHMc3pXkQYNyab/X1G+4CRuWwZ6uU/TkKjys7ru
e02giY4xCX13ky582m5o6xrH4l+ilw/Q7iHVGK3sKhAZR/O7p6t2HuwhpXkM
09gG/8Ctvw7++3fRkpzl1OUEx7+jxu7D26YutKQvVpXVdGrf8X2ffwnFIC2J
+p7yBfmcMaQropPilKYjvbAd72lgHkORoWP9nYF0pPdntsca7n7DNU2eCLV2
OtJzvdTJ8JFRdDexfJxHR09ibWm/l98wgrcfDv2TPUVPihYViFktGsa9SQxR
B5zoSZ0KHCSHjCE8l0fo+EfTk3obNXMPpX7FMtc9TG+L6UneHw6+mE3/ggx1
hXp/muhJSbLUh8fzP+Ocz+I79356UvnziLGlmk94o1Hl092v9KRvRQaL1J8G
kUKLskX/Cz3pkYAkJf3fAdxJXp2T76EnBQhNzcxwDqCOZUiycz09ySDh8VrY
mX5sMhiZPJ1PT3pSYnXu450+fL9yWHH9CT0pw6RQJvZNL6rO553qd6YnnTtU
bNi82oORi3XPuDXpSSulg0wkoge59Chjubj/60v+L2MorBuFGwz5WH/Tkcxt
RJ29h7owk6rQX7eMjtTFJsOxLtOFzs4NIoy+dKRXs48iLAU7Ubw0JSUK6Ui+
d1TcKH5/RBaFIQP+bVpS0VL3n+DadmTmNg7aeUNLEjpXN5me2Ia8gbaHrtvT
kpKSC4UPBbfiw/uHH8Xw0JJWqg+3R95qwdHakpmPXXtIhmUJGu3OzVi1NpKs
7ruHNFexnOZ3qwn3Drd7EyJ7SGNXImKuB31A+/zKpKnu3aQ/pkk5J+IbUUzp
n8Od27tJXdH6JvnvGrBkSTJS8vBuErPMPbGQ7/Wo0hU/JFdLQ6I3oK7wZqrH
lxK3zWuv0pA0vVZ6tc6+xyuRtIZb5DQkXW7r4LKwOlzquybC+oKatNvYU/hu
Vy2e7X7jgEhNulx2zN6CqxaTHf7OxQ9RkbRV9D+cnaxGJ+6ZFANPKtLw5/Pk
bIlVeGwAy54cpCKJHiXOVZhXYrFIe4pH0S7SrqVBvVrJCmxszd0jpL2LZPxU
4Uk5/Tv8NXp2tm6akmTR+vW24nIZNmpyRVgHUZJUxs0NhyffYowa5zNZHkpS
ptTFqwrjb1CPqZJOo5KCNPhQOOvX7Gu0+OFzufwSBSnbxoc9drsUy6+OOaSu
kJOSG7hcv7KW4pzluzz2p+Skpej0k2ZECXKU9dLKS5GTDpZQlLfeKMbt5S4G
xi4y0s293L+aU4qwwFr5R7EjGamI7PEdmtFCvEAaNJHdR0YKepNZJCdQiJdV
HFh0LHfQlS6jhWkyH08ZZXuKv/qHoemMP20j87CeOYdLeH4bP3rY23/XyEXl
1I4Vfflt9Kjs7V9gyMHwLd6y9sAtLKNQuMTwPQtnB/r+pXdvYn9JRUNZ3Svk
JL9utHhkEx3eJti45GVizVKSZb3bBlaq0y3WpWfgqceSX0Vb1zEIvmpLZ77E
dKetUlnedSxMVIrSK03Hn8sbUgt31vBwVejY67Y0HP7w9o/Vl78obHkC/vxK
RRcG032JJ/9i2D56/5csqdjdqSOYkriKwqth0jc1X2BumpKjG+UqLptWOE3e
S8Grnc09XHYrSCQUZHg+T0Y/n6S11MFlfKj7MkX8eBK2Be8xplRbxurfr5VP
DyUgfR/1BeW3f/DHiUxttqh4zNn3Udrk6B+sDYt6yWQch7qv2zUvpi6hU+f4
gXix56gpI0R5lHMJo7R1ufkYnmGrRuLop2eLWGuzq4tnMwYZ5pdjr7Auouie
gTDG5WhUGBnkKY5bwGcTWZ8c16Lwc/HRd33cC3ixfkmliSYKGcJa//qcm0fa
hCu8KUee4smmooZ+q99o/jzJIUz1CSosMZWm3Z1D2Xm3xEOuj/Gp/WL05+Rf
WNle5zaaFYlnb6yo2TTO4r/GzKadngg8t5u7ERdmUKw0pVzCMhxHC+6rnOOZ
wbBFL9MYykfYL6ZFBBv8xJ4gg6aAkgfYrnv9XmfENI4WT0hqutxHueXxqxyd
U+jIL1ijhWFob8cdasA8hcGPhRVn2ULxUYwI6caVSbwcSNYbSX4PryR42qpm
T+DZk1Vf81aCMaC6+X7P1jg6GNtEl60EYaKl7OjWhXE88fLfwjHyIOwpzLUo
KPiB1VWGlx6yBKLY3IvhPsYfePHdooeJfAAqTLMtGLp9Rwa2aNpjlv6YGL6P
k294DO0eNWaExvphdwt08pwdw/cM0xz7s+/i/WI1O8WKb5gV1b5xX84Xyfdo
XTCR/IaZXZHkFb13UCd+u3dMbxQ5N8seTvh5I7Wrolqd1gh6HPX6eZHwQgO3
X7TiOsPI7Ka9y3K3J1rOdlhtXxxCyiAv9mtjHrjb6+vgLuuvaEMKdKhpuoX7
LDxk2H2/oDez8c6Xd+6ocqf9BXPCZ6z9p3VK6J0byg6fz2yq/YSmgxGjbI2u
yDV+T3bvr0FsdT7vLP7VBauFqPMrDg+i0ASqTm46o75D3Uy2wQAmeNzhaRZ0
Rofo16dLnvYjr2QzlfllJ6ygnnqeN9iHpksLmz7SjhjO0KbneqQP86+yNK7U
2OOjI1zWI0692DGTpn/F1A6tByUsWhp7MHVCzGme/iZ2sOdeZ+TpweAe94sr
rbZ4qXla6uHdbjwrf8GqMtYG5YuruTjHu5AsTqkqzsUaf5UvCyVod+FEucbf
OePraDMa0tfr0YkktbBW9vPXcKn1t2aTSQfarybXP9S1wodqTn5dWh/RiMpp
/bWpJc5/XrqXf7odOT93NDJ4WKBJjHzjEdU27Alj8T8YdxXnOe9Pz2q34q+B
YJJOkzmuPR6Y7zRtwV0z3uLBW2boQaUr+MSjGU1nOkoofEzxy40ovrXYJnxa
HNSixGiCJzsutjbXfEBKR6Vmq+LL2MlQqtb+uxF3ycrD62vG2EXGSt/O34hP
eM+EOQsboertzp4nVxuwR33NbWLdEMfM1KN/pdfjP3g/ZPX5Ig6mkT3K+P0e
/ZqV9DQ/GGCcOUpEwHucEdn5sFmjjyzO3iK3ouowz07o5LfGC9gm8Mzk2EIt
hswb2toO6uHt5OnhQN1ajNpDG8ywrItk63Q9yU416FfHPK3FoYvnfdZaWzSq
MakPezK1zuMc08t3kkercGq1UPM84zkMPzq55M9SidVke8+XxWqjz9zcut3e
Cqwr67iXL6WFJZwlfmn/ceegxp0Uy6GzOPNK3OjzgXLcOaFRsD/2DK6U3rJr
ECjDDy+JD5vmGkjlV1XIiW/RVooq3F5BHSUlTnInmL9BVjWm8Xfcamh+kDz7
X9hrbJGk9UFmVTR62yVFUVGKF1TkH5gyn8YWh0/e1/+UYNa/HzYB3CoYo+gj
NCddgvWTZmqcJ05h4DZPupFnMZKfyvqaZqSMtbsWBJ0/FCHpqcvh2BASZiSU
pWywFaHayemZP16Io786S6pdC3HPterNnE0Cs2IZ9BkzCzBsJf2uW7gSMry1
7T/lko9PLpn8dJdWxFPc6WPFGnkoesAo6vukAnpTXAvYFslFievH9Faz5fG8
b3Zd/cEc5KZn2F7xOYHiYi9jsuiyMZdOjFHCTA7JoavHgC4Ly59kwl9tWaQ6
d4bR5cArfCG6cDj3jAx+mL8Rly2YibThTrXFusex3TT3Wr5yBq45Klp6XJPG
utbmP+LXXmK2XQqbfZAU+hySVP8WmY7X5Tx89uZLItfQ+67bDWk4mLfYWFgv
gdHHvpoW7aRiGu8OdyaIY6RmGr3qqVT8LM44d6D9GOq7VkgtPniBtdnPxjlu
HkVqNwk996EUfHyyhmmaXRTv9lUyPD2egsmj0mYFX4RxZbBXlJM3GUdo/NmK
soRwwn+I/9LPRMxjjrsve08QFV99OmVbmYBGn88/eOQigMyF6z7f4+JRWDSB
m+kmPz6wPeRuHBSH0lVWh/id+PCTJLXuzdvPsUokN++oPy+esk/MKr71DHd3
fD35LPEITvqdvdntG4vZMfSDow08KLVbr+pmZAyKoyzXv1/c+IEza1o4Jxo7
j5aIL1pyYYSAHZZ0ROHHE/5U2XOcWPJsYVfZxlPUcGrfOB3GgbpLjhenxJ9i
D4v2gZ+y7PiR8uyB5RtPMMksOaRpiRWp0ofanuY/xhwtSyWOGha0Kfz9wnc9
EhszxiyE4w5h0YlcwlEzEpmKVzcVAw/iLlFLG1WNCHxxnNo9x/MAzpqp/Syk
DsfyiepTfXeYMZAx2Ta9+yFe3H3Ln+MhE5JUiyszXz1AQnDy+VzGflT+1ram
9uA+OntyzVS17/vPS9IuMHmGoYTAxDj9BiMqMdTtJDqH4sje2/QRDgxo4vqN
NsDtHo5MBZIxrtJjTL46YewfgrWS8ivpEXToOrF/ozE2GJPUepjdTtKiUsE1
Hpu3Qbh2yvJv1spuVKR+Ojc5GohW515K+NbSYHQo87fZfYH4YP15i1QcNerM
W8fznQ1Az6P5wwwBVNiW8bGdeOCPSg58fDYeu/C3d9O+uV4/7N/0C33mSYnN
xm6fJ/n8cGKsu4silALbNUxzPqz4IrLdlt2fSo47phNFJ4t8sGnVlF62iQwH
+TfupXveQYuQkvH2uR3obDEeCtTxxjy+zSX1q//gup04t4mEF7KpRLwZn9qC
q7vDDcs5PPHOpaYrZX6b0M97fUOA+TbqsHbiD9EN+Lf/1XuZgx64vf+tWeTE
Gnj+qLvvfeQWWs12jS0X/IWre/SFok64YxDj3phzYatgz8GpwmnohmRkzAHT
TivAzkev9PquK/Zndznvu74MEQwh5LuKXDBInvSIx+YPlO8r+VM444znSgX/
eN5aAsHh3/XWx5xRviLyUnDkIvgNwMVBdydU39ufW/x6AX5/j1O3fOSIfd0d
gYut8yBo16BkSDig/MHHi1nwGyynE0U2Nuww9F/Dj+jGX2DRHS1Z13gT31xT
DWg2nQX+W7aNgok38MX9s5rme2ZgtNnGO9vPFjudwsNCGqYh0NWuv8vRBuVW
5rocIqaAbsOJhe+GNTpcVvC/aDsJA+StbBKO1zEobkYnSHcCogTHDt/zvYZV
B7y71dXHIfKgW3pdrBXeTD7Isn7mB3Cvqqp6vrPETwNWxNql72DrLh+qNWmB
J3NJjHmuY8DEWlczzG6BDLNkmSHPv4FDbcF4j+FV3FHzEl19OgoGaYqu/Qnm
OPg7jIVhzwgcN332hL/XDC1dldguPx4CVospOldvU+zSLlKYP/oVWuL4+rak
TPCaA9Pq1OBnyFYXdhNfvYyyRgHF9lGfYNU3VtmryRir9ubLlJgPgvuNBMFL
L41Qbb6Yf0VxAOZES26qRlzCjhj6KE+BfqCVuBbYEGSIV7aV70dw9oH1mZ+D
V4IvImMXfWw4Ty+068TGxUUa4JOlMtsByR4Y8+WOZsjQR+czPvYdWt3w2uXW
lvZ/3OTqeXxjwrULumuuqy7N6WFp4VNDXs1O0Fks33jGrYdhD/+eT3j/Ec5P
z0T9MNJFKyGqa6DdDhJH9C94JJzHY090zrPPtALfw+diGx/PYU1JyAXtZy3A
XnXO+5SLDi7ED7/cudgM1KlMFEIC2liawvXbUqAJ2BP2ZO6d1MQ2e3j/huID
9Miv+luUnkV9Wjox+N0ADCcMkmMjziCjT4nCmal6OGTU1cDvoYG/pL4FScy9
B72Dv07cu6GOhfGsved36uDn+FCIsq0amhXL5h44XAeHYpwufHVRRfO1tM2f
qrUgmLvGPRZyGnf43W88WqoGTQ8+rvF0FYx0G93Ssa+CFb7iHc/2U3hz4cZb
rs0KWE3aaFbaVsZ6lmf1DPHvYPI1/8tWOWU0SyzpV9IqByt7psrG2yTUV5VN
6t5bBlXczcyvghHHtVaVyUbfwPzSficQAWTbmP1EVfMaQowS5199VcK9A4f+
COeVArlNbaVGgiL6Dhnzlb8qAbqU80HBN05isc9aBENRMewfZDr+UVUB97++
GhrWWARXXKtePxWTR4lqEZ4nE4WgWepWoXfkBD6k7O6I3VcIyqFZXmE8cvji
raUw78N8aD9z+nalqCxG/sk+tUqbBxwhVLruKIPXYJW2JCEHNAtogk+ZHsdF
O6Xqm6RseGWurfo2RBplG6KO4MorsHqooXKzTAq52g//ufguE2yT1QM2liSx
hL716lR4BhjpvxGlkpPEw4erH4i7vIQTR5SrTSkksNZ7nsLNMh0iE9oFTr0S
w0ynt4a7LdJgQJ+nkc7kGPZN78s6bZ8KkVG2X9l4jv7HE8WT94NewOzrGqvu
BRG0aQvYeyozBWwWB3sTO4TxhfFHmvKsZHhfGNCxUCaEa10jFKlsSTDAMvhL
uUAQn7z9clQxMQGEvJa8GIoE8O3ajwuPjseDh7U08bmKH+8GPTfL+/ocjo93
yYn28+Hp2NeFFVHPgFunzSV8lRc9YTnmh0kspKlsd8Qe4UUV96kmY7kYoK8x
ahkyOIL5npbD5oejoc9K7NzaEx4spZX+AkxRcDU8h5O5iBubj9WUqh14Cnnn
SyOttbhQscp9qof3CUzPv9RR+suJmB1MrUY8htkdDpGpQg50+ddlTGsZCQNV
FUcab7P/t0c/Sj6hCFgX3334pA4bOr7053uV8Aj4ZDWfF0qyYsz4zZBUgYdw
P8nN5jk3C26dUVE8XHcf/ph3291kP4R/lbJ1JRzC4Ok530tpPAexRuynyubR
UFAt9XKslzqAbb/QJn89BCaVSFoXtJlxv6agrd9AMLws/ZAx6sKE3KKCDcV1
QXDl75fDGy/249DpbZ3Id4Fwz7eIQuHLPsyYLntvVxsATzoTBU9w7EPLx/5a
6T3+MPKtyECohQFl5jv54hf8YLouMP3Hzb14nWgWqGLzg65mmuzFw/SoxrU2
sxHnC8mmXHaZI7QoHZWjnHvIB8gTUmUs8vbgicmppxEvvSEsRU4lJGw33vf0
yipW84KaPxoBvi40qDa8KCmxfhsGG6Ww0poa+YJdRUUrPeC7hMbEGxsqFPcd
NOoNvwXevV0Vs267UK+yoMbKyR26bF5lDD+gxACyCVZeczc4s/zo54E8CrS8
E2t1ycQVmm4tznF9IkddrRVHE2sXSN06RhdOT47+GZXWET7OkPeXQXf9DBm2
SPA56ic7ASlGMWuNewdSM6s9ZJ45wmrbxrZ95TYwuAs55FA7gP3Vuso4my3g
4KxVpQqzA4mZ74sdfJvw0/ZdqBrXTVC+K6NiMbcORt/j+fwabcGUmUgsaViD
9n9JLR0+NhATOvRDOOsvlLwtNDdWs4YcedUM8bhVyPDIcTPgug5/mQQGTsSu
gK2ke9HWrmvg/WnIvyp5GRazsi1j1i3B98LLx1DyB7a0Q3acNy0grDjwHnYv
wXJ2ad7UHgvYd3Ne+ez6Imzktg8b8l+FtBN76+ZEF+G+gMCI6FlzODpr+bvq
2n8cPx22mLJiCv29Yx8z9ObBvshQ9O5NE3DUo46ImZkDvU3vqtnly1ArFbb6
6Mkv2CpnH/0daQwmGa9ZP52ZBc3w7H8JYARQt3+uiXEGvJW+HDu0bQg2AZ5/
3/6YhsqXVGHBbRfh6LPp5T2NU9DA8vU1T5YBWDxteyBYMgm0FIP6QtH6ELhY
vHMnbwK0A0ih38MvwMCkynRAyTgsmBt4p0frwYzG6dmShh9QxHhpoemVLhy8
nuL5+Nt3kCaT6ytoOg+r82cjUqm/g74vWcGjH+fAzP6Tu6vcGIQYTrH+09KB
9OmysGjHbyBSm8qc1qoFTAFTlGA5Cv5/ovnvXNaECdNoN4O1YZCve+IX/e8M
PD+vv1OQOASWc/k3aUo0gCYnoSpK7yuIP1hPWfFQh/jOPTN6h77A6qO8unAt
NTBe/hmsPP0JKOID2+gkVYHKKp+ipmkQeGtaoguOnIY3l5nmJUsHgJPml/4H
HhVYt+rKpMzrh2buw/wvj52CSyU1dNlFfeDD2hOVdVoZOjNljifW9QLwNKso
2JAgittf9MpQDywYJU4GiCG4FrgU3CTvAbY6IQP7ZALuXchfNJDsBg8PmxJh
ASV479ZqkG3TBSGhabvKq07CpUmmWxsXOuGUyZ9mcRsFYELJe51THyGg47RZ
Bp88vA+2BcaH7dD2l9NRfV4OHs5qFG5jG/APfDA63SoLt05XnJ6iaIXHDx8U
fy6RgXzpZCOevmbYW5pQpZ1zHLK0zX/uKmmC9ltXVuYLpCGazkV2LekDlOuX
RLPWSUExvZ+bVWwjPDAREhMekQRhqaNB7+IboM7G7vg9akn4F3MsyTmnHkqr
z5/VdBUHv/+MlObDf9w/rH9mZe4YmL6i2NieqQPdq69g952jUITF1KNsdXC6
mWL+IacoVPbAcXm9Wqhw1b32rEMYtILWuRWEaqDgNruh5mMhqH0XzahRUQVb
f+9HdlsKAvslX70Bs0p4fb7f+qqqAERKO40LHKiA66SAE4qy/JB7ylHRf7Ac
uLRNRl9J88GTgJGpk1lloMuTpbmtxAu2i83yeaFvgSZKiyLqwhH4Yic2ruD+
Bt6x5L3ucucBp91HSs44vAbrsOFyQo0bBO0TpbRcS4GFKjf1++vDcCmx5+rb
wBL48Z15LFCBE+ok+l1okothh2o5hLeLHYrqAr2qG4rA1ezShfbbbCC9clfa
arkQ9KVu74+XZgXfftayYLFCKFHP3SnZOgQ2P+mSbozmQ5zrGqE+cBDC5jK1
D7jnwVhEs0pE9QFol25RJXHkguSekCtdpczwh6PtjER3NjCaFYheKmOCrZuq
JaIxWSBhyC3l07wfVsiO7wuyfQUFmbIWSeP74MBDm8aos5nAUx5Tyku/D8jF
j76uks+ApaceXot3GIDhd9nP68dfwhNnnsRjq/RA/y9GZUchHeRZy+QXAuhg
Oc376JZmGohM+DSf4qWFr4456p9tUoGYp5Q90bsb2AXTZFgjXwA9GZPcryga
2LT7SSLVpcDzArPKB9ep4UN7i2Hl32R4ceW9xVl1KlBvE+mkuZsEZ5KcJq/L
7YKONtZ3kSyJcMyDPEPkOCWsx/NYh9fGg852t+C4EgXENN+SUfaMg2Azv5QF
PXKwVmQRXiI9h77jEuFFbmQwftn74dKhZyByP+I+r8oOoTRQ/jh+IwYcHWd5
KYu3iWTH4SXt2Wj4G3M8Z1Vmi9B1VUl2no6CW49+Wmy1bhBLBn3W7otPwcg6
0ZDHdZ2gE5gt6KB6CvtY6+u8jq0RMYrvj6zzPwEOv1RbidVVIjiIuH5L5zEc
sNxktu9cIc7r/Br96B8JPA82V+zeLhO1pUo9rD4RQCsnKumS94cw6usRCd0d
DnfvLJxrKVwi1Di2JlhePgTFxhuDTbWLBN1nw9wd3Qdw3+t4W9vQAtGo9fuk
H8N9SBD9qqq4a4EYcVbZ+f45FEo3HxzZbf+bqFNjL/YsuQcGfy8EyU3+Isiv
lfxNjAuBjM3PNesus0Qlu/6uovBggF4NBkOmGWLKbuI0R0QQeOb9lTCvnya8
H9yh04oPhNt20W3SwVNEkWYKlhcHgFWy+sDfi5PElNgRptE+f0jmuET548QE
Ial/uRTJ//MIwf2K0kLjhFhMBZPlCT8YmrBjFeP/QQgJNfLnzflCqaayPb/4
dyI6OijNyNcHXjLEtDufHiMWHwh/2uC+AxGkAXaP69+IMz8Y77Z0e8GJA4Lq
SkKjRJ/CATuap55Q7nLEtjBmmJgj33dkx+I2yBe89lZkHyI+rvPaUip7QGIS
zH0t/ELguO+aw7FbsFAgtDfR6DMhWxu6L53fHQLfG1rHMH8itKkPC9OLuEGI
UJfQ7PAAcS21KZZFwRXYnQ6FtLztJ1Y83p8h9F3gfB+V/I2UPoIPIuw3PJ2B
43fWLGNsLyFnRynRk+UE9eItTdTxPcThAGIs7oPjf39xy1JaTjehZ7GXaUXT
ATzIXnCrNncR7NepaL58twPv9xuklG+dRMFi3gev+zdhXLRj20qtg5A1L+/d
f+oGJEqySb+vbScEsp2qv++2Bf68tXsFOm3EOxaeCoURa5DXYZmQmm8huKLO
EjfrrsN9ebM64xfNhH6NXWxv0TV4y8AVom7VRDw+z5E8kG8FMgUSKzwnPhCh
BWcNRt9awqx+Syw7WyNxcSLiiVm7BbwdCZRx2dNAGIiKve2cvQpXejS0HGnq
CZnL1ab5B6+CuHZrogXTe2Iy9jKL3xlzsHKQLngpUkconT8gn7TXDOrn3pnE
adUSh5hz+C/GmUAUbf2E/ko1kRjwKVpX/gpkcf/wCb9eRVCdU6RtmDQG7XTC
uWe2goieFr8xk24EimFjp7iD3hEVL0Ke07pcgrP9/iZ+4uXE5HEtBldtQ5jM
5XPYO/OW+FGpbucldxFC3zA0/Xz9hhj5yiZw95gByDrEtKo8fk3sHCzhnBLX
h02ZSyb63qXEQapVXW7iAnyYDDczdS0hUg/pP4i/qAdqfkfE8m8XE9PtcjQD
XrrQNXSI//n9IkIxYI/kuazzcHmEU8rnVSHhpO+ayV5/Djgasuv90gqI3mHa
Knk1HXjkD+spdPnEoaxxKY6vWhDwVFRRNTSXGHsa3v3bTxO2gLzoGmsOEW7c
ITIjdxaMbf5V01RkEUkf+li0tzTgXvjpK4TjK4LyZIGxeZc6HH0Q68wvk0mo
Fr4TdS9WA81HwqTJ3RnE3r0j/eMvVEFWlL7rza90wu+Yvvm+pNOwGbJ2rW8k
jbiS2yVinqECRb6/d0JGUonA5vYYlXen4JuW+yfu2ReE9FxbleRnZbAvOLCw
RvmCYO+xZU2nUIaDL6oS3IRTCMFd1PI8ciSQep5DbBQkEQZhjZvGkwAvCEWP
3fyJRM1+rrwSFwJCFy6VU+XGE/YOMwtO+5TgaG+gzaJaHPF4rfdsffVJkNS4
0j745xlh7yQ5Mn5HAX5Vi93oLooleOR1t1jPysNIY501hV8M4clLW5YjcAJq
9JhWn5tEE19mpX0XGeSg3udWffeZKOKhws9iNSpZyJ7/6Tan8pTweHb5AuNu
GRBhPCB4UvMJ8dFnOv7NoeMw7V82v9fsMcFSaFqcLykNkxPg1uQbSRxvE9d3
MpCC9FCa8bgLEYR1g1moV5AkPCPpvuGseURc6ZbJTveSgHF3hYkdeEjMp6os
7toRAyO9E0NEz31ixPqIplz0Mdh/pUFh2COMOOp3I8hS6SjQrpULLIqHEnm0
HQZ1f0Rgm0yy8NlqCGG5YP370TthWPR0lP/3MZgQjw8J3BcpBCJ9j79eLA0i
tj4kTDxzFYT2Gzdmxl4FEhHVvOx3rQRgvvHK9ensAKL/sNgGrwU/+A1/CKos
9ycUu/37Z2/yQRdNjnx5nx8R9XiVTcOfF5Z+PQkKXL1LkAIn/+W+OAKWGu9C
A4x8Cbaf4TIx7Tyw3GFdpd99h/jJKBAbTM4Dxovl8XNXvImUi39aqfy44NFF
I26dTU+ismpnRY7xMFyrzGcNyrlNtB/lYW8o4ID/AT87jdk=
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.015], AbsoluteThickness[1.6], 
     PointBox[{{-0.8408964152537145, -0.7357843633470001}, \
{-0.8408964152537145, -0.7357843633470001}}]}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{390.69140625, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2., 2.}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.90665702056468*^9, {3.906657068158845*^9, 3.9066571210524673`*^9}, {
   3.906657157511451*^9, 3.906657187284646*^9}, {3.906657516453815*^9, 
   3.906657542274996*^9}, {3.906657689741708*^9, 3.906657738431797*^9}, {
   3.9066577707808332`*^9, 3.906657791999576*^9}, 3.9066578821983547`*^9, 
   3.906657913041607*^9, {3.906658079947865*^9, 3.906658119480297*^9}, {
   3.906658173962131*^9, 3.9066582407917433`*^9}, 3.906658295209223*^9, {
   3.906658579426137*^9, 3.9066586462366247`*^9}, {3.906658716934279*^9, 
   3.906658732811327*^9}, 3.906658788086041*^9, 3.906658841127652*^9, 
   3.906659003411401*^9, {3.906659041718398*^9, 3.906659076781157*^9}, 
   3.90665911523006*^9},
 FontSize->12,
 CellLabel->
  "Out[261]=",ExpressionUUID->"7dbcd8f6-b4dc-44dc-a296-5062bb7055ab"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwVl2c4kA8Xxq3MMiOlSFZWKpHRc84TDUkiWUX2iGwKmWUWsldGUspOyIpk
JKHMkJQ9Q2Q2eP/vl3Ou+7q/nes653cfflOHSxZUFBQUp/8r/+9GoTqKL9JX
8bMwA1g6TOAdpU93Yyr/03X3X/COTaFfs5Xnt7pVTOMfVZqNncXlqYJJx//8
33zb+uR85nFQ5bzktsxVPL9u5D7d9hNT0m/MHPVZxfq7KBLouoREwVcnpwur
WJpSqWJ7eBlTV7Z27mFfRcJgLmdjcwUvKnw6Y9O2gg3KrE+8BteQjSU2KdBv
BTNCoj/KN2+gq+vvpFsSK/iMpe6gx5s/+EmiN1Smcxkn1zYbwqr/ofdg9990
52UcL1WV7q3dwpU2Vv0A5mXM00swtx6lIBXu3CPSsn6h4IPK5cAJSnJuj0h7
ouIvHFj4eyxliopcXZheZvm4hAVabrtjpqjJyOUJh6hrSxjYxZJoNk5DZnXp
/UqdW8SoORNt7m/byLL9Ejw5txcxW+EJy8cOWtKJVNDlY1jEu9Mf2ovf0JFG
afqNBvE/8Wvb+wXGZ/Tka9T+WybwEwdeHJ4SDmYgd2FC1B/TBXRczmS2M2Ik
jZqaKsZ955F/7oPIZSkmki/KafJ52hx+3bU4YbbKRA7QxHYWvfmBDwVa9Y6V
bCetzO0fGI/OorONA9hZ7yDHs1diGRhnMbhy+WojOzMp7pD+YlV6BpnFVqsp
i5nJpqbaKSuTabTni15fVmEh6ZRz1WOjp5C3Q9/Up5uFTFhKe5vTNIlv5FKz
GsRYyWsn4jM7KSZxJC2Wj9aSlZzV/O4nARMYSrGDiyaFlQzVs8rt9B3HyL4z
/fWtrKSld9iH/sYxzPOYlry4zkq26oGxJusYljM6/yzmZSN1d4icOmU0ig0W
lyqpSTZSzv4+Z8XLEVwoYr6nZcBGduwNfPKScQSHtRLtq1zYSIu5Q1qHrYZx
/haXrE4QGzk2p+lw6P0Qznfh/pOxbGTIHu7ALMkh3BS5FvswlY3kEryjwyf1
HV00GAeCHv+nR5Oiq5m+Ydb5ZwNCmWzkTCnHix2LX1HrzMPBlHQ2MpyyS37p
2wAqu+MFtkQ20rL6d61qzxdUU/QMyA5jI+Ooxsjlrn5cl1uKD/NmI4dryjyb
v/RhXmUj/4gNG/k75vS5zOleDP2Xz9t5mY2UyHg2p0fRi669LpUBimxkrI68
di3vZ/wxm3joAB8bWXHjmn7BqR4U37krrXOLlTxVELGx6tSNc3ZcK9WDrCTP
NY5Iu6wutM3zaGGq+G/+mQOU48Od6FfHpzoaxUo6eb2blhLsxOCqCnZba1ay
/Gzlm/12HXgggUOs+QQrmTs28Cf0dTuGSBSOHWBhJcNaj8gCezva/tqfK/+G
hWR0XQ7c//UjqkbK+pQasJCWLHMJWeltmGTXyLS1ykx6PelsK7VvRVhJUL0S
wUzKHqPUWlVpwcK/recZBJhJleN1bmyHPuDsVLmYWukO0jqD/l3RvmYUbnuz
ZXx6B/l616HDd3e9R59HSz13u7aTpbm0O6V5mjCzRjFz3mg7+e18sp7jwXcY
Qj+t1D/DRDKbtnnNQiPS7Td39nBlIm+9O/FU51oDzlnNfqL6x0gKSIY9swiq
RyJ2/0BWACM5EmfC8fFVHQbWKq/FMjGSHnPK8mcX3qL43mX731EMZAjdA6l7
Um+xVFPTg4qbgdTXzu3RvFWLVX1XyM+p9GSVm3Vuadgb/GJwYypFgJ4cOnn9
XJNcDSZplyfezqYjffNPUOsvvUau5syAOCk6koXmxMR8eRWK006tML2iJeMd
ekJYwypxbshYd/MELVncdpXqnG0FOhc4kPcatpE3RhWHhXXK8XHfV78WtW1k
t0sT3wm1MqRwEZD82kNDijfV7eK98Ao9ijlyu41oyIGQQVcLvVLUTausaZmh
JqVunxAusCvBtnCfhM83qcl2HdmLCWHFaBpsMkhPQ03WEmbH60te4ouQqzWu
0VSkgzOPQu94EVbx1v4RO0BFUnr7lt7mK0LNl5lrCsWU5PNY/o2rJi/Q6Z9M
3cvTlGT7fIu1mk4hHtxFL5LeT0FKlF9t5trIxyAHmUomBwqyMLU6yCcnD2MX
rcapaCnIDMF8q5/Xc/FBpvE0D7GFq1wlpt9kc7A0U++MjdMmroVze75hzcY3
SzPqW8//YW7KUgLL2jOU6MvynRz9iy/u+dhcnM5CzgtXvSQP/MXBUzUkzeRT
vLLhJPLF7A+qR3hOli08QWXfqvLl57/x472XQetUT1Dj27OuO4sbaOUW5Ku3
PxN1H0+khBAb2Pniuar92cf49obtJ/rwdRQevqbbfSsDfaS622mG1rDBkGf2
YNEjDD8o1eglu4aP2G5Q751Ix3hdvscOkauYPBFrcMkzDX1qr50cmFvBF5p+
G2d4U/Hl1TTn1+oraMNB9fxSx0MU5WrYzlK8jLY33xZ1Ryfjj9LgzbY9y3ir
3z7zqGkSnhtxuPYr8BcGLZly9kEiGs4d9nRfXkIIz3aTPZiAhzQcxrUtl1DT
2L2rYV88snNPBd8dWMSjgWx5W7xxKNZAmbuutYiDh1grrMVj0e7ie9q8Tz9x
zGxfbZBSDMJl3Y8x6j+RvZbBfNwsGnObbW6dz1hAhQSVtZ0PorC46KxsQe48
sp14fzGnPhJLv7fmyr+ew5HsAylAGYm8Ids3Pnf+QNsyJddvERGoIi+SYb8w
i3fs9+2rEg9HL7/uh1Nss0gll/basO8+Xp5es5RQmMFdlTc1uWPv4UDtuV38
1tOYZHiD9tS1UOxj5bHOfziFMjWzs6RsCAafO/GhrHsS+RnWit14glF/B7Oz
MMckTpubOF7cEYSK9+rNv+tMYMb5c1onmQIxvXow4H36OMY8qndq2BmAF39O
pDbNjSGDTHaIruhdfJ7u5lBHjuFLa/d6H5U7aLPkXZaWOIqNMScC6538kb1y
XVFpZQQnVm5Ilzzxw/qRia5onRGM/HV92/u3vmjOUe5w8/Uw/nSWut9z3gfH
9vDwdwkPY9Kztx7NE154LRMOPIgbwruJ2V1jUbdR1zvkayT9EF6vEm5wVPPE
R3oxg95b33Ci/IRqDacH/rsxY0GxOoihqwsTQnO30Hffm6Bby1/xxLYEdbrO
mxgexr1V9HsAZSJE9jXXu+F7Vj5+X/oB1PliEd731hU3Hdi+FOz7gvVx345m
t7hgRtnNCjaFfgzfiH5VMuSMKqXxa+6GfdjBRsZ7UjhjWbXS7VfBvShnJjbh
K+aEwXvWv6WUf8a5Ol3Oi9ccUUnAwm1roQddg5StF2Qd8NNL/QsvJXuQ6+Iu
z731dvhNV1zm3n8c+fsu4o2u8Q3cqR5XbVDVhQp2uSlfd9gi9T+eExRMXWjH
ZsC98OE6Vtn9aT1v3InUtq98BuKt0a/v2eVdVR3IwbhKu+poheMHJv0UeTow
6Og+72Q9S8z/Gtoc5deOhkqcC+IXLDCBKnZ4qucTsulIGu5UN8fuzRxa75KP
WD/+2a7hihkGB+58kZDShhT7/AWLnU1xwq2Tdym8FUUKXB8axpmg/NH7QmdD
WlBhOLr2TJ0xstyxEda6/wHt95eJzi8a4ahuBGt3fDM+dyIG152u4ekgesPQ
nPe4bOnj1UVtiN2/vZmOvWvCJuYvOflZVzEoxzYtfvodRlz3NqnVv4JTP7l3
ue18h/pqAsEX9uojWxUsxp5pROlnMmHpc7oY4WHDW+3bgBr9B5gY2nRwxkGA
8tWbenyo//rGWIU2vsnoszpHW493fdwiY4ov43Pl1GAlrTpUzbvi7luhhcIn
K1btst7iXFby+q6WS/h6N8ezpK1aNBLxtuma1EQBOveh2Gu1+PBYpukhFk08
JxnhZhz0BnezONjkkhr4U5zu8O0rNbgrbNz96Zo6bgw9PbFfvhob4u/Tmftd
QJ2XXWbr/K9RkevMifI9aqhe0TdYsLMKte3N33Y0qmLM7ZAzi6yVmCZWWzPt
dw6bQ4YjHbgqcN1M207pvAoafHv6e0CwHEs7IwqFBc+iyYPFrRnFMixz4CiY
ZjyDZk3d6lpXX6Gw37j7xOYpfDi6Utl2pxSrm57k+W4p421q8gjnyxK84NjE
w7ddGb33Ps6dmCpG7rW02zKCSlinNiJIKVKM5AEKToWzJxEGQsKEbrxE2wxL
9xxXEj8xTlRylRdhnuCgzU49RNvHMhZJjEWoenZLrLGfwGfNI2yuZi+QmZW5
OMDuBEYdH9z9LaAQL2YTK57sikghs1b+XL0AH3ltG+hvkkfi+5bNd4F83Fi2
7PgaJoeJHuTwXpo8/Byhc+W98XEcoLu+uTmfgyu5zJnTSrJIybxYKzyWjVeW
OPnij8rg7qcdknKjz1FWvlFEXOoY9q4lK36ZfYb2UjyPdshJ46WfE9Wv/mUh
1Wp+SrbaUbwWJ6bpyZ2FOZNhLM43jmCo9uSZbsWnGFswcWso/jCmEUT0Tasn
eBhixKbjpTBr8FsJ58NM3BTIO2HNcQg/XbfKs/78GH9oua9cfiyB0Y4cQwd3
P8aE/bUUHUri6KHxlZndLANZ71FZ0S+LovmNVWKk+BG2KARxHCk9iGNLRc/0
mR5h8e9Zo3uBIhjZdVvbrTMNw51onhqYC+MMe7JLTHIqNlXmt69rCOG73OMJ
yfYp6N/rS1GuKojvQgriedQf4qwHG/8fDQG8cuode65cMp7YehQlZnYAQws3
9YYlk/DT84WWUj9+HOSJP3NFMhEt1flYObL3o7vqOYlS2QR0zGw+6FPGhzKv
P7yMPRePGZJNjh6HeVFsc/5NmkUcntJidRd9vRc3HO4beN2LxbCdrr9y9Hnw
2gTNw/6yGLxZ4HVWiH4P9rrd97GYi8YwxwsMH95x49kUitEOsWj0YtAK7I7d
hUNzARZdDlF4S+vu+VAnLpQxyLnA/zoSlWJ/1MoYcCIXn8otN5ZIrFrTeSV1
eSemeX3x4O6KwLcV1dQ9ehyobTrYqBIbjicZrA/ev86OTdv20m6ahKGK0I2F
mkA2/NBis1ijeB/To65zj+WxIq982EMu/ns4uy2GfuY1C3rJ/7gYyxaKFsn5
LWPSzDjw1MWuZXsIfjai/NFYvR0ffrZT1mIPxvUiRd0sfSZsZvNceMcfhNKl
O+ayaRlxd8GdE40KgWhyuu7PZj09ercU3/lpEICGXjN1g5F0mBNuGzIffBfL
y/r/BN+gxdiOfebWVXdQ/2i+lYrONpSxEDJiXPPHFY00U+cLNDjV59V/V8Ef
87JNvEw0qVGDQ/9QcKAfqsXpcnqYUGFqA0rHFPqif502haA3JV4uvH6C1tQH
aT52HezOpMDU55JfvvJ7Y/CjCE+anC2YdYlKjpq/jbJqfyuv7N+E8cwt+idN
nkg1/CCpNPsvyPII+SfmeSBHx92L4qf/QHP5Ker1FHeM0z+mOLi4AdJ9qwwa
ibfQWl5Zf61gHT54qZocTbuJ/RaMDYW31+DjEdg6VuCGoqIc8md0V6G0P2hw
sckVQzxUn1CfXIGPfcndtLMu6BdX8EJebhmsFdZvce5ywf0MMteUTvwCMiPl
V915Z/Q6lpviq7YEe+myZspCnLAFdGavWC+Cpz+H7qM2RyQ49vw79eAndLuk
2ojvccRr0qNvbfwXgD9Ofpjrqz16PmYwvLw+ByGcSyazUXa4mqJrd/HOD7C1
FXt+SvsGPq8wcnDknYXLRlYPEoVs8av6CbHelmlQ5Yw5Z0plg0MlVMIFoVPA
HeYicWDWGkOViw+K6U4CGTLiZ/jdCr9F6VWESk+AV0u5Vto3SzzLvD17J+84
sHy+puIyZYGX7JMyeLjGwKJ15YbDX3O8UupdsbZnFJxvMrGK7TFHlWzKHYwS
I5D2tDUBTpphcdBRgyqVYXiXnX1FzckU3eN98m87DkFqu7HHarYJfli+PX33
9HfIVTKrHJ0xxj+y4167agYhcSTEskbaGIUO766pOPcV5NRZ1a3pjZClc5ua
z+QXuGWn3jxbZoiu1wVFA+L74UjlcQ0HNwPM/zArtaLdB+Cxf82YvIp16qPh
24R6welLQPIx7it4pZH29C+qz8BBaZtl9lcP3xJSxdsWuiHDoOf7jR+6GM8m
xxc+1QV2ptKHuyd1sONP8vmR+U5QVH7jfGBeG31OnWS2pOwEutoy5fHNyxi5
+/ycH18H+NdbdBTsvozFvFG1j1Xa4ePkYAEn/MfRXeqFAesfYSrM/nmJ7SXM
LNJUqXRpgx+puUlijzUxcA/RPkfZCq0pDKf3DGvgdrV77Ucff4DYfxsSYgc1
0LFzz6nnWs3g8nD1K/28Or7SOMvozvkeXgvsV8hPvoB4INf488Q7YDfkIzO1
1ZDP/IoZZVMj+MrcO6DFex7nfY/FkKUN0LeZJi++fA6VNulNx17UQ32sc0P6
ZxUUGjvbcLqiDjqPu+WLNZ7F+EO/mxrb3oJNppzm+Tdn0ORI3eG2uVpISDc9
G9RwGo+kZXG3ctfC940ySYvuUzhfMyDmklID2b4SbjfnlZHW7EmDME81/FMY
P3yBXRmVKIt5qvKqYOrTnkk/VEJGKUL3lEYlMHl9MMt3O4nZ28s4RmgqwLRF
MNy5hETLceaemuYycNTXcplaRSzVLfdlSXsF6tDAUhILKNsj3cfuXwrezhoO
aScJjFCup2dzLgHTvEGGbf8UsYmgkLzqWAyJFit0au8UcGnH9lHV2y9BI3Tz
32CKPK5/2zlyMroIfPkFc8T95DBseD4uu+QFvHf9VJLrcBzP3ab1Ha8vhBe/
Uly+2MhiimSxtJh0AbCJlxTIO8lgvScdHe+rPOBss7XWuHMMfTJt9T6cz4X8
QoFnOanSeMywMOzUr2z4b/VO9tcdxfbSavf83OcwQyWZ67R4BK8eDuw67PoM
BOvMmnaIHsHW3KoCGrUscBZTKT9//TAufRFdtT76FBxoG60emklhNPehlSzh
J5ATlPfSheYQJh4VG2E9mAn25uysriUSOGoX40Ap+xikvboc15zFsdLDyHTg
YgbIKobmGaEYluiHSTK4PQKRjmPynLtFcX6UXmjjXDqsN7aOB22J4Nn602EG
Nalg4xuZILokjAoWcEzxTArIXaBldP8phC5wWfvRUDL0xodGLW0IYsM9lv2Z
YUkQXX1xiJdZEMelfohYnksEUfmWtmAJAaRwMunh4kqAyava+6svH8Ah5ZZv
PxbjoH87vb5WED/yXxtqEv0aC2/Ti/xHa/cj235zK+7uGKisa/vLSLMfDSya
nLf3R0N86LeCz2m8uPenPYvpTBQEOzMrXD69D9Ny9K9700WBg8uc/vBvHmzU
HFP/IBUJJ9xfCvTV7MH++M+PbzVGgIvyj5KkyN3oOrO3JwHD4Xli1FS4Azf6
yFadX229D4KavCwCV3ehLIt96qMb9yDIJS277RIXht1UOfViXyhUxYSK0Otw
onI1LYPq92AYHdV8dsl8J66WpLilvggC3Vv3K456c2BR/FP1schAsDsdJSz9
iB1/6xhzmPoGAPhFvBptZcNi2cm7Zrfvgnhr158+KjZ8eF5bEgLuQHKvMV/e
SVascon8czHJHzhv7jJaYWPBgUKn9s0KP5j/ZDzc+mIHdoSyk44tvlAfnmUk
ZrQdu+x9BIaP+0DIxOlDJnuZUChURO1suRdIJN6nb51kQMW2sLdZ52/Dvcdv
a1tr6fGerf48y6IHZP65/6sliw6ZFBm3pT9zh4htzjVySbSoXiNy47b9Legc
cfEISdiGl/1eHek9dRMo2MNcZDNocJEjIHBe1A0o1zaL6kup8YD2H3m6fa7Q
JHr15atuKvxacOi84z4XCA5llnr4jxKv72yx9RdzhtxDbhOUhynx9J6chGRl
J/hsrmLuZ0uBKRLVuQLWjnC4JjvZxGgLPt7lpeWWcoC4x7VXzNb/wXMVxSOx
j+3g/t6LEecz/oLh3/irr0RvgJFlTauV/h/IuGM3E1hvAwIPlK127P8NvXEO
d7kcrkONkP3OpOV1OBhd6Bwsbg0TNkrp9p/X4NUgNzf1uiVcK69IWm9YhdB2
DoOaLgs4qhLI/vzNCmxG/hVbrzYHgfWfF5YblyG6aNfaeqkZAG2j/5XeXyDj
X0yyV5kC3R66WMNfS/B99qBgWqsJNB32+hq4ewle3nee25w2hqCTH6eMzy2C
6+6dRWnsxuCVKK/sf+cn9KXzdQ/evwaMu9Vv/Q1ZAEEBbfl2WkPojDxqOblv
HrhMAv+wx12Fhd7nndT1P+C7OgVRJHMFjiVoJCXfmoWTRRfl6ib1wIgrPOGv
wgx08L5+Zp2jC1O392nd2T4Nagzqxzq9dMD72K2n92cn4e/uuVnZa9qQdKnS
xrd3AkRqTtX0XbgMNga7j7V8GodHu3dTUJ/Xgv3RD/6NdI3BaHHVMoP2JXCX
q5sgR0dhXFjLUNVWEx7OzMyb/xuBmY95O0TDNYBaN6e4m38EpPZlbRdyvQgP
hJ8c5dEYBjMZNZGVkQuQy/Eu/H3wEJj8chwts1CDhAmFJ6OR3+HdrOW0wx9V
MD2Nd0wEvkGEJqetROY52DYQJ3f23VeQ4o0KpDdQAU7pHRP97gNgbe+fIyZ0
FibStcYtFb7ASZhjbfh3GioVBZ2UGfvh1k1OSdbxU5DhaanWOtkLu95TSV3+
ogyGwZz2Fp2fIU7EJfjbVyVItHv3wqO5B+Z7PjvT/jgJ9O+fBnq2doPGJ9Z7
4nT/adWmnO9fusD76Eu9UkkSslkzx4SXO2H6Vu9PoRoAS8G0yq5dneD1eNLU
TYaAIgZvWYfTHSCSdBq1ahXBIP1RVrBXO8SE7ix/Z6gAqxWDjcYen+D4XKr2
6HZ5SE+IPUjN9BHeW/Jded96HI7Erv+Vym+FuxVqko9SZEGucD5R1KgFekYF
P6XflgHayMJqhf0foE24RpP2+jFgjN8p/2rhPXw6X6S/11waLodS3l9tbYId
de1PpG8chbqe6gjDsnfw48zX+Cy/I0ArxH7wckEjcBeOt/Q+OgxRfymWzxU1
gLoUGJslSkH126W/JW/qofxhirwazSHok5FyZuuvA16Bc8tXAyQglt3PdPjv
WxBk8WyJ2iUODX/6PfLE3kKuHXPVxmtR6HOeebtlUguWiS2DuS4HIb6h58OX
U2+gikjqalEQAQOLYz+4e6vhO4uuVAibMHw/52uz6PEaEo7/mN29JggBAzLV
TySqoPeqzFT9jABs87owe3u+AjJCPa93zh4AXZaDYu9ryuFp+J4nyRv8wNXx
wW8kpQw+6O9T9eTgh7yrwg7iIa9gecGUr1duP+z/qJTE6FcKYuMXhYlOXmCZ
FLw5f7cE9Jfkqu+d3QcyDUpUajHF8FsyWSOinQe2Vxq7peW/BIdLSnpqN/bA
a6sXfyw7i+AA9fVPPbt3w9KHHc4SlEUw/Son7mzfLpB4clzotvwL2PQd623O
4oKXP+tFmlcKYF0gzO9BACfIfd5mtRmaD9T9QoU9jjvBkvmWQ+uhPPiU4y07
asMB8698yp1HcyB5TZ2f3pkdUoTAVP5ZNszk0BOpgWxwsvpVp6PHc2AeNs6h
fsoK26wu6DrpP4Ocnq8TKuksED/o+SH5TBZUx9OoDzEwwzKnJ3GZfAo1bv8W
X4dshyyO90+ZzjyB71t9Hwf2MMFhc9UIGd1MMOcTen/mDQO81/3VoubyGE6V
5NPsdKMHq/bXMp1JGZC8bHbJQpEOfKS7jdQ+PIJQQ5poKzZaOP68S/8szSM4
vGu32KVVGtj5qvX784g0GA/442c5TQ0PVuwGOYRTweOyl/fCNBVU72Pv3vbx
IfysG9xxco0SjqjWMNUEJkPp8qeSMlZKuK50ICBALQm4pAX2lstQwJC9fWQ2
fyKYaX7SN2zZJOrS024F0iTA7RBbfV7yH1FvQrfbfTkORrKr3jx//4eo6l6J
nfoZC3f1/I23zH4Tt5iObZzaiIFTqhJFR9g2CLvN04uUO2LgcFWnyNVPa8Qp
OhnPZPFoYLwu9vhx6ipxJP9t0oPLURAXurdb/vYKwanRw20dHAmGUrHVBlbL
xMLnfXeMgx8AjZ64iKbJL6Iw7IHCL7YIyLI1ErK0XiISh796lOaHwduTvzN+
3V4kPrZILQ/q34f2QeNZ/Yc/iQwRjYA8znuQurwRTRW2QBi+m3p7fSgE6A2W
pYpX54hEpZAUy4pgGKcQbil2+0HcHRD58yc9CK5JXj1MQT9LhM3RGN+LCYSV
Ak7xjLxpgn36YaRHTABEtD8cyjWdIgo+xJ2US78LERHnjp4UnSRCxW+/U3x1
B5joqkTCt8aJmN+UjVu9/rBd/4bxu7Ex4kFH6+w2Gn/o3OMYJtk3Svhnu+b1
yPuBCDkyu71/hFj/bL+4tugDSnVvu8smhglXmovbuO54Q9vD73CPYpjIVnfd
khbwAuaiOO0poSGCRV1kMLTbE5yl1vd55X0jrBPGavTiPODCs/zIf/yDxCWq
Yz4z5u6gJ/Xr47ncAYJSVEUlSukW+DU3UJqd/UJ8c5QinknehB7aNBq9lT5C
WteUI0LIDQJSDtYrl/QSB5i93xSIugLXEap0tbufidXcZT4P+f/Spv7RwUyT
HuKlWnKe2WVncPkyvydQvZv4d79WdNbDCcT4NZtlznUR4rn916KzHWHW90kh
jWYnkS/c9qi+0QGmhTZczll0ENMq/L8/qtrDp8VcUfPAdsJmLkbRbvgGbNkd
avEw+USwpD7u+BhiC9FZKoVBbW1Ezv7FAknSBkxYfnV+vdBKqK/wDLbSXofF
b9sabg1/INgKY9jXB6zgvN4RHuPgZsLP4OwF6jeWUPzfv5ID7wmDuAkn1UIL
MDwQXOxO20TkaQYtHM4zh8iYA89WBhuJINqbVvz/5QqaXUOo19BAUDfs1A9v
NoVFtiNCw+X1RMdx944fUyYQIV0b+6WyjrgaUsFbw24CnAJ5kwnNbwmdxeqg
wDPGoN8wus9trJboHHxKlUxnBDHd2g6fGWuJt7wLM2djDaGLUavxonsN0eZm
8Is4agBKw86dFQuvidJWq0OFQ1dAw5+HYsizimi3XeXrS9OH78HiuQ3clYSe
RIL6pq0erCa+n7z5vpy45NfS73BWF6ju2HxjCy0jOpb3c949rAOsqkxHXuu/
It64jorEC2tDoOhO62fypYQxs3QRs+hlyIl9YslysISoMld11D+uBbx2PePy
gsVEm2Ljz2mNS3CfN33VTfIlceNNuYKCmyZYD+y4x6NcRITIOQV9yNSALCuX
rXvmL4jmRu3Jk+UXYfNdjKP+gULCc10hJFpRHVRe/jMdjswnXBasjma3q8Hy
tzrlFI48wmgj/vrLm+fhk8SYQlB2DuFEme8xJqEKV8NyPJ9rZhOaDQHUvksq
QLIbJHIzPSecvmxGfHh3FjqXL86tdWcRouq7D3Bnn/mP16tbzgVPiZrj3V9r
E09DSYr9cm38E+KAf26SUNwpCNJRpREIzyTUnR2jC1KVgYZP4N9o5GMihUuD
oaVICU5Q5zTqZmQQnt09Kz/bT8L279+mvlQ/Iu42VJWm/CahfZNUf9KSTgQ5
GLzVOERC14O43ZePpBFnjh9vEuuF/zh/fG9+bgqx5qo489OMgA1CTuOp/EOi
r1ZdZg/VCUiOittOfkkiLLq3tve+UAD3jlT98LBEwkHF2sPEQR5kj/y4kH0x
gfhXeqjk7wk5EBl64FJ1IJ4Yvt9Ytcx9HJQFV46t0sQRT65lz6ZSyUInv6Rm
/EoMcY40T7q88V/uWJDRHfkVTRTq8L7y+isNWaenRcS2oggh2yBXfyZpmHl8
wucdVxRxOvX7UrfQUbg+4e/NrRBJXH9BPb2gegRYOcrusXdEEJpp4lc0PQ8D
T7MsF4dyODHu8CT2r6UUfDgS7nig+T6xS37HPNUPSdhhscEDpvcIDs/tIp/v
SMDbStpkxx2hxJW5BZYMMXEg9W42tDcHEyb7zloljohCQ0foIf/4IEJzxzbz
39kHQcVVOaLQOZB4X8h2mtlPBPglZSVjDQMIJR2mCQFzYYjnCzB20rn73y36
oxejLQQzbYV0MQZ3iJz0uoDXWoLAYjDFpu7gT1jtY3xPe00A/rR4M1BE+BEa
+l6PhlwOQK+/geo+R18i05JH500sP3A8oKr52O9NlPj55vDW7of/AYNuEiw=

      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.6, 0.4, 0.2], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwVl2c81w8Xho1QiKIyQzZlhojvOT/JKKOIRBmhUPZIiOxooDLKDpE9K7JD
ZvZoGCkrkhEy8/yfN+d+e7+5P9d1jlg46l2jICMjk/rv/D/N5GTjkopm8e/4
nqTIXnLS97WnfVNks8iUd/DefBkFaZ7xoVylzgzK0i8Xm0VRkrSUBr9/jv+J
bpY+eVPXdpFc+5Y9JqenMbSphTVEjIqktpNm6SI3jfzF8EZ2lor0bE4mYTNo
CuWHLS4tJFGTPNfZxuf7JnHMc3pXkQYNyab/X1G+4CRuWwZ6uU/TkKjys7ru
e02giY4xCX13ky582m5o6xrH4l+ilw/Q7iHVGK3sKhAZR/O7p6t2HuwhpXkM
09gG/8Ctvw7++3fRkpzl1OUEx7+jxu7D26YutKQvVpXVdGrf8X2ffwnFIC2J
+p7yBfmcMaQropPilKYjvbAd72lgHkORoWP9nYF0pPdntsca7n7DNU2eCLV2
OtJzvdTJ8JFRdDexfJxHR09ibWm/l98wgrcfDv2TPUVPihYViFktGsa9SQxR
B5zoSZ0KHCSHjCE8l0fo+EfTk3obNXMPpX7FMtc9TG+L6UneHw6+mE3/ggx1
hXp/muhJSbLUh8fzP+Ocz+I79356UvnziLGlmk94o1Hl092v9KRvRQaL1J8G
kUKLskX/Cz3pkYAkJf3fAdxJXp2T76EnBQhNzcxwDqCOZUiycz09ySDh8VrY
mX5sMhiZPJ1PT3pSYnXu450+fL9yWHH9CT0pw6RQJvZNL6rO553qd6YnnTtU
bNi82oORi3XPuDXpSSulg0wkoge59Chjubj/60v+L2MorBuFGwz5WH/Tkcxt
RJ29h7owk6rQX7eMjtTFJsOxLtOFzs4NIoy+dKRXs48iLAU7Ubw0JSUK6Ui+
d1TcKH5/RBaFIQP+bVpS0VL3n+DadmTmNg7aeUNLEjpXN5me2Ia8gbaHrtvT
kpKSC4UPBbfiw/uHH8Xw0JJWqg+3R95qwdHakpmPXXtIhmUJGu3OzVi1NpKs
7ruHNFexnOZ3qwn3Drd7EyJ7SGNXImKuB31A+/zKpKnu3aQ/pkk5J+IbUUzp
n8Od27tJXdH6JvnvGrBkSTJS8vBuErPMPbGQ7/Wo0hU/JFdLQ6I3oK7wZqrH
lxK3zWuv0pA0vVZ6tc6+xyuRtIZb5DQkXW7r4LKwOlzquybC+oKatNvYU/hu
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
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.015], AbsoluteThickness[1.6], 
     PointBox[{{-0.8408964152537145, -0.7357843633470001}, \
{-0.8408964152537145, -0.7357843633470001}}]}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{388.765625, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2., 2.}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.90665702056468*^9, {3.906657068158845*^9, 3.9066571210524673`*^9}, {
   3.906657157511451*^9, 3.906657187284646*^9}, {3.906657516453815*^9, 
   3.906657542274996*^9}, {3.906657689741708*^9, 3.906657738431797*^9}, {
   3.9066577707808332`*^9, 3.906657791999576*^9}, 3.9066578821983547`*^9, 
   3.906657913041607*^9, {3.906658079947865*^9, 3.906658119480297*^9}, {
   3.906658173962131*^9, 3.9066582407917433`*^9}, 3.906658295209223*^9, {
   3.906658579426137*^9, 3.9066586462366247`*^9}, {3.906658716934279*^9, 
   3.906658732811327*^9}, 3.906658788086041*^9, 3.906658841127652*^9, 
   3.906659003411401*^9, {3.906659041718398*^9, 3.906659076781157*^9}, 
   3.906659118592187*^9},
 FontSize->12,
 CellLabel->
  "Out[262]=",ExpressionUUID->"81936582-ec76-4e9a-9d64-2a3adb44cc34"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwV1/c/148WB3Ars8xIyQ4hqUQZ73M+URlJZBfZI7IpRCizENkSSSk7ISuy
d2WGRPYMkdXifu8v5zzOH3DO83X4zZ0uW1GQkZEd/6/8v7uQ5PR56Vbw3lxb
Z9F7GpJJqmGjUfwP/PqhZZn+JS3pHer+LRX8gUOvj80Kh9CRuDEh+o/5Mjqu
ZTA6mNCTTJqby6f8lpB/sU1ER5KBxBvtMvMqdRG/7luZtthgIA1RxXYXvv+O
jwU7DE4W7ybZWDo+NJ1YQFc7J3Cw3UOazVqPpaNfwJCKtauNrIwkcae01xtS
88gotlFFXsRIam6umbUxm0NH3kdbaypMJBqlHI3YR7PI02VofqeXiZSwmlqb
3TyD708/yWwQYyaZKsRndJPN4HhqLC+1NTNpQeub/xGYxjCyPRxUKcykMAOb
nG6/KYwaOD9Y38FMsvYNbxtsnMRcrzmJS1vMpA4DMNVinsQyetcfRTwsJP09
ImfPmkxgk9XlCkoSC+m04wP28jfjuFzIeF/biIXUdTDo+Rv6cRzTTnSsdGMh
2Swe1T5mM4ZLtzhk9IJZSJOLWk5HW0ZxqQf5zsSykIIPcAZlSoziP5FrsY+f
sJA4Dt3V45X8hm6a9EPBz/6bJ5IeVTGMYOaFl0NCGSyk5RK213tWvqLO+cfD
KWkspAjyHtnVkSFU8sSLLIksJOuq3zVqfV9QXd47MCuchRRHMUla6xnErdOr
8eG+LKSx6lLv1i8DmFvRyD9ux0L6F3NONWOuH4P/5fF067CQjqS/XDQg60f3
freKQHkWUqyerG4Nz2f8vpB4VICXhVR+45ph/tk+FN+7L7V7h5l0Nj/y14ZL
Ly46cKxXDTOT+K6xRTlk9qBDrlc7Qzkz6VrGEPnUWDf61/GqTUQzk1x8muYk
D3VjSGU5q70tM6lMueI9n0MXCiSwibUqMJNyJof+hL3rxNAjBZMCTMyk8I7j
MsDaifY/+XJk3zOR6N3Xgvi+fkS1KJk7JUZMJGumxYTMtA+Y5NDIsLPBSPJ5
3v2hxLEDYT1B7UokI0nmJLn2hko7FvztuEAnyEhSOVXnwXK0DRdmy8TUS/aQ
bNNpmwq5W1H4w/sd03N7SO/2HT12b18L3nm62nevZzepJId6rxRXM2ZUy2cs
mewmjVxINnA+3IShtHOKg/MMJEbzDz4L0Ig0fJauXu4MpFtNCi/0rjXgos3C
J4p/9CRBifCXVsH1SMTyDWUG0pPG48zYPr6tw6Aapc1YBnqS16KSrPJyLYof
XHP8HU1HCqV5KHlfshZLtLS8KDjpSIa6OX1at2qwcuAK6fMTWlKlh21OSfh7
/GJ0YzZFkJY0eua6avPpakzSLUu8nUVD8stToDRcfYccrRmBcZI0JGoqheml
skoUpp5dZ3hLTUpx6gtlDq/A5VFT/W0FalLRh6sUqvbl6JrvRLrfsIt0Y0J+
TFivDJ8NfPVvV99F6nVr5lVQL0UyN0GJr31UJMHmun08F9/izSK2nF4TKtJI
6LC7lUEJGqZWVLfPU5IkbysI5zsU44eIOwmfb1KSOvVkLiWEF6F5iNkwLRUl
qYawOFVf/AZfh16tdn9EQbruyiXXP1WIpTw1f8QEKEjUvn4lt3kLUftNxqZc
ETnpVSz/r6tmr9Hln3Tdm3PkpM6ldlt1vQI8vI9WJG2QjHSk7Gorx688DHaS
rmBwIiMVPKkKvpOdi7ErNlMU1GSkF4fybH5cz8GoDNM5LmIHNziKzUdksrEk
w+C8ncs2bkZwer9nzsL3q/MaO6/+YU7KagLT5ks8MpDpNzPxF0vv37G7NJeJ
vBev+kgI/MXhs9UkqpkXeOWXi8gXiz+oEek9U7r8HJX8KsvWXv3Gj/ffBG9R
PEfNkZc9d1d+oY1HsJ8BXwbqP5tOCSV+4eDrV2qOys+w9Yb9J9qILRQeu6bf
eysd70j2dlKNbmKDMdfC4cKnGHFYstFHZhOfstygPDidhvH6vM+cojYweTrW
6LJ3Kt6puXZmaHEdK7T8f53neYLlV1Nd32msox0bxavLXY9RlKNhN1PRGtrf
rC3sfZSM30tCtj8cWMNbg44ZJ8yTUHXc6drPoJ8YvGrOPgCJaLx4zNtzbRUh
IstD5nACHtV0mtK1XkUtU8+eBu54ZOWcDbk3tIInglhyd3jiUKyBPGdLewWH
jzKX24rHosOlFurcTz9w0oK7JlgxBkFH/2OMxg9kraGznLJ4hDmtdrcupC+j
XILK5t6H0VhUqCyTn7OELAotl7Lro7DkW0eO7LtFHM8SSAHyKOQJ3f3rc/d3
tC9VdB+JjEQVWZF0x+UFvOvIzV0pHoE+/r2PZ1kWkOJ06jvjgQeoM7dpfURu
HvdV3NTijL2PQzWq+/ht5zDJ+Ab12WthOMDMZZv3eBalqxcWSDKhGKKq0Fba
O4P8dJtFHlwhaLiH0VWYbQbnLM2cL+0JRvn79Zbf9KYx/YKq9hmGIEyrGg5s
SZvCmKf1Lg17A/HSj+knzYuTSCedFaoveg9fpXk41ZEm8Y2tZ/0dlbtot+pb
mpo4gY0xCkH1LgHIWrElr7g+jtPrN6SKn/tj/fh0zyO9cYz6eX1XS60fWrKV
Od18N4Y/XCUf9F24g5MHuPh7hMcw6WWtV+u0D17LAIGHcaN4LzGrZzL6Nur7
hn6Noh3F65XCDc7q3vjUIGbYd2cEp8sU1KrZvfDfjXkrso1hDNtYnhZavIV+
3O+Db619RYVdCRo03TcxIpxzp/D3EEpHinC31ntgCzMvvx/tEOp9sYoYqHXH
bSeWL/ncX7A+buREVrsbppfeLGeRG8SIX4/eFo+6okpJ/Kan8QB2sZDivclc
sbRK8fbbkH48bSE27SfmgiEHtkZSyj7jYp0++6VrzqgoaOWxs9yH7sFKtssy
TvjpjeHFNxJ9yHFpn/fBegcc0ReXvv+fI3+bIt/rm97AvRpxVUaVPSjnkJPy
dY89Uv7jUiBj+M8VFiPO5bbrWOnwp+OCaTdS2r+9MxRvi/4DL3X2VXYhG/0G
9YazDU4JzPjLc3Vh8Alu32QDa8z7GtYa7d+JlxXZl8UvWuEDitix2b5PyKIn
YbxXwxJ7t7OpfYs/YuvUZ4eGKxYYFbT3dULKByTjDjhU5GqO0x7dPKsRHSiS
7/7YOM4MZU88EFIObcdjY49qzteZIvldO2HtB23oyFcqurRighP6kcy98a1Y
6kIMb7lcw4vBtMZh2S24Zn3Hp4fSGHt/+zKcbGrGZsYv2XmZVzE42z41fq4J
fa/7mtUYXsGRH5z7PPY2oaG6YMjFg4bIUgkrsecbEV9Kh6ct6mO8lx1PlV8D
ag4KMNB90MN5J0Hyt+/r8bHhuxuT5br4Pn3ARpW6Hr3veETFFOlgutKTEEXt
OlTLveLpV66NwmfKNxwya3EzM3lrX/tlrN3P9jJppwZNRHztema0UJDGczT2
Wg0+PplhfpRJC1UlIj1Mg9/jfiYnuxySJv4Qpzl2+0o17guf8nyxqYG/Rl8o
8MlWYUP8AxpL/4uo96bHYov/HcpznFcoO6COGuUDw/l7K1HX0bK2q1ENY26H
nl9hrsBUsZrqOX9VbA0di3LiKMctC10HxQsqaDTy4vfQoTIs6Y4sED6kjGYP
V3bm5Uux1Iktf47+PFo092poX32Lwv5TntPbZ/HxxHrFh7sl2Nj8PNdvRwnv
UpKOs78pxovOzVy8u5XQ9+CznOnZIuTcTL0tfUgR69THD5GLFCFJgIxdTvkM
wlBouNCNN2ifbu2Z7U7CT/TTFRxlhVh3aNhurwGi2zNpqyT6QlRT3hFrHCTw
Zes4i7vFa2RkZiwKdFDA6FPD+0cCC/BSFrHuzSqPZNKbZa808vGpz66hwWZZ
JL7t2H0TzEPydeuur+Gn8ZkXaewgVS5+jtS70mJ6Codorm9vL2Xjeg5jxpyi
DJIzrtQIT2bhlVV23vgT0rj/RZfE6YlXKCPbKCIueRL7N5Plvyy8RC9Jrqd7
TkuhyY/pqrf/MpFiIy8lS/0EXosT0/LmzMTsmXAm1xvHMUx35nyv/AuMzZ++
NRp/DFMJ4tFNm+d4DGLE5uIlMXN4pJj9cQZuC+Yq2LIdxU/XbXJtPz/D79qe
6zrPjuAjZ7bRw/ufYQJfDVmXojh6aX5lZLVIR+b7FDa0a6JoeWODGC96iu1y
wWzHSw7j5GrhS0OGp1j0e8HkfpAIRvXc1vXoTsUIF6oXRpbCOM+a7BaT/ASb
K/I6tzSFsCnnVEKyYwoG9PuRlakdwqbQ/Hgujce44MXC/0dTEK+cbWLNOZ2M
CjtPo8UsBDCsYNtgTCIJP71abi/x58dhrvjzVyQS0VqDl5ktiw891VSPlMgk
oHNG6+E7pbwo/a7tTaxqPKZLNDt7HeNBse2l96lWcXhWm9lT9N1B/OX0wMjn
fiyG73X/mW3IhdemqR4PlsbgzXwfZSHaA9jv8eCO1eIjDHe+SNfWxInKKWQT
XWKP0IdOO6g3dh+OLgZa9ThF4y3texfCXDhQ2ij7Iv+7KFSM/V4jbcSOHLwq
tzyYorByU++tpM5eTPX54sXZE4m15VWUfQZsqGs+3KgSG4Fn6GwPP7jOis27
DlJvm4WjitCN5eogFmxrt1upln+AadHXOSdzmZFHNvwxB/99XNgVQzv/jgl9
ZL9fimUJQ6vkvPZJKUYceuHm0L47FD+bkH9vrNqNjz87KGmzhuBWobx+piED
trJ4LzfxB6NUyZ7FLGp63J9/V6FRLgjNztX92a6nRd/2ors/jALR2Ge+bjiK
BrMj7EOXQu5hWengn5Ab1BjbxW1pW3kXDU/k2ajo7UJpKyET+s0AXNdMNXe9
SIWzAz6D9+QCMDfLzMdMixI12QyPhgT5o3qcPruXGQU+aUCpmAI/DKjTJTvk
S446BdcVqM3vINXHnsO9GWT45JXEl6/8vhjyNNKbKnsHFtyik6OXbqOM+t+K
K3zbMJWxQ/u82Rspxh4mlWT9BRkuoYDEXC9k67p3SfzcH2gtO0u5leKJcYYn
5YdXfoHUwAadZuIttJVVMtzM34I2HzWzE6k3cdCKvqHg9iZ8PA47J/M9UFSU
Tfa8/gaUDAYPrzS7Y6iX2nPKM+vwcSC5l3rBDf3j8l/Lnl4DW7mtW+z73JCP
TvqaosJPIKWn/Ky74Io+J3NS/NRX4SBN5nxpqAu2g97CFdsV8A5g03/6wRkJ
tgP/zj78Ab1uT+zEDzjjNamJWruAZeCPkx3j+OqI3s/ojHW2FiGUfdVsIdoB
N1L0HS7d/Q729mKvzurewFflJk7OPAugY2LzMFHIHr9qKIj1t8+BGnuMqjmF
HY4WUwjnh80CZ7jbEYEFWwxTKjospj8DpNBxf+NvNjgSbVAeJjUNPu1l2qkj
1qjMuDtrL88UMH2+puI2a4WXHZPSuTgmwapj/YbTX0u8UuJbvnlgAlxvMjCL
HbBElSzyPfRHxiH1RUcCnLHAouATRpUqY9CUlXVF3cUcPePv5N12HoUnnaZe
G1lm2LZ2e+7euW+Qo2hRMTFvin9kpnz2VQ9D4niodbWUKQod219drvoVTmsw
a9jSmiBT9y71OzNf4JaDRutCqTG6Xz8kGhg/CMcrTmk6eRhhXtuC5LruAIAX
36Yp6SrWaUxE7BLqB5cvgcknOa/glUbqcz8pPgMbuX2mxV8DrCUki3Yt90K6
Ud+3G9//c5PlNG/EbA84mEsd653Rw64/yRfGl7pBXum9q8CSLt45e4bRmrwb
aGpKlaa2dTBq/4VFf94uCKi36srfr4NFPNE1z1Q64ePMcD47/OfoPo2CwK2P
MBvu+KrY/jJmFGqpVLh9gO9PcpLEnmlh0AGic5G8AzpS6M4dGNPE3er3O088
a4PYf7+OiB3WROfuA2dfabeC2+ONr7RLGvhWU5nek70F3gnyyeUlX0QUyDH9
PN0ErMa8pAxddeS1vGJB3twIftL3BbR5LuCS38kYUkkDDGynyoqvqaLiNq35
5Ot6qI91bUj7rIJCk8oN58rroPuUR55YozLGH/3d3PihFuwyTmtdeH8ezY7X
HfuwWAMJaebKwQ3n8HhqJmcHZw18+1UqYdV7Fpeqh8TcUqohy++Ix80lJaS2
eN4gzFUF/+Smjl1kVUJF8iKuytxKmP10YMYfFZFektA/q1kBDD5tFnkeZzBr
dynbOFU5mLcfinAtJqH1FGNfdWspOBtqu81uIJbol/kxpb4FDWhgKo4FlOmT
GmANKAFfV02n1DMERirV07K4FoN57jDdrn/y2EyQSVx1LoJEq3Ua9SY5XN2z
e0Lt9hvQDNv+N5wii1sje8fPPCoEP/5D2eL+pzF8bCkuq/g1tLh/Ks5xOoWq
t6n9puoL4PXPFLcvdjJYJVEkJSaVDyLixfmyLtL43JuGhudtLux02Ntq3j2J
dzLsDdou5EBegeDL7CdSeNK4IPzszyz4b/XODNadwM6SKs+8nFcwTyGR47Jy
HD2OBfUcc38J0nUWzXtEj2NJTmU+lXommIuplF24fgxXv4hu2J54AU7UjTaP
LSTxEefR9Uzh55AdnPvGjeooJp4QG2c+nAGOlqzM7sVHcNUhxolc5hko+fQ4
b7qK40svE/OhS+lwUD4s1wTFsNgwXILO4ymIdJ2UZd8viksTtEK/VNNgq7Fj
KnhHBJXrz4UbVT8BO7+oBNFVYTS0gpPy51NA4yI1vecPITQAHd2no8nQGB8W
vfrrEDbcZ+LLCE+CR1WXRnkYD+GU5HcRa9VEEJVt/xByRBDJXMz6ODgSYOaq
Ll+VjgCOKrWPfF+Jg8HdtIbawfzIf220WfRrLNSmFQZM1PAhC5+lDWdvDFTU
ffhLT8WHRlbNrrsHH0F82Ej+51QePPjDkcl8PhpCXBnldM5xY2q24XVfmmhw
cls0HPvNhY1akxptklGg4PlGcKD6AA7Gf352qzES3JS+FydF7Uf3+YN9CRgB
rxKjZyOcOPGOTOWFjY4HcEiLh0nw6j6UYXJ88vTGfQh2S836cJkDw2+qnH3N
HQaVMWEitHrsqFRFTaf2LQQmJrReXrbcixvFKR5PXgeD/q0H5Sd82bAw/oXG
ZFQQOJyLFpZ6yoq/9UzZzP0CAfwj3050sGCRzMw9i9v3QLyj588ABQs+vqAr
AYF3IbnflDf3DDNWukX9uZQUAOw395msszDhUIFL53a5Pyx9Mh3reL0Hu8JY
Sc7tflAfkWkiZrIbexzvCI6dugOh0+eOmh1kQKEwEXXlMh84kviAtmOGDuU/
hNdmXrgN95/V1nTU0OJ9e8MlphUvyPjz4Gd7Jg0yyNPvSnvpCZG7XKtPJ1Gj
RrXIjduOt6B73M0rNGEX6vi/Pd5/9iaQsYa7yaRT4QpbYNCSqAeQb24X1pdQ
ooDuH1kabndoFr365m0vBX7NP3rBmdsNQsIYJR//I8fre9vtA8RcIeeoxzT5
MXI8dyA7IVnJBT5bqlj625NhypGqHEFbZzhWnZVsZrIDH+/xUHNKOkHcs5or
Flv/4JWK/PHYZw7w4OClyAvpf8H4b/zVt6I3wMS6usPG8A+k33WYD6q3A8GH
SjZ7+H5Df5zTPQ6n61At5Lg3aW0LDj8qcA0Rt4VpO8U0x8+b8HaYk5Nyyxqu
lZUnbTVsQEYnm1F1jxWoqgSxvnq/DttRf8W2qixBcOvHxbXGNXhUuG9zq8QC
gLox4Er/T5AOKCKxVpoDzQGaWOOfq/Bt4fCh1A4zaD7m8zVo/yq0PHBd3J4z
heQzH2dNVVfAff/ewlRWU/BJlFUKuPsDBtJ4e4cfXAP6/Rq3/oYuwyFBXdlO
amPojjphPcO9BBxmQX9Y467Ccv+rbsr677CtQUYUSl+BSwmaScm3FuBM4aXT
dTMGYMIRkfBXbh66eN69tM3Wh9nb3Np3d8+BOp3GyW4fPfA9eevFg4UZ+Lt/
cUHmmi4kXa6w8+ufBqw+Wz1wUQf8jPafbP80BU/37yejvKANfI8e/hvvmYSJ
oso1Ot3L4Hm6bpo0MQFTwtrGavZa8Hh+fsny3zjMf8zdIxqhCZT62UW9/OMg
yZ25W8j9EjwUfn6CS3MMLKTVRdbHL0IOW1NES8gomP10nii1UoeEabnnE1Hf
oGnBes7pjxqYn8O7ZoIjEKnFbn8kQxV2DcWdVm76CpI80UG0RirALrVnetBz
CGwdA7LFhJRhOk17ylruC5yBReaGf+egQv6QixL9INy6yS7BPHUW0r2t1Ttm
+mFfC4WkzhclMA5hd7Tq/gxxIm4hI18VIdGh6bVXax8s9X12pf5+BmhbXgR5
d/SC5ifm++I0/81qzdnfvvSA74k3BiUSJMhizpgUXuuGuVv9P4SqAawPpVb0
7OsGn2cz5h7SBBTS+co4nesCkaRzqF0jD0ZpTzNDfDohJmxvWZOxHGyUDzea
en2CU4tPdCd2y0JaQuxhSoaP0GLNe6Wl4xQcj936K5nXAffK1SWepsjA6YKl
RFGTduibOPQp7bY0UEcVVMnxtcEH4Wot6usngT5+r+zb5Rb4dKHQ8KClFOiE
kT/Y6GiGPXWdz6VunIC6vqpI49Im+H7+a3ym/3GgFmI9rJPfCJwFU+39T49B
9F+yNdXCBtCQBFOLREmoql39W/y+Hsoep8iqUx2FAWlJV5bBOuARVF27GngE
Yln9zcf+1sIhJu/26H3i0PBn0CtXrBZyHBgrf70ThQHX+dodsxqwTmwfznE7
DPENfW1fzr6HSiKpp11OBIysTn7n7K+Cb0z6kqEswvBN1c9uxesdJJz6vrB/
8xAEDklXPT9SCf1XpWfr5wVhl8/FhdtL5ZAe5n29e0EA9JkOi7VUl8GLiAPP
k3/xA0dXm/94Sim0GXKrebPxQ+5VYSfx0LewtmzO23+aD/g+KibR+5eA2NQl
YaKbB5hmDt1culcMhqunq+4rc4N0gyKFekwR/JZI1ozs5ILdFaYeqXlvwOmy
ooH6jQPwzub1H+vuQhCgvP6pb/9+WG3b43qEvBDm3mbHKQ/sgyPPTwndln0N
236T/a2ZHPDmR71I63o+bAmG+z8MZIfTn3fZbIflAeWgUEGf816wZrzl1HE0
Fz5l+8pM2LHB0ts7Za4T2ZC8qcFP68oKKUJgLvsyC+azaYknQSxwpuptt7PX
K2AcM82mfMEMu2wu6rsYvoTsvq/TKmlMED/s3ZZ8PhOq4qk0RukYYY3dm9Ah
vYBqj38r70J3QyZbywuG88/h287Ax6EDDHDMUi1SWj8DLHmFWs6/p4MW/Z/t
6m7P4GxxHtVeD1qw6Xwn3Z2UDslrFpet5GngjlSviXrbUwgzpnpkw0INp171
GCpTPYVj+/aLXd6ggr1vO769ikyFqcA//tZzlPBw3WGYTfgJeOn4+C7PUUAV
N2vvro+P4Ufd8J4zm+RwXK2aoTooGUrWPhWXMpPDdUWBwED1JOCQEjxYJk0G
o46OUVn8iWCh9cnQuH2bqEtLvRVElQC3Q+0NeUj/iHozmv2ea3EwnlX5/lXL
H6Kydz129kcs3DMIMN2x+E3cYjj56+yvGDirdqTwOMsvwmH73Ar5nhg4Vtkt
cvXTJnGWRto7WfwR0F8Xe/bsyQZxPK826aFONMSFHeyVvb1OsGv2cdqGRIGx
ZGyVkc0asfyZ+65pyEOgMhAX0TL7SRSEP5T7yRIJmfYmQta2q0Ti2Fevkrxw
qD3zO/3n7RXiY7vk2rDhA+gcNl0wfPyDSBfRDMxlvw9P1n49oghfJoybZmuv
j4YCrdGaZNHGIpGoGJpiXR4CU2TC7UUe34l7QyJ//qQFwzWJq8fIaBeI8EUq
0/sxQbCezy6enjtHsM49jvKKCYTIzsejOeazRH5b3JnTafcgMlL1xBnRGSJM
/HaT/Nu7wEBTKRKxM0XE/CZv3OkPgN2GN0ybJieJh10dC7uoAqD7gHO4xMAE
EZDlntsn6w8ipPGF3YPjxNZnx5XNlTugWFfbWzo9RrhTXdrFcdcXPjz+BvfJ
xogsDfcdKUEfYCyM050VGiWYNESGw3q9wVVyi9snd4SwTZisNojzgosv86L+
8Q8TlylO3pm39AQDyZ8fVXOGCHJRFZVoxVvg39pAbqH8hRhxliReStyEPupU
KoP1AUJK35wtUsgDAlMO1ysV9xMCjL7v80XdgeM4RZr6vc/ERs4ar5esG+gY
nhjOMOsj3qgn51rouILbl6UDQRq9xL8HNaILXi4gxq/VKq3aQ4jnDF57lOUM
C37PC6i0uok84Q9P6xudYE7ol5uqVRcxp8L/+6OaI3xayRG1DOok7BZj5B3G
bsCOw9F2L7NPBNOTZ10fQ+3hUaZKQfCHD0Q230q+BMkOzJh+dn+92EForHMN
d1Bfh5WRXQ23xtoIloIY1q0hG7hgcJzLNKSV8DdSvkj53hqK/vtXsqGFMIqb
dlErsAJjgZAiT+pmIlcrePlYriVExQi8XB9uJIKpb9rw/5crqPaNokFDA0HZ
sNcwotUcVliOC42V1RNdpzy7vs+aQaRUTeyXijriamg5TzWrGbAL5s4ktNYS
eitVwUHnTcGwYYLbY7KG6B5+QZFMYwIxvbpOn+lriFqe5XnlWGPoodduvORZ
TXzwMPpJnDACxTHX7vLld0RJh83RgtEroBnARTbqXUl02m/wDqQawrcQ8ZwG
zgrC4EiCxra9AWwktszcbCkjLvu3Dzop6wPFXbsRlrBSomuNj/3eMT1gVmM4
/s7wLfHefUIkXlgXgkT32r6ULSFMGaUKGUV1IDv2uTXT4WKi0lLN2fCUNvA4
9E3JHioiPsg3/pjTvAwPeNI2PCTeEDfel8nJeWiB7dCe+1xKhUToaZfgtgxN
yLRx27lv+ZpobdSdOVN2CbabYpwNBQoI7y250EfyGqDy5p/5WFQe4bZscyKr
Ux3WRuqUUthyCZNf8dff3LwAn45MygVnZRMu5Hlek0fU4Gp4tvcrrSxCqyGQ
0m9VBUisRomcDK8Ily/bkW1NytC9dmlxszeTENXYL8CZdf4/rzd2XPNfENWn
er/WJJ6D4hTHtZr454RAQE6SUNxZCNZToxKMyCA0XJ0f5T9RAipewX8TUc+I
FA5NuvZCRVCgzG7UT08nvHv71n90noHd30Zmv1Q9Je41VJak/CZB5zZJ43l7
GhHsZFSreZQEPQ/j9uscTyXOnzrVLNYP/zl/6mBeTgqx6S4//8OCgF/Eac0X
so+JgRoN6QMUCpAcHbeb9CWJsOrd2d3/Wg48u54YRoQnEk4qtl5mTrIgc/z7
xaxLCcS/kqPFfxVOg8joQ7dKgXhi7EFj5RrnKVA6tH5ygyqOeH4ta+EJhQx0
80toxa/HEKokyySdX//ljmVp/fGfj4gCPZ63Pn+lIPPcnIjYTjQhZB/sHsAg
BfPPFO40cUQT5558W+0VOgHXpwN8OeWiiOuvKeeW1Y4DM1vpfdauSEIrVfyK
lvcx4GqV4WBTiiCmnJ7H/rWWhLbjEc4CrQ+IfbJ7lii+S8Aeq19cYH6fYPPe
LfL57hGoraBOdt4TRlxZXGZKFxMHksHNhs7WEMKMW9kmcVwUGrrCjgbEBxNa
e3ZZ/s46DCruSpEFrkFESwHLOUZ/EeCXkJGINQ4kFPUYpgUthSGeN9DURe/e
f7foj0GMrhDMfyigiTG6S2Sn1QW+0z4ETEazLBpOAYQNN30L9TVB+NPuS0cW
6U9oGvo8HXUTgP4AIzVuZz8iw5pL730sP7A9pKj+OOhLFPv7ZfPU8MH/APNZ
ZQc=
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0.6, 0.4, 0.2], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwVl2c81w8Xho1QiKIyQzZlhojvOT/JKKOIRBmhUPZIiOxooDLKDpE9K7JD
ZvZoGCkrkhEy8/yfN+d+e7+5P9d1jlg46l2jICMjk/rv/D/N5GTjkopm8e/4
nqTIXnLS97WnfVNks8iUd/DefBkFaZ7xoVylzgzK0i8Xm0VRkrSUBr9/jv+J
bpY+eVPXdpFc+5Y9JqenMbSphTVEjIqktpNm6SI3jfzF8EZ2lor0bE4mYTNo
CuWHLS4tJFGTPNfZxuf7JnHMc3pXkQYNyab/X1G+4CRuWwZ6uU/TkKjys7ru
e02giY4xCX13ky582m5o6xrH4l+ilw/Q7iHVGK3sKhAZR/O7p6t2HuwhpXkM
09gG/8Ctvw7++3fRkpzl1OUEx7+jxu7D26YutKQvVpXVdGrf8X2ffwnFIC2J
+p7yBfmcMaQropPilKYjvbAd72lgHkORoWP9nYF0pPdntsca7n7DNU2eCLV2
OtJzvdTJ8JFRdDexfJxHR09ibWm/l98wgrcfDv2TPUVPihYViFktGsa9SQxR
B5zoSZ0KHCSHjCE8l0fo+EfTk3obNXMPpX7FMtc9TG+L6UneHw6+mE3/ggx1
hXp/muhJSbLUh8fzP+Ocz+I79356UvnziLGlmk94o1Hl092v9KRvRQaL1J8G
kUKLskX/Cz3pkYAkJf3fAdxJXp2T76EnBQhNzcxwDqCOZUiycz09ySDh8VrY
mX5sMhiZPJ1PT3pSYnXu450+fL9yWHH9CT0pw6RQJvZNL6rO553qd6YnnTtU
bNi82oORi3XPuDXpSSulg0wkoge59Chjubj/60v+L2MorBuFGwz5WH/Tkcxt
RJ29h7owk6rQX7eMjtTFJsOxLtOFzs4NIoy+dKRXs48iLAU7Ubw0JSUK6Ui+
d1TcKH5/RBaFIQP+bVpS0VL3n+DadmTmNg7aeUNLEjpXN5me2Ia8gbaHrtvT
kpKSC4UPBbfiw/uHH8Xw0JJWqg+3R95qwdHakpmPXXtIhmUJGu3OzVi1NpKs
7ruHNFexnOZ3qwn3Drd7EyJ7SGNXImKuB31A+/zKpKnu3aQ/pkk5J+IbUUzp
n8Od27tJXdH6JvnvGrBkSTJS8vBuErPMPbGQ7/Wo0hU/JFdLQ6I3oK7wZqrH
lxK3zWuv0pA0vVZ6tc6+xyuRtIZb5DQkXW7r4LKwOlzquybC+oKatNvYU/hu
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
      "]]}, {{}, {}}}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.015], AbsoluteThickness[1.6], 
     PointBox[{{-0.8408964152537145, -0.7357843633470001}, \
{-0.8408964152537145, -0.7357843633470001}}]}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{389.35546875, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2., 2.}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.90665702056468*^9, {3.906657068158845*^9, 3.9066571210524673`*^9}, {
   3.906657157511451*^9, 3.906657187284646*^9}, {3.906657516453815*^9, 
   3.906657542274996*^9}, {3.906657689741708*^9, 3.906657738431797*^9}, {
   3.9066577707808332`*^9, 3.906657791999576*^9}, 3.9066578821983547`*^9, 
   3.906657913041607*^9, {3.906658079947865*^9, 3.906658119480297*^9}, {
   3.906658173962131*^9, 3.9066582407917433`*^9}, 3.906658295209223*^9, {
   3.906658579426137*^9, 3.9066586462366247`*^9}, {3.906658716934279*^9, 
   3.906658732811327*^9}, 3.906658788086041*^9, 3.906658841127652*^9, 
   3.906659003411401*^9, {3.906659041718398*^9, 3.906659076781157*^9}, 
   3.906659121935498*^9},
 FontSize->12,
 CellLabel->
  "Out[263]=",ExpressionUUID->"a31bf6ba-5280-4cdf-902e-6792a75e798a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4D conformal blocks demo (scalar external primaries)", "Title",
 CellChangeTimes->{{3.964951951940893*^9, 3.9649519616846323`*^9}, {
  3.964952228519808*^9, 
  3.964952232476313*^9}},ExpressionUUID->"a448cf31-73bb-4c58-aa9f-\
2576b0a00c3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "DD"}], " ", "is", " ", "the", " ", "differential", " ",
      "operator", " ", "that"}], ",", " ", 
    RowBox[{
    "when", " ", "acting", " ", "on", " ", "the", " ", "4", "D", " ", 
     "scalar", " ", "block"}], ",", " ", 
    RowBox[{
    "gives", " ", "one", " ", "half", " ", "of", " ", "the", " ", "SO", 
     RowBox[{"(", 
      RowBox[{"5", ",", "1"}], ")"}], " ", "Casimir"}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DD", "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "^", "2"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "z"}], ")"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "\[CapitalDelta]1", "-", "\[CapitalDelta]2", "-", 
           "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], ")"}], "/", "2"}], 
        " ", "-", "1"}], ")"}], " ", 
      RowBox[{"z", "^", "2"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "z"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
       "4"}], " ", "z", " ", "f"}], "+", 
     RowBox[{"2", " ", "z", " ", 
      RowBox[{"zbar", "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "zbar"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "z"}], ")"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "z"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"zbar", "^", "2"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "zbar"}], ")"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "\[CapitalDelta]1", "-", "\[CapitalDelta]2", "-", 
           "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], ")"}], "/", "2"}], 
        " ", "-", "1"}], ")"}], " ", 
      RowBox[{"zbar", "^", "2"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "zbar"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
       "4"}], " ", "zbar", " ", "f"}], "+", 
     RowBox[{"2", " ", "z", " ", 
      RowBox[{"zbar", "/", 
       RowBox[{"(", 
        RowBox[{"zbar", "-", "z"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "zbar"}], ")"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "zbar"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", " ", "DD0"}], " ", "is", " ", "a", " ", "new", " ", 
       "differential", " ", "operator", " ", "that", " ", "splits", " ", 
       "into", " ", "a", " ", "holomorphic", " ", "part", " ", "and", " ", 
       "an", " ", "anti"}], "-", 
      RowBox[{"holomorphic", " ", "part"}]}], ",", " ", 
     RowBox[{"whereas", " ", "DD", " ", 
      RowBox[{"doesn", "'"}], "t"}]}], " ", " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DD0", "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "^", "2"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "z"}], ")"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "\[CapitalDelta]1", "-", "\[CapitalDelta]2", "-", 
           "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], ")"}], "/", "2"}], 
        " ", "+", "1"}], ")"}], " ", 
      RowBox[{"z", "^", "2"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "z"}], "]"}]}], "-", 
     RowBox[{"2", "z", " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "z"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2", "+", "2"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4", "-", "2"}], 
        ")"}], "/", "4"}], " ", "z", " ", "f"}], "+", 
     RowBox[{
      RowBox[{"zbar", "^", "2"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "zbar"}], ")"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"zbar", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "\[CapitalDelta]1", "-", "\[CapitalDelta]2", "-", 
           "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], ")"}], "/", "2"}], 
        " ", "+", "1"}], ")"}], " ", 
      RowBox[{"zbar", "^", "2"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "zbar"}], "]"}]}], "-", 
     RowBox[{"2", "zbar", " ", 
      RowBox[{"D", "[", 
       RowBox[{"f", ",", "zbar"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2", "+", "2"}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4", "-", "2"}], 
        ")"}], "/", "4"}], " ", "zbar", " ", "f"}]}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "checking"}], " ", "that", " ", "DD", " ", "and", " ",
       "DD0", " ", "are", " ", "related", " ", "by", " ", "DD", 
      FractionBox["1", 
       RowBox[{"z", "-", "zbar"}]]}], " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"z", "-", "zbar"}]], 
      RowBox[{"(", 
       RowBox[{"DD0", "+", "2"}], ")"}]}]}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DD", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "zbar"}], ")"}]}], "]"}], " ", "-", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "zbar"}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DD0", "[", 
         RowBox[{"f", "[", 
          RowBox[{"z", ",", "zbar"}], "]"}], "]"}], "+", 
        RowBox[{"2", 
         RowBox[{"f", "[", 
          RowBox[{"z", ",", "zbar"}], "]"}]}]}], ")"}]}]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.6565152757907667`*^9, 3.656515359899597*^9}, {
   3.6565153955929623`*^9, 3.656515442960391*^9}, {3.656515528236129*^9, 
   3.656515580534953*^9}, {3.656515704429175*^9, 3.6565157115899553`*^9}, {
   3.656515954591564*^9, 3.6565159694685183`*^9}, {3.656516059695758*^9, 
   3.656516076495191*^9}, {3.656856494885685*^9, 3.6568567157923813`*^9}, 
   3.826104790379614*^9, {3.906648613861416*^9, 3.906648642836854*^9}, {
   3.9066486880750027`*^9, 3.906648878948021*^9}, 3.9649520567768593`*^9},
 FontSize->12,ExpressionUUID->"f0a6d152-d4af-428c-bfb1-47b650e509da"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9066488421052923`*^9, 3.90665955447488*^9},
 FontSize->12,
 CellLabel->"Out[3]=",ExpressionUUID->"cc8145f0-364c-4252-be69-ee4c6c9e3c3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "The"}], " ", "4", "D", " ", "scalar", " ", 
    "conformal", " ", "block"}], " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Block4D", "[", 
     RowBox[{"z_", ",", "zbar_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "+", 
         "1"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"zbar", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], ")"}]}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "zbar"}], ")"}]}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
          "2"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
          "2"}]}], ",", 
        RowBox[{"\[CapitalDelta]", "+", "s"}], ",", "z"}], "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
          "2"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
          "2"}], "-", "1"}], ",", 
        RowBox[{"\[CapitalDelta]", "-", "s", "-", "2"}], ",", "zbar"}], 
       "]"}]}], "+", 
     RowBox[{
      RowBox[{"zbar", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "+", 
         "1"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"z", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], ")"}]}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"zbar", "-", "z"}], ")"}]}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
          "2"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "+", "s"}], ")"}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
          "2"}]}], ",", 
        RowBox[{"\[CapitalDelta]", "+", "s"}], ",", "zbar"}], "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}], ")"}], "/", 
          "2"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "s"}], ")"}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]3", "-", "\[CapitalDelta]4"}], ")"}], "/", 
          "2"}], "-", "1"}], ",", 
        RowBox[{"\[CapitalDelta]", "-", "s", "-", "2"}], ",", "z"}], 
       "]"}]}]}]}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", " ", "testing"}], " ", "that", " ", "the", " ", 
       "equation", " ", "Casimir"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "-", "4"}], ")"}]}], "+", 
       RowBox[{"s", 
        RowBox[{"(", 
         RowBox[{"s", "+", "2"}], ")"}], " ", "is", " ", "obeyed", " ", "by", 
        " ", "Taylor", " ", "expansion", " ", "in", " ", "z"}]}]}], ",", " ", 
     "zbar"}], " ", "***)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"DD", "[", 
           RowBox[{"Block4D", "[", 
            RowBox[{"z", ",", " ", "zbar"}], "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalDelta]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]", "-", "4"}], ")"}]}], "+", 
               RowBox[{"s", 
                RowBox[{"(", 
                 RowBox[{"s", "+", "2"}], ")"}]}]}], ")"}], "/", "2"}], "  ", 
            
            RowBox[{"Block4D", "[", 
             RowBox[{"z", ",", " ", "zbar"}], "]"}]}], ")"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]2", "\[Rule]", "\[CapitalDelta]1"}], ",", 
           RowBox[{"\[CapitalDelta]4", "\[Rule]", "\[CapitalDelta]3"}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]", "\[Rule]", "3"}], ",", 
          RowBox[{"s", "\[Rule]", "0"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z", "\[Rule]", 
          RowBox[{"\[Epsilon]", " ", "z"}]}], ",", 
         RowBox[{"zbar", "\[Rule]", 
          RowBox[{"\[Epsilon]", " ", "zbar"}]}]}], "}"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", "4"}]}], "//", "Simplify"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"DD", "[", 
           RowBox[{"Block4D", "[", 
            RowBox[{"z", ",", " ", "zbar"}], "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalDelta]", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]", "-", "4"}], ")"}]}], "+", 
               RowBox[{"s", 
                RowBox[{"(", 
                 RowBox[{"s", "+", "2"}], ")"}]}]}], ")"}], "/", "2"}], "  ", 
            
            RowBox[{"Block4D", "[", 
             RowBox[{"z", ",", " ", "zbar"}], "]"}]}], ")"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]2", "\[Rule]", "\[CapitalDelta]1"}], ",", 
           RowBox[{"\[CapitalDelta]4", "\[Rule]", "\[CapitalDelta]3"}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]", "\[Rule]", "5"}], ",", 
          RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z", "\[Rule]", 
          RowBox[{"\[Epsilon]", " ", "z"}]}], ",", 
         RowBox[{"zbar", "\[Rule]", 
          RowBox[{"\[Epsilon]", " ", "zbar"}]}]}], "}"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", "4"}]}], "//", "Simplify"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "Testing"}], " ", "the", " ", "Casimir", " ", 
     "equation", " ", "by", " ", "plugging", " ", "in", " ", "random", " ", 
     "numerical", " ", "values"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DD", "[", 
      RowBox[{"Block4D", "[", 
       RowBox[{"z", ",", "zbar"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]", "-", "4"}], ")"}]}], "+", 
        RowBox[{"s", 
         RowBox[{"(", 
          RowBox[{"s", "+", "2"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Block4D", "[", 
       RowBox[{"z", ",", "zbar"}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalDelta]1", "\[Rule]", "2"}], ",", 
      RowBox[{"\[CapitalDelta]2", "\[Rule]", "2"}], ",", 
      RowBox[{"\[CapitalDelta]3", "\[Rule]", "2"}], ",", 
      RowBox[{"\[CapitalDelta]4", "\[Rule]", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "\[Rule]", "3"}], ",", 
      RowBox[{"s", "\[Rule]", "0"}], ",", 
      RowBox[{"z", "\[Rule]", 
       RowBox[{".4", "+", 
        RowBox[{".5", " ", "I"}]}]}], ",", 
      RowBox[{"zbar", "\[Rule]", 
       RowBox[{".5", "-", 
        RowBox[{".3", " ", "I"}]}]}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.65651637145367*^9, 3.656516546876727*^9}, {
  3.656856758253151*^9, 3.65685678853365*^9}, {3.656857021836574*^9, 
  3.656857022183029*^9}, {3.9066489218642397`*^9, 3.9066489406265097`*^9}, {
  3.906649049339149*^9, 3.906649051439334*^9}, {3.90664920870203*^9, 
  3.906649257421569*^9}},
 FontSize->12,
 CellLabel->"In[4]:=",ExpressionUUID->"64d4c62f-e9dc-4e8d-b424-a5d53379eef4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "4"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 8, 2],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {1}, 0, 8, 2],
  Editable->False]], "Output",
 CellChangeTimes->{{3.906648964523459*^9, 3.906648987631969*^9}, {
   3.906649240867261*^9, 3.906649258074855*^9}, 3.906659557782947*^9},
 FontSize->12,
 CellLabel->"Out[5]=",ExpressionUUID->"b2b7bb5b-9605-486f-81c5-546efa84f037"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "4"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 8, 2],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {1}, 0, 8, 2],
  Editable->False]], "Output",
 CellChangeTimes->{{3.906648964523459*^9, 3.906648987631969*^9}, {
   3.906649240867261*^9, 3.906649258074855*^9}, 3.906659558295582*^9},
 FontSize->12,
 CellLabel->"Out[6]=",ExpressionUUID->"6630060c-70e7-4f60-8ae4-a0a08b38f68a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.1102230246251565`*^-16"}], "-", 
  RowBox[{"1.1102230246251565`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.906648964523459*^9, 3.906648987631969*^9}, {
   3.906649240867261*^9, 3.906649258074855*^9}, 3.906659558309822*^9},
 FontSize->12,
 CellLabel->"Out[7]=",ExpressionUUID->"f975716a-e068-4b60-9aad-5129862b8a60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "testing"}], " ", "numerical", " ", "values", " ", 
    "of", " ", "the", " ", "conformal", " ", "block", " ", "itself"}], " ", 
   "***)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Block4D", "[", 
        RowBox[{
         RowBox[{"x", "+", 
          RowBox[{".001", "I"}]}], ",", 
         RowBox[{"x", "-", 
          RowBox[{".001", "I"}]}]}], "]"}], "//", "Re"}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]1", "\[Rule]", "2"}], ",", 
       RowBox[{"\[CapitalDelta]2", "\[Rule]", "2"}], ",", 
       RowBox[{"\[CapitalDelta]3", "\[Rule]", "2"}], ",", 
       RowBox[{"\[CapitalDelta]4", "\[Rule]", "2"}], ",", 
       RowBox[{"\[CapitalDelta]", "\[Rule]", "1.5"}], ",", 
       RowBox[{"s", "\[Rule]", "0"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65651678041634*^9, 3.656516807963438*^9}, 
   3.656516874439443*^9, {3.656858671745625*^9, 3.656858696521428*^9}, {
   3.6568587311644573`*^9, 3.6568587506245317`*^9}, {3.9066492809972553`*^9, 
   3.90664930279784*^9}, {3.906649462401545*^9, 3.9066494899758244`*^9}, {
   3.906659568571301*^9, 3.9066595714043283`*^9}},
 FontSize->12,
 CellLabel->"In[10]:=",ExpressionUUID->"62a9534a-0ef4-4aec-b396-84b68594c53b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVk2c4FXwDxg9SBycznENIJGU8NNDg/ncZhZKVFjIbnhIllBChoTKTR8rI
SHZIkhFCsjKaSOZZqKRU4u39cF/39ftyf/hd163octLanZdCoRT+zf/bzJ35
qpa1xyDN8aaCXTwFiwxlvD4yNqBpwlz/TBUP1qckJpcwjNCr3BiRKMGPkeXK
IX4qFhC5f+CK+A5BmLe9eXiHYYubVe7vI8NFoXxNLnNBYT9oXlb0TzeWYc7M
9ZaziiN+5O8cFV3DADusp8E5wRmlS7OHXAzlsdftR1Usww0ucnOri5mKaDCU
Ka9PPoy1Fv5dNSPK0FLSL/qmcAzLy0c9pMRVQR0KTbdT8UQGb2/x4DdNPBns
aqu39cKvz6+Pd1lrw8vSzcw+wRtzMZe7aFiP/n8uGV5n+IDeTDs9uVsX8Sn0
2lUHz8DLL+UKOb0JZiIPtlYn++LV1o9Fj7O34NFk68YphbNILZ4OEFEkuJEv
rmqlEgRrveSYG3RjGMtlZLCOBONTv7njy6MmCGpMEn1mewGzgu53xWu3Y4OO
+vX9CSFwz51x1LtohlTJ3RFXGWH43vaq21TdEgFttxrsnoTh6ltvztCkJezC
B3mVDobDtdr4QVSpFWgz3sGVyRHQiX5tOrvDBv498f5chStQYb3mmYy3g1Xc
ew8LlRs4/ux9HrfYAermSjkyTTcQrRe7yDfNEVS+4+NjR6JwTc7YLiruEA5V
zBfX2EbD1KRqQ36NEyTXRGvuS4iB8g4HzsEnLgihlqy+woiHv99aG3nWX+/b
Yy4/9IpHc9aIFTf4CLrCT7I+NMUjIPBQpjD9KJT51HM1fW9iyHS62WTnMTT+
ydDs6UrA0XSXd8YN/4I2nbBR4dp/aMjRstrv74XE/nOGZfN3sST5iXyMtC+2
Ld+fMbAnBaMpJSLuvr5gH9Dlp+angFfi9FxTry/kuWdd8zVSYXDc2lMvwQ8n
j+msovSl4sRmRluJ3FmIuxXez9RLh9mvnoN3TM5j3/60ws9fMnC+jKF2NigE
Ux9sBdNlMsGf9vlD6sMQRDhS3W0MM/F4X/VZyngISlxPyjyKz8TX5c7sw5ah
EPbUDw/QzYKikVh166qLeB767sDiwGyIMa9nDLwPw7o8scXLqQ+wWPh7t9GJ
yxBaCLHfLl+I2rW0p8+kopF4bK+jukkhOp+011XrREO5R91JzLMQh1/apHfb
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
       "]]},
     Annotation[#, "Charting`Private`Tag$13842#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 7.767227316754778}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.906649286092248*^9, 3.90664930706649*^9}, {
  3.906649466163218*^9, 3.906649490384594*^9}, {3.9066595652246*^9, 
  3.90665957727395*^9}},
 FontSize->12,
 CellLabel->"Out[10]=",ExpressionUUID->"80c40788-dddf-491a-9c35-766a9e8d1492"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "After"}], " ", "setting", " ", "\[CapitalDelta]1"}],
      "=", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"\[CapitalDelta]3", "=", "\[CapitalDelta]4"}]}]}], ",", " ", 
    RowBox[{
    "contribution", " ", "to", " ", "the", " ", "crossing", " ", "equation"}],
     ",", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v", "\[CapitalDelta]1"], 
      RowBox[{"F", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["u", "\[CapitalDelta]1"], 
      RowBox[{"F", "[", 
       RowBox[{"v", ",", "u"}], "]"}]}]}], ",", " ", 
    RowBox[{"multiplied", " ", "by", " ", 
     RowBox[{"(", 
      RowBox[{"z", "-", "zbar"}], ")"}]}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CrossingBlock", "[", 
    RowBox[{"z_", ",", "zbar_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "-", "zbar"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}], "^", "\[CapitalDelta]1"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "zbar"}], ")"}], "^", "\[CapitalDelta]1"}], " ", 
       RowBox[{"Block4D", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "-", "zbar"}], ")"}], 
       RowBox[{"z", "^", "\[CapitalDelta]1"}], " ", 
       RowBox[{"zbar", "^", "\[CapitalDelta]1"}], " ", 
       RowBox[{"Block4D", "[", 
        RowBox[{
         RowBox[{"1", "-", "z"}], ",", 
         RowBox[{"1", "-", "zbar"}]}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]2", "->", "\[CapitalDelta]1"}], ",", 
       RowBox[{"\[CapitalDelta]3", "->", "\[CapitalDelta]1"}], ",", 
       RowBox[{"\[CapitalDelta]4", "->", "\[CapitalDelta]1"}]}], "}"}]}], "//",
     "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.656517113095985*^9, 3.6565171960452347`*^9}, {
   3.6565182137828197`*^9, 3.656518216189303*^9}, {3.656518298821158*^9, 
   3.656518304413015*^9}, {3.656518338961588*^9, 3.6565183424981127`*^9}, {
   3.6565185718441153`*^9, 3.656518576100494*^9}, {3.656858515109173*^9, 
   3.656858608824276*^9}, {3.9066595435533447`*^9, 3.9066595452860003`*^9}, {
   3.906659585106306*^9, 3.9066596241001997`*^9}, {3.906660017539982*^9, 
   3.9066600330910177`*^9}, {3.906661012900021*^9, 3.906661026494413*^9}, 
   3.964951965649383*^9},
 FontSize->12,ExpressionUUID->"ebdec377-3f7e-4453-bd40-4f1b097fb70a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "z"}], ")"}], 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}]], " ", 
   SuperscriptBox["z", "\[CapitalDelta]1"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "zbar"}], ")"}], 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}]], " ", 
   SuperscriptBox["zbar", "\[CapitalDelta]1"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "z"}], ")"}], 
       RowBox[{"1", "+", "s"}]], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ",", 
        RowBox[{"1", "-", "zbar"}]}], "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        RowBox[{"s", "+", "\[CapitalDelta]"}], ",", 
        RowBox[{"1", "-", "z"}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "zbar"}], ")"}], "s"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "zbar"}], ")"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ",", 
        RowBox[{"1", "-", "z"}]}], "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        RowBox[{"s", "+", "\[CapitalDelta]"}], ",", 
        RowBox[{"1", "-", "zbar"}]}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "z"}], ")"}], "\[CapitalDelta]1"], " ", 
   SuperscriptBox["z", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "zbar"}], ")"}], "\[CapitalDelta]1"], " ", 
   SuperscriptBox["zbar", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], "+", "\[CapitalDelta]"}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", 
       RowBox[{"1", "+", "s"}]], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ",", 
        "zbar"}], "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        RowBox[{"s", "+", "\[CapitalDelta]"}], ",", "z"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["zbar", 
       RowBox[{"1", "+", "s"}]], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "s", "+", "\[CapitalDelta]"}], ",", "z"}], 
       "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        FractionBox[
         RowBox[{"s", "+", "\[CapitalDelta]"}], "2"], ",", 
        RowBox[{"s", "+", "\[CapitalDelta]"}], ",", "zbar"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.9066595975876303`*^9, 3.906659625046624*^9}, 
   3.906660035239991*^9},
 FontSize->12,
 CellLabel->"Out[27]=",ExpressionUUID->"2180759c-20da-4d56-afc2-79268c4238fc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Extracting"}], " ", "the", " ", 
      RowBox[{"x", "^", "m"}], " ", 
      RowBox[{"xbar", "^", "n"}], " ", "terms", " ", "in", " ", "the", " ", 
      "z"}], "=", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "+", 
      RowBox[{"x", " ", "expansion", " ", "of", " ", "CrossingBlock"}]}]}], ",",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"for", " ", "m"}], "+", "n"}], "=", 
     RowBox[{"even", " ", 
      RowBox[{"(", 
       RowBox[{
       "recall", " ", "that", " ", "we", " ", "have", " ", "multiplied", " ", 
        "by", " ", "an", " ", "extra", " ", 
        RowBox[{"(", 
         RowBox[{"z", "-", "zbar"}], ")"}], " ", "factor"}], ")"}]}]}]}], " ",
    "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CrossingDeriv", "[", 
     RowBox[{"weight1_", ",", "weight_", ",", "spin_", ",", "deg_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mat", "=", 
        RowBox[{"CoefficientList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"CrossingBlock", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"1", "/", "2"}], "+", 
                    RowBox[{"\[Epsilon]", " ", "x"}]}], ",", 
                   RowBox[{
                    RowBox[{"1", "/", "2"}], "+", 
                    RowBox[{"\[Epsilon]", " ", "xbar"}]}]}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[CapitalDelta]1", "->", "weight1"}], ",", 
                   RowBox[{"\[CapitalDelta]", "->", "weight"}], ",", 
                   RowBox[{"s", "->", "spin"}]}], "}"}]}], ")"}], "+", 
               RowBox[{
                RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "deg"}], "+", "1"}], ")"}]}]}], "//", 
              "Normal"}], "//", "N"}], ")"}], "/.", 
           RowBox[{"\[Epsilon]", "\[Rule]", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "xbar"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"m", ",", "n"}], "]"}], " ", 
          RowBox[{"mat", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"m", "+", "1"}], ",", 
             RowBox[{"n", "+", "1"}]}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0", ",", 
           RowBox[{"2", " ", "deg"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "2"}], ",", 
           RowBox[{
            RowBox[{"2", " ", "deg"}], "-", "m"}], ",", "2"}], "}"}]}], "]"}],
        "//", "Flatten"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"**", " ", "Collecting"}], " ", "the", " ", "Taylor"}], "-", 
      RowBox[{
      "expanded", " ", "crossing", " ", "equations", " ", "for", " ", "spins",
        " ", "up", " ", "to", " ", "spintrunc"}]}], ",", " ", 
     RowBox[{
     "weights", " ", "from", " ", "the", " ", "unitarity", " ", "bound", " ", 
      "or", " ", "scalar", " ", "gap", " ", "up", " ", "to", " ", 
      "weighttrunc"}], ",", " ", 
     RowBox[{"with", " ", "sufficiently", " ", "small", " ", "weightstep"}]}],
     " ", "***)"}], "\n", 
   RowBox[{
    RowBox[{"PrepareCoeff", "[", 
     RowBox[{
     "\[CapitalDelta]1_", ",", "gap_", ",", "weighttrunc_", ",", 
      "weightstep_", ",", "spintrunc_", ",", "deg_"}], "]"}], ":=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"CrossingDeriv", "[", 
        RowBox[{"\[CapitalDelta]1", ",", "0", ",", "0", ",", "deg"}], "]"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"CrossingDeriv", "[", 
          RowBox[{
          "\[CapitalDelta]1", ",", "\[CapitalDelta]", ",", "spin", ",", 
           "deg"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spin", ",", "0", ",", "spintrunc", ",", "2"}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"spin", "\[Equal]", "0"}], ",", "gap", ",", 
             RowBox[{"2", "+", "spin"}]}], "]"}], ",", "weighttrunc", ",", 
           "weightstep"}], "}"}]}], "]"}], "//", "Flatten"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "Coefficients"}], " ", "of", " ", "the", " ", 
     "linear", " ", "functional", " ", "as", " ", "variables", " ", "for", " ",
      "linear", " ", "optimization"}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vars", "[", "deg_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"m", ",", "n"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", 
          RowBox[{"2", " ", "deg"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"m", "+", "2"}], ",", 
          RowBox[{
           RowBox[{"2", " ", "deg"}], "-", "m"}], ",", "2"}], "}"}]}], "]"}], 
      "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "total"}], " ", "derivative", " ", "order", " ", 
      "on", " ", "the", " ", "crossing", " ", "equation", " ", "is", " ", 
      "effectively", " ", "2", " ", "times", " ", "derivatives"}], " ", "-", 
     " ", "1"}], " ", "***)"}], "\n", 
   RowBox[{
    RowBox[{"derivatives", "=", "4"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Numerical"}], " ", "approximations", " ", "are", " ",
       "introduced", " ", "here", " ", "via", " ", "cutoff", " ", "on", " ", 
      "the", " ", "spin"}], ",", " ", 
     RowBox[{"internal", " ", "weight"}], ",", " ", 
     RowBox[{
      RowBox[{
      "and", " ", "discretization", " ", "of", " ", "possible", " ", "weight",
        " ", "values"}], ";", " ", 
      RowBox[{
      "the", " ", "need", " ", "for", " ", "cutoff", " ", "and", " ", 
       "discretization", " ", "of", " ", "weights", " ", "can", " ", "be", " ",
        "removed", " ", "with", 
       " ", "\"\<polynomial matrix programming\>\""}]}], ",", " ", 
     RowBox[{"but", " ", "we", " ", 
      RowBox[{"won", "'"}], "t", " ", "implement", " ", "it", " ", "here"}]}],
     " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxweight", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stepweight", "=", ".05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxspin", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "normalizing"}], " ", "one", " ", "of", " ", "the", " ",
       "linear", " ", "functional", " ", "coefficients", " ", "so", " ", 
      "that", " ", "the", " ", "optimization", " ", "problem", " ", "can", " ",
       "have", " ", "a", " ", "well"}], "-", 
     RowBox[{"defined", " ", "solution"}]}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normalization", "=", 
     RowBox[{
      RowBox[{"vars", "[", "derivatives", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normvars", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"vars", "[", "derivatives", "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blockcoeffs", "[", 
     RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"PrepareCoeff", "[", 
      RowBox[{
      "\[CapitalDelta]1", ",", "gap", ",", "maxweight", ",", "stepweight", ",",
        "maxspin", ",", "derivatives"}], "]"}], "/.", 
     RowBox[{"normalization", "\[Rule]", "1"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", " ", "oracle"}], " ", "tells", " ", "whether", " ", "the", 
     " ", "gap", " ", "is", " ", "allowed", " ", 
     RowBox[{"(", "true", ")"}], " ", "or", " ", "not", " ", "allowed", " ", 
     RowBox[{"(", "false", ")"}]}], "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oracle", "[", 
     RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"MM", "=", 
        RowBox[{"blockcoeffs", "[", 
         RowBox[{"\[CapitalDelta]1", ",", "gap"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"normvars", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"LinearOptimization", "[", 
          RowBox[{
           RowBox[{"MM", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", "0"}], " ", "&"}], " ", "/@", 
            " ", "MM"}], ",", "normvars"}], "]"}]}], ")"}], "===", 
       "Indeterminate"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.656517532669936*^9, 3.656517536029497*^9}, {
  3.656517837935955*^9, 3.656517839500464*^9}, {3.6565182389182158`*^9, 
  3.656518258389674*^9}, {3.656858865780608*^9, 3.656858925125469*^9}, {
  3.904815447064143*^9, 3.904815465332595*^9}, {3.904815524059486*^9, 
  3.9048155264839354`*^9}, {3.9048173028561497`*^9, 3.904817314522502*^9}, {
  3.904817821182311*^9, 3.904817821424786*^9}, {3.904818021902053*^9, 
  3.904818063291915*^9}, {3.9048187326511593`*^9, 3.904818746892323*^9}, {
  3.906659653396462*^9, 3.90665970134518*^9}, {3.906659754198007*^9, 
  3.906659755164424*^9}, {3.90665982255589*^9, 3.9066598476654654`*^9}, {
  3.9066599931619663`*^9, 3.906659997899708*^9}, {3.906660042716291*^9, 
  3.906660063959858*^9}, {3.906660371549981*^9, 3.906660649036891*^9}, {
  3.906660730121838*^9, 3.906660884412582*^9}},
 FontSize->12,ExpressionUUID->"909ce820-34e8-431f-a528-1e614eca5c56"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"oracle", "[", 
  RowBox[{"1.05", ",", "2.53"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"oracle", "[", 
  RowBox[{"1.05", ",", "2.54"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9048325046076736`*^9, 3.9048325787448587`*^9}, {
   3.9048326148305264`*^9, 3.9048326167384768`*^9}, {3.9048327685869923`*^9, 
   3.904832768784238*^9}, {3.904832898106078*^9, 3.9048329131539297`*^9}, {
   3.9048330656501617`*^9, 3.9048330706590643`*^9}, {3.90483400248559*^9, 
   3.9048340284772243`*^9}, {3.9048348188792562`*^9, 3.904834827871213*^9}, 
   3.904834992204255*^9, {3.904904225093667*^9, 3.904904225430084*^9}, {
   3.90490446234658*^9, 3.9049044757634497`*^9}, {3.906660303920684*^9, 
   3.9066603145633793`*^9}, {3.9066608973497133`*^9, 3.906660944326068*^9}, {
   3.964951980847666*^9, 3.964951984393133*^9}},
 FontSize->12,ExpressionUUID->"d9d26c20-633c-4b72-9155-ee7a993ab300"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.905284862461136*^9, 3.905284983941341*^9, 3.905285079833028*^9, 
   3.9052852605073833`*^9, 3.905285332134843*^9, 3.905285532253196*^9, 
   3.905285570669013*^9, 3.905287213758032*^9, {3.906660293893153*^9, 
   3.9066603219047623`*^9}, 3.906660911551296*^9, 3.906660973719255*^9},
 FontSize->12,
 CellLabel->"Out[47]=",ExpressionUUID->"25f814b4-3a3b-448b-89e2-38e409fc813e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.905284862461136*^9, 3.905284983941341*^9, 3.905285079833028*^9, 
   3.9052852605073833`*^9, 3.905285332134843*^9, 3.905285532253196*^9, 
   3.905285570669013*^9, 3.905287213758032*^9, {3.906660293893153*^9, 
   3.9066603219047623`*^9}, 3.906660911551296*^9, 3.906660980944379*^9},
 FontSize->12,
 CellLabel->"Out[48]=",ExpressionUUID->"48eea3d7-6406-47ea-b8a2-541208b40c1d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D conformal block demo (scalar external primaries)", "Title",
 CellChangeTimes->{{3.964951387874186*^9, 3.964951399035645*^9}, {
  3.964951807414846*^9, 3.964951839498836*^9}, {3.964952238309587*^9, 
  3.964952242472785*^9}},ExpressionUUID->"f986cde2-61bc-44c1-bcf9-\
1618da029a87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "General"}], " ", "d", " ", "scalar", " ", "conformal",
     " ", "block", " ", "from", " ", "Zamolodchikov", " ", "recursion", " ", 
    "relation", " ", 
    RowBox[{"(", 
     RowBox[{"code", " ", "by", " ", "Joshua", " ", "Sandor"}], ")"}]}], " ", 
   "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hIn", "[", 
     RowBox[{"l_", ",", "r_", ",", "\[Eta]_", ",", "d_"}], "]"}], ":=", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"l", "!"}], " ", 
      RowBox[{"GegenbauerC", "[", 
       RowBox[{"l", ",", 
        FractionBox[
         RowBox[{"d", "-", "2"}], "2"], ",", "\[Eta]"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}], "l"], 
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"d", "/", "2"}], "-", "1"}], ",", "l"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["r", "2"]}], ")"}], 
       FractionBox[
        RowBox[{"d", "-", "2"}], "2"]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["r", "2"], 
         SuperscriptBox["\[Eta]", "2"]}]}]]}]]}], "\n", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"1", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"m", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "2"}], ")"}], "m"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"m", "!"}], ")"}], "2"]]}], 
     SuperscriptBox[
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "m"}], "2"], ",", "m"}], "]"}], "2"]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"2", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"m", " ", 
        RowBox[{"l", "!"}], 
        RowBox[{"Pochhammer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"d", "/", "2"}], "+", "l"}], ",", 
          RowBox[{"-", "m"}]}], "]"}], 
        RowBox[{"Pochhammer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"d", "/", "2"}], "+", "l", "-", "1"}], ",", 
          RowBox[{"-", "m"}]}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "2"}], ")"}], "m"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m", "!"}], ")"}], "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"l", "-", "m"}], ")"}], "!"}], 
        RowBox[{"Pochhammer", "[", 
         RowBox[{
          RowBox[{"d", "-", "2", "+", "l"}], ",", 
          RowBox[{"-", "m"}]}], "]"}]}]]}], 
     SuperscriptBox[
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "m"}], "2"], ",", "m"}], "]"}], "2"]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"3", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"m", "/", "2"}]], 
          RowBox[{"Pochhammer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d", "-", "m"}], ")"}], "/", "2"}], "-", "1"}], ",", 
            "m"}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"m", "/", "2"}], ")"}], "!"}], ")"}], "2"], 
          RowBox[{"Pochhammer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d", "-", "m"}], ")"}], "/", "2"}], "+", "l", "-", 
             "1"}], ",", "m"}], "]"}], 
          RowBox[{"Pochhammer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d", "-", "m"}], ")"}], "/", "2"}], "+", "l"}], ",", 
            "m"}], "]"}]}], ")"}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "+", "m"}], ")"}], "/", "2"}], "-", "l"}], "2"], ",", 
        RowBox[{"m", "/", "2"}]}], "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "-", "m"}], ")"}], "/", "2"}], "+", "l"}], "2"], ",", 
        RowBox[{"m", "/", "2"}]}], "]"}], "2"]}]}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "[", 
     RowBox[{"1", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{"1", "-", "l", "-", "m"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "[", 
     RowBox[{"2", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{"l", "+", "d", "-", "1", "-", "m"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "[", 
     RowBox[{"3", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", "m"}], ")"}], "/", "2"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ll", "[", 
     RowBox[{"1", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{"l", "+", "m"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ll", "[", 
     RowBox[{"2", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", 
    RowBox[{"l", "-", "m"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ll", "[", 
     RowBox[{"3", ",", "m_", ",", "l_", ",", "d_"}], "]"}], ":=", " ", "l"}], 
   "\n", 
   RowBox[{
    RowBox[{"MaxOrder", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hInExpansion", "[", 
      RowBox[{"d_", ",", "l_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"hInExpansion", "[", 
       RowBox[{"d", ",", "l"}], "]"}], "  ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SeriesCoefficient", "[", " ", 
         RowBox[{
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"hIn", "[", 
             RowBox[{"l", ",", "r", ",", "\[Eta]", ",", "d"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "0", ",", "MaxOrder"}], "}"}]}], "]"}], ",", 
          "n"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "MaxOrder"}], "}"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"order", " ", "needs", " ", "to", " ", "be", " ", 
     RowBox[{"even", "!"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"RecursiveBlock", "[", 
     RowBox[{"0", ",", "\[CapitalDelta]b_", ",", " ", "lb_", ",", "d_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"RecursiveBlock", "[", 
      RowBox[{"0", ",", "\[CapitalDelta]b", ",", " ", "lb", ",", "d"}], "]"}],
      "=", " ", 
     RowBox[{
      RowBox[{"hInExpansion", "[", 
       RowBox[{"d", ",", "lb"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"RecursiveBlock", "[", 
     RowBox[{"ord_", ",", "\[CapitalDelta]b_", ",", " ", "lb_", ",", "d_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"RecursiveBlock", "[", 
      RowBox[{"ord", ",", "\[CapitalDelta]b", ",", " ", "lb", ",", "d"}], 
      "]"}], "=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"hinf", ",", "J1", ",", " ", "J2", ",", " ", "J3"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hinf", " ", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"hInExpansion", "[", 
              RowBox[{"d", ",", "lb"}], "]"}], "[", 
             RowBox[{"[", "ii", "]"}], "]"}], " ", 
            SuperscriptBox["r", 
             RowBox[{"ii", "-", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", 
             RowBox[{"ord", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"J1", " ", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"1", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", "r"}], ")"}], 
               RowBox[{"2", "k"}]]}], 
             RowBox[{"\[CapitalDelta]b", "-", " ", 
              RowBox[{"\[CapitalDelta]", "[", 
               RowBox[{"1", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}]}]], 
            RowBox[{"RecursiveBlock", "[", 
             RowBox[{
              RowBox[{"ord", "-", 
               RowBox[{"2", "k"}]}], ",", 
              RowBox[{
               RowBox[{"\[CapitalDelta]", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], "+", 
               RowBox[{"2", "k"}]}], ",", 
              RowBox[{"ll", "[", 
               RowBox[{"1", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], ",", "d"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"ord", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"J3", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"3", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", "r"}], ")"}], 
               RowBox[{"2", "k"}]]}], 
             RowBox[{"\[CapitalDelta]b", "-", 
              RowBox[{"\[CapitalDelta]", "[", 
               RowBox[{"3", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}]}]], 
            RowBox[{"(", 
             RowBox[{"RecursiveBlock", "[", 
              RowBox[{
               RowBox[{"ord", "-", 
                RowBox[{"2", "k"}]}], ",", 
               RowBox[{
                RowBox[{"\[CapitalDelta]", "[", 
                 RowBox[{"3", ",", 
                  RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], "+", 
                RowBox[{"2", "k"}]}], ",", 
               RowBox[{"ll", "[", 
                RowBox[{"3", ",", 
                 RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], ",", "d"}],
               "]"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"ord", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lb", ">=", " ", "2"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"J2", " ", "=", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"c", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"4", "r"}], ")"}], 
                  RowBox[{"2", "k"}]]}], 
                RowBox[{"\[CapitalDelta]b", "-", " ", 
                 RowBox[{"\[CapitalDelta]", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}]}]], 
               RowBox[{"RecursiveBlock", "[", 
                RowBox[{
                 RowBox[{"ord", "-", 
                  RowBox[{"2", "k"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], "+", 
                  RowBox[{"2", "k"}]}], ",", 
                 RowBox[{"ll", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], ",", 
                 "d"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"ord", "/", "2"}], ",", 
                  RowBox[{"lb", "/", "2"}]}], "]"}]}], "}"}]}], "]"}]}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"J2", " ", "=", " ", "0"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{"hinf", "+", "J1", "+", " ", "J2", "+", " ", "J3"}], "]"}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"RecursiveBlockPoleExp", "[", 
     RowBox[{"0", ",", "\[CapitalDelta]b_", ",", " ", "lb_", ",", "d_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"RecursiveBlockPoleExp", "[", 
      RowBox[{"0", ",", "\[CapitalDelta]b", ",", " ", "lb", ",", "d"}], "]"}],
      "=", " ", 
     RowBox[{
      RowBox[{"hInExpansion", "[", 
       RowBox[{"d", ",", "lb"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"RecursiveBlockPoleExp", "[", 
     RowBox[{"ord_", ",", "\[CapitalDelta]b_", ",", " ", "lb_", ",", "d_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"RecursiveBlockPoleExp", "[", 
      RowBox[{"ord", ",", "\[CapitalDelta]b", ",", " ", "lb", ",", "d"}], 
      "]"}], "=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"hinf", ",", "J1", ",", " ", "J2", ",", " ", "J3"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hinf", " ", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"hInExpansion", "[", 
              RowBox[{"d", ",", "lb"}], "]"}], "[", 
             RowBox[{"[", "ii", "]"}], "]"}], " ", 
            SuperscriptBox["r", 
             RowBox[{"ii", "-", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", 
             RowBox[{"ord", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"J1", " ", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"1", ",", 
              RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"4", "r"}], ")"}], 
             RowBox[{"2", "k"}]], 
            RowBox[{"Pole", "[", 
             RowBox[{"\[CapitalDelta]b", ",", 
              RowBox[{"\[CapitalDelta]", "[", 
               RowBox[{"1", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}]}], "]"}], 
            RowBox[{"RecursiveBlock", "[", 
             RowBox[{
              RowBox[{"ord", "-", 
               RowBox[{"2", "k"}]}], ",", 
              RowBox[{
               RowBox[{"\[CapitalDelta]", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], "+", 
               RowBox[{"2", "k"}]}], ",", 
              RowBox[{"ll", "[", 
               RowBox[{"1", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], ",", "d"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"ord", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"J3", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"3", ",", 
              RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"4", "r"}], ")"}], 
             RowBox[{"2", "k"}]], 
            RowBox[{"Pole", "[", 
             RowBox[{"\[CapitalDelta]b", ",", 
              RowBox[{"\[CapitalDelta]", "[", 
               RowBox[{"3", ",", 
                RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}]}], "]"}], 
            RowBox[{"(", 
             RowBox[{"RecursiveBlock", "[", 
              RowBox[{
               RowBox[{"ord", "-", 
                RowBox[{"2", "k"}]}], ",", 
               RowBox[{
                RowBox[{"\[CapitalDelta]", "[", 
                 RowBox[{"3", ",", 
                  RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], "+", 
                RowBox[{"2", "k"}]}], ",", 
               RowBox[{"ll", "[", 
                RowBox[{"3", ",", 
                 RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], ",", "d"}],
               "]"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"ord", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lb", ">=", " ", "2"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"J2", " ", "=", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"c", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"4", "r"}], ")"}], 
                RowBox[{"2", "k"}]], 
               RowBox[{"Pole", "[", 
                RowBox[{"\[CapitalDelta]b", ",", " ", 
                 RowBox[{"\[CapitalDelta]", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}]}], "]"}], 
               
               RowBox[{"RecursiveBlock", "[", 
                RowBox[{
                 RowBox[{"ord", "-", 
                  RowBox[{"2", "k"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], "+", 
                  RowBox[{"2", "k"}]}], ",", 
                 RowBox[{"ll", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"2", "k"}], ",", "lb", ",", "d"}], "]"}], ",", 
                 "d"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"ord", "/", "2"}], ",", 
                  RowBox[{"lb", "/", "2"}]}], "]"}]}], "}"}]}], "]"}]}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"J2", " ", "=", " ", "0"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{"hinf", "+", "J1", "+", " ", "J2", "+", " ", "J3"}], "]"}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"RecursiveG", "[", 
     RowBox[{"ord_", ",", "\[CapitalDelta]b_", ",", " ", "lb_", ",", "d_"}], 
     "]"}], ":=", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "r"}], ")"}], "\[CapitalDelta]b"], 
     RowBox[{"RecursiveBlock", "[", 
      RowBox[{"ord", ",", "\[CapitalDelta]b", ",", " ", "lb", ",", "d"}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.65651637145367*^9, 3.656516546876727*^9}, {
   3.656856758253151*^9, 3.65685678853365*^9}, {3.656857021836574*^9, 
   3.656857022183029*^9}, {3.90491979587568*^9, 3.904919806089822*^9}, {
   3.904919871989065*^9, 3.904919908033661*^9}, {3.904920039556449*^9, 
   3.904920188936309*^9}, {3.9049207649913473`*^9, 3.904920787630309*^9}, {
   3.904921052117083*^9, 3.9049210526446257`*^9}, 3.9049395320323677`*^9, 
   3.904939569000579*^9, {3.906661205076198*^9, 3.9066612955373297`*^9}, {
   3.906662009800207*^9, 3.90666201040699*^9}},
 FontSize->12,
 CellLabel->"In[1]:=",ExpressionUUID->"08f9673a-6154-4e40-8c52-7e9c736a0f21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "The"}], " ", "general", " ", "d", " ", "conformal", " ",
      "block", " ", "with", " ", "external", " ", "weight", " ", "factor", " ",
      "stripped", " ", "off"}], ",", " ", 
    RowBox[{
    "first", " ", "for", " ", "scalar", " ", "intermediate", " ", "primary"}],
     ",", " ", 
    RowBox[{
    "and", " ", "then", " ", "general", " ", "internal", " ", "spin", " ", 
     RowBox[{"recursively", ".", " ", "This"}], " ", "is", " ", "slow", " ", 
     "but", " ", "serves", " ", "as", " ", "a", " ", "check", " ", "for", " ",
      "the", " ", "Zamolodchikov", " ", "recursion"}]}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"slowG", "[", 
     RowBox[{
     "d_", ",", "\[CapitalDelta]_", ",", "0", ",", "z_", ",", "zbar_", ",", 
      "trunc_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{"z", " ", "zbar"}]}], ",", 
        RowBox[{"v", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "zbar"}], ")"}]}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"u", "^", 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "/", "2"}], ")"}]}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Pochhammer", "[", 
            RowBox[{
             RowBox[{"\[CapitalDelta]", "/", "2"}], ",", "m"}], "]"}], "^", 
           "2"}], " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Pochhammer", "[", 
             RowBox[{
              RowBox[{"\[CapitalDelta]", "/", "2"}], ",", 
              RowBox[{"(", 
               RowBox[{"m", "+", "n"}], ")"}]}], "]"}], "^", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "!"}], " ", 
             RowBox[{"n", "!"}], " ", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{
               RowBox[{"\[CapitalDelta]", "+", "1", "-", 
                RowBox[{"d", "/", "2"}]}], ",", "m"}], "]"}], " ", 
             RowBox[{"Pochhammer", "[", 
              RowBox[{"\[CapitalDelta]", ",", 
               RowBox[{
                RowBox[{"2", "m"}], "+", "n"}]}], "]"}]}], ")"}]}], " ", 
          RowBox[{"u", "^", "m"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "v"}], ")"}], "^", "n"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0", ",", "trunc"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "trunc"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"beta", "[", "p_", "]"}], ":=", 
    RowBox[{
     RowBox[{"p", "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{"4", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "p"}], "-", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "p"}], "+", "1"}], ")"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"slowG", "[", 
     RowBox[{
     "d_", ",", "\[CapitalDelta]_", ",", "s_", ",", "z_", ",", "zbar_", ",", 
      "trunc_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", "=", 
         RowBox[{
          RowBox[{"d", "/", "2"}], "-", "1"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]", "+", "s", "-", 
             RowBox[{"2", "a"}], "-", "2"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "z"}], "+", 
             RowBox[{"1", "/", "zbar"}], "-", "1"}], ")"}], " ", 
           RowBox[{"slowG", "[", 
            RowBox[{"d", ",", 
             RowBox[{"\[CapitalDelta]", "+", "1"}], ",", 
             RowBox[{"s", "-", "1"}], ",", "z", ",", "zbar", ",", "trunc"}], 
            "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}], 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"slowG", "[", 
              RowBox[{"d", ",", 
               RowBox[{"\[CapitalDelta]", "+", "1"}], ",", 
               RowBox[{"s", "-", "1"}], ",", "z", ",", "zbar", ",", "trunc"}],
               "]"}], ",", "z"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "zbar"}], ")"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"slowG", "[", 
              RowBox[{"d", ",", 
               RowBox[{"\[CapitalDelta]", "+", "1"}], ",", 
               RowBox[{"s", "-", "1"}], ",", "z", ",", "zbar", ",", "trunc"}],
               "]"}], ",", "zbar"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"s", "-", "1"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalDelta]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]", "-", 
                 RowBox[{"2", "a"}], "+", "1"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]", "-", "a"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]", "-", "a", "+", "1"}], ")"}]}], 
                ")"}]}], " ", 
              RowBox[{"beta", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]", "-", "s", "+", "2", "-", 
                  RowBox[{"2", "a"}]}], ")"}]}], "]"}], " ", 
              RowBox[{"slowG", "[", 
               RowBox[{"d", ",", 
                RowBox[{"\[CapitalDelta]", "+", "2"}], ",", 
                RowBox[{"s", "-", "2"}], ",", "z", ",", "zbar", ",", 
                "trunc"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]", "+", "s", "-", "1"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"s", "+", "a", "-", "1"}], ")"}]}], " ", 
              RowBox[{"slowG", "[", 
               RowBox[{"d", ",", "\[CapitalDelta]", ",", 
                RowBox[{"s", "-", "2"}], ",", "z", ",", "zbar", ",", 
                "trunc"}], "]"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalDelta]", "-", "a"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"s", "+", 
             RowBox[{"2", "a"}], "-", "1"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"s", "+", "a", "-", "1"}], ")"}]}]}], ")"}]}]}], " ", 
      "]"}], "/;", 
     RowBox[{"s", "\[GreaterEqual]", "1"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Conversion"}], " ", "between", " ", "r"}], ",", " ", 
     RowBox[{"\[Eta]", " ", "and", " ", "z"}], ",", " ", "zbar"}], " ", 
    "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "\[Rule]", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"z", " ", "zbar"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", "z"}], "]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", "zbar"}], "]"}]}], ")"}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"z", "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", "z"}], "]"}]}], ")"}], "^", "2"}]}], "+", 
           RowBox[{"zbar", "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", "zbar"}], "]"}]}], ")"}], "^", "2"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"z", " ", "zbar"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", "z"}], "]"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", "zbar"}], "]"}]}], ")"}]}], ")"}]}]}], 
          ")"}]}]}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.65651637145367*^9, 3.656516546876727*^9}, {
   3.656856758253151*^9, 3.65685678853365*^9}, {3.656857021836574*^9, 
   3.656857022183029*^9}, {3.90491979587568*^9, 3.904919806089822*^9}, {
   3.904919871989065*^9, 3.904919908033661*^9}, {3.904920039556449*^9, 
   3.904920188936309*^9}, {3.9049207649913473`*^9, 3.904920787630309*^9}, {
   3.904921052117083*^9, 3.9049210526446257`*^9}, 3.9049395320323677`*^9, 
   3.904939569000579*^9, {3.906661205076198*^9, 3.9066612955373297`*^9}, {
   3.906661390179709*^9, 3.9066614584852552`*^9}, {3.9066616436604958`*^9, 
   3.9066616621251097`*^9}, {3.906661784955866*^9, 3.906661802927717*^9}, {
   3.9068713532711687`*^9, 3.906871360402968*^9}},
 FontSize->12,
 CellLabel->"In[18]:=",ExpressionUUID->"d774bc99-d6af-4058-8e20-9048d90e5428"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "testing"}], " ", "in", " ", "3", "D", " ", "case"}], 
   " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"block1", "=", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", ">", "0"}], " ", "&&", " ", 
        RowBox[{"y", ">", "0"}], " ", "&&", " ", 
        RowBox[{"\[Epsilon]", ">", "0"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RecursiveG", "[", 
             RowBox[{"10", ",", "\[CapitalDelta]", ",", "2", ",", "3"}], 
             "]"}], "/", 
            SuperscriptBox["r", "\[CapitalDelta]"]}], "/.", "subs"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "\[Rule]", 
             RowBox[{"\[Epsilon]", " ", "x"}]}], ",", 
            RowBox[{"zbar", "\[Rule]", 
             RowBox[{"\[Epsilon]", " ", "y"}]}]}], "}"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", "5"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"block2", "=", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", ">", "0"}], " ", "&&", " ", 
        RowBox[{"y", ">", "0"}], " ", "&&", " ", 
        RowBox[{"\[Epsilon]", ">", "0"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"slowG", "[", 
             RowBox[{
             "3", ",", "\[CapitalDelta]", ",", "2", ",", "z", ",", "zbar", ",",
               "6"}], "]"}], "/", 
            SuperscriptBox["r", "\[CapitalDelta]"]}], "/.", "subs"}], "//.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "\[Rule]", 
             RowBox[{"\[Epsilon]", " ", "x"}]}], ",", 
            RowBox[{"zbar", "\[Rule]", 
             RowBox[{"\[Epsilon]", " ", "y"}]}]}], "}"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", "5"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "compare"}], " ", "Zamolodchikov", " ", "recursion", 
      " ", "against", " ", "spin", " ", "recursion"}], ",", " ", 
     RowBox[{"in", " ", "the", " ", "spin", " ", "2", " ", "case", " ", 
      RowBox[{"(", 
       RowBox[{
       "overall", " ", "constant", " ", "normalization", " ", "factor", " ", 
        "is", " ", "a", " ", "matter", " ", "of", " ", "convention"}], 
       ")"}]}]}], " ", "***)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"block1", "/", "block2"}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.9066615316855793`*^9, 3.906661541897574*^9}, 
   3.906661577610653*^9, {3.9066616142574997`*^9, 3.906661637526425*^9}, {
   3.9066616714326057`*^9, 3.906661671884067*^9}, {3.9066617080199757`*^9, 
   3.906661708189949*^9}, {3.9066618170589457`*^9, 3.9066618946589193`*^9}},
 FontSize->12,
 CellLabel->"In[22]:=",ExpressionUUID->"88645c1a-f684-4885-99de-26d8949e9673"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["2", "3"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "5"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {
    Rational[2, 3]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.9066615427069597`*^9, 3.906661597604396*^9, 3.906661710063377*^9, {
   3.906661808598274*^9, 3.9066618211675177`*^9}, 3.906661869903205*^9, 
   3.9066619018292294`*^9, 3.90687129379041*^9, 3.9068713686135798`*^9, 
   3.90687605772961*^9, 3.906877155249014*^9, 3.9070091668727922`*^9, 
   3.90700922978403*^9},
 FontSize->12,
 CellLabel->"Out[24]=",ExpressionUUID->"95514bff-a3b0-4ede-ac6c-9caa02a871d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D conformal bootstrap bounding gap", "Subtitle",
 CellChangeTimes->{{3.964951761960457*^9, 3.9649517722514133`*^9}, {
  3.96495208494009*^9, 
  3.964952086798805*^9}},ExpressionUUID->"4a8ff003-421b-4cff-a093-\
0483db9e3685"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Crossing", "[", 
    RowBox[{
    "\[CapitalDelta]1_", ",", "\[CapitalDelta]_", ",", "s_", ",", "x_", ",", 
     "y_", ",", "trunc_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}], "^", "\[CapitalDelta]1"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "zbar"}], ")"}], "^", "\[CapitalDelta]1"}], " ", 
           RowBox[{"RecursiveG", "[", 
            RowBox[{"20", ",", "\[CapitalDelta]", ",", "s", ",", "3"}], 
            "]"}]}], "/.", "subs"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"z", "\[Rule]", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "+", 
             RowBox[{"\[Epsilon]", " ", "x"}]}]}], ",", 
           RowBox[{"zbar", "\[Rule]", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "+", 
             RowBox[{"\[Epsilon]", " ", "y"}]}]}]}], "}"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"O", "[", "\[Epsilon]", "]"}], "^", "trunc"}]}], "//", 
      "Normal"}], ")"}], "/.", 
    RowBox[{"\[Epsilon]", "->", "1"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CrossingDeriv", "[", 
    RowBox[{
    "\[CapitalDelta]1_", ",", "\[CapitalDelta]_", ",", "s_", ",", "deg_", ",",
      "trunc_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"mat", "=", 
        RowBox[{"CoefficientList", "[", 
         RowBox[{
          RowBox[{"Crossing", "[", 
           RowBox[{
           "\[CapitalDelta]1", ",", "\[CapitalDelta]", ",", "s", ",", "x", ",",
             "y", ",", "trunc"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"m", ",", "n"}], "]"}], " ", 
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"m", "+", "1"}], ",", 
            RowBox[{"n", "+", "1"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "deg"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"m", "+", "1"}], ",", 
          RowBox[{"deg", "-", "m"}], ",", "2"}], "}"}]}], "]"}], "//", 
      "Flatten"}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrepareCoeff", "[", 
    RowBox[{
    "\[CapitalDelta]1_", ",", "gap_", ",", "weighttrunc_", ",", "weightstep_",
      ",", "spintrunc_", ",", "deg_", ",", "trunc_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "h", "}"}], ",", 
     RowBox[{"Monitor", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"CrossingDeriv", "[", 
           RowBox[{
           "\[CapitalDelta]1", ",", "0", ",", "0", ",", "deg", ",", "trunc"}],
            "]"}], "}"}], ",", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"CrossingDeriv", "[", 
             RowBox[{
             "\[CapitalDelta]1", ",", "h", ",", "spin", ",", "deg", ",", 
              "trunc"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"spin", ",", "0", ",", "spintrunc", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"spin", "\[Equal]", "0"}], ",", "gap", ",", 
                RowBox[{"1", "+", "spin"}]}], "]"}], ",", "weighttrunc", ",", 
              "weightstep"}], "}"}]}], "]"}], "//", "Flatten"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "spin"}], "}"}]}], "]"}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vars", "[", "deg_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"m", ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "deg"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"m", "+", "1"}], ",", " ", 
         RowBox[{"deg", "-", "m"}], ",", "2"}], "}"}]}], "]"}], "//", 
     "Flatten"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"derivatives", "=", "7"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxweight", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stepweight", "=", ".2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxspin", "=", "6"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"truncationlevel", "=", "9"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalization", "=", 
   RowBox[{
    RowBox[{"vars", "[", "derivatives", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normvars", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"vars", "[", "derivatives", "]"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockcoeffs", "[", 
    RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"PrepareCoeff", "[", 
     RowBox[{
     "\[CapitalDelta]1", ",", "gap", ",", "maxweight", ",", "stepweight", ",",
       "maxspin", ",", "derivatives", ",", "truncationlevel"}], "]"}], "/.", 
    RowBox[{"normalization", "\[Rule]", "1"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oracle", "[", 
   RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MM", "=", 
      RowBox[{"blockcoeffs", "[", 
       RowBox[{"\[CapitalDelta]1", ",", "gap"}], "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"normvars", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", 
       RowBox[{"LinearOptimization", "[", 
        RowBox[{
         RowBox[{"MM", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[GreaterEqual]", "0"}], " ", "&"}], " ", "/@", " ", 
          "MM"}], ",", "normvars"}], "]"}]}], ")"}], "===", 
     "Indeterminate"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9050018252824783`*^9, 3.9050018370506773`*^9}, {
   3.905001876753827*^9, 3.9050018910356216`*^9}, {3.90500237402001*^9, 
   3.905002376269307*^9}, 3.9050025780829897`*^9, {3.9052886189689627`*^9, 
   3.905288619142074*^9}, {3.906661925557774*^9, 3.9066619714143744`*^9}, {
   3.9649517752284184`*^9, 3.964951776105661*^9}},
 FontSize->12,ExpressionUUID->"5ebdfb67-a967-439c-8ad6-1e6ce3f76342"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oracle", "[", 
  RowBox[{".518", ",", "1.427"}], "]"}]], "Input",
 CellChangeTimes->{{3.9055063524662933`*^9, 3.9055063544060173`*^9}},
 FontSize->12,
 CellLabel->"In[39]:=",ExpressionUUID->"d2e33ef2-8a84-42a0-8cd2-b663ddc0863b"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "nsolc", 
   "\"There are no points that satisfy the constraints.\"", 2, 39, 2, 
   27120141126626969524, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.905547148235564*^9},
 FontSize->12,
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"87d3561e-11b8-48fb-9539-83cbc1e48864"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9055152107736397`*^9, 3.905547148250626*^9},
 FontSize->12,
 CellLabel->"Out[39]=",ExpressionUUID->"00bcdfb6-2e2b-411a-918e-285bc5662f37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oracle", "[", 
  RowBox[{".518", ",", "1.428"}], "]"}]], "Input",
 CellChangeTimes->{{3.9054329395037603`*^9, 3.905432940007989*^9}},
 FontSize->12,
 CellLabel->"In[37]:=",ExpressionUUID->"7adbbffc-ff8a-4dd3-9019-d3c28d533363"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.905439806149008*^9},
 FontSize->12,
 CellLabel->"Out[37]=",ExpressionUUID->"135bb006-4baa-4e0b-9dcc-7dfe93abc716"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3D conformal bootstrap bounding OPE coefficient of the stress tensor\
\>", "Subtitle",
 CellChangeTimes->{{3.964951761960457*^9, 3.9649517722514133`*^9}, {
  3.96495208494009*^9, 3.964952104558913*^9}, {3.9649521677440233`*^9, 
  3.96495217096828*^9}},ExpressionUUID->"7a9ef952-16ad-4851-895f-\
fa396b756a7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrepareOPEbound", "[", 
    RowBox[{
    "\[CapitalDelta]1_", ",", "gap_", ",", "weighttrunc_", ",", "weightstep_",
      ",", "spintrunc_", ",", "deg_", ",", "trunc_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "h", "}"}], ",", 
     RowBox[{"Monitor", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"CrossingDeriv", "[", 
           RowBox[{
           "\[CapitalDelta]1", ",", "h", ",", "spin", ",", "deg", ",", 
            "trunc"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"spin", ",", "0", ",", "spintrunc", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"spin", "\[Equal]", "0"}], ",", "gap", ",", 
              RowBox[{"1", "+", "spin"}]}], "]"}], ",", "weighttrunc", ",", 
            "weightstep"}], "}"}]}], "]"}], "//", "Flatten"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "spin"}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"derivatives", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxweight", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stepweight", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxspin", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"truncationlevel", "=", "9"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllVars", "=", 
    RowBox[{"vars", "[", "derivatives", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OPEboundcoeffs", "[", 
    RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
   RowBox[{"PrepareOPEbound", "[", 
    RowBox[{
    "\[CapitalDelta]1", ",", "gap", ",", "maxweight", ",", "stepweight", ",", 
     "maxspin", ",", "derivatives", ",", "truncationlevel"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NormalizationCondition", "[", "\[CapitalDelta]1_", "]"}], ":=", 
   RowBox[{"CrossingDeriv", "[", 
    RowBox[{
    "\[CapitalDelta]1", ",", "3", ",", "2", ",", "derivatives", ",", 
     "truncationlevel"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinimizationObjective", "[", "\[CapitalDelta]1_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"CrossingDeriv", "[", 
      RowBox[{
      "\[CapitalDelta]1", ",", "0", ",", "0", ",", "derivatives", ",", 
       "truncationlevel"}], "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OPEbound", "[", 
    RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"OPEbound", "[", 
     RowBox[{"\[CapitalDelta]1", ",", "gap"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"MM", "=", 
        RowBox[{"OPEboundcoeffs", "[", 
         RowBox[{"\[CapitalDelta]1", ",", "gap"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"MinimizationObjective", "[", "\[CapitalDelta]1", "]"}], "/.", 
       
       RowBox[{"LinearOptimization", "[", 
        RowBox[{
         RowBox[{"MinimizationObjective", "[", "\[CapitalDelta]1", "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", "0"}], " ", "&"}], " ", "/@", 
            " ", "MM"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NormalizationCondition", "[", "\[CapitalDelta]1", "]"}],
              "==", "1"}], "}"}]}], "]"}], ",", "AllVars"}], "]"}]}]}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnnormalizedCTbound", "[", 
   RowBox[{"\[CapitalDelta]1_", ",", "gap_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[CapitalDelta]1", "^", "2"}], "/", 
   RowBox[{"OPEbound", "[", 
    RowBox[{"\[CapitalDelta]1", ",", "gap"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.906871417169262*^9, 3.906871488184654*^9}, {
   3.9068715261304913`*^9, 3.906871587511965*^9}, {3.906871626727627*^9, 
   3.906871775611596*^9}, {3.9068718164755573`*^9, 3.906871864374852*^9}, {
   3.906871911449882*^9, 3.906871915381856*^9}, {3.906872128239316*^9, 
   3.906872130483036*^9}, {3.9068722975917788`*^9, 3.9068723111188803`*^9}, {
   3.906872367147749*^9, 3.906872367454731*^9}, {3.9068728386069803`*^9, 
   3.906872877686818*^9}, {3.9068733906305943`*^9, 3.906873394882086*^9}, {
   3.90687401826188*^9, 3.906874020542841*^9}, 3.906874140563896*^9, {
   3.9068748332050323`*^9, 3.906874847035503*^9}, {3.906876076073203*^9, 
   3.906876076306522*^9}, {3.906877124603199*^9, 3.906877131630946*^9}, {
   3.907009113284544*^9, 3.907009118901469*^9}, {3.9070092349354877`*^9, 
   3.907009256927026*^9}},
 FontSize->12,
 CellLabel->"In[38]:=",ExpressionUUID->"1828de32-a363-4dee-a085-24059de2d1b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"UnnormalizedCTbound", "[", 
  RowBox[{".518", ",", "1."}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"UnnormalizedCTbound", "[", 
  RowBox[{".5", ",", "1."}], "]"}]}], "Input",
 CellChangeTimes->{{3.906873337658709*^9, 3.9068733544704638`*^9}, {
   3.9068734751576433`*^9, 3.906873484179534*^9}, {3.907009130621298*^9, 
   3.9070091327799797`*^9}, 3.9070925965011377`*^9},
 FontSize->12,ExpressionUUID->"9a33b9c3-5bc9-4cc8-94da-ed4b5c080e0c"],

Cell[BoxData["0.6217953143158241`"], "Output",
 CellChangeTimes->{3.90700914080112*^9, 3.90700921260419*^9, 
  3.907055808063889*^9},
 FontSize->12,
 CellLabel->"Out[50]=",ExpressionUUID->"f1bf6818-4463-43b9-b58a-fb7bf69922b3"],

Cell[BoxData["0.6592201756774906`"], "Output",
 CellChangeTimes->{3.90700914080112*^9, 3.90700921260419*^9, 
  3.907092558330957*^9},
 FontSize->12,
 CellLabel->"Out[51]=",ExpressionUUID->"fc832bfb-f3f6-46ef-8381-2f0a59842f88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnnormalizedCTbound", "[", 
   RowBox[{".518", ",", "1."}], "]"}], "/", 
  RowBox[{"UnnormalizedCTbound", "[", 
   RowBox[{".5", ",", "1."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907009124685582*^9, 3.907009126370207*^9}, {
  3.9070926179434023`*^9, 3.907092621493815*^9}},
 FontSize->12,
 CellLabel->"In[54]:=",ExpressionUUID->"9f235776-f956-4250-998f-2ba6d45d197c"],

Cell[BoxData["0.9432285862258322`"], "Output",
 CellChangeTimes->{3.9068790295396137`*^9, 3.9070926224559593`*^9},
 FontSize->12,
 CellLabel->"Out[54]=",ExpressionUUID->"0d91db63-6a59-45d2-a3e4-f1203a29afbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1220, 891},
WindowMargins->{{Automatic, 26}, {Automatic, 0}},
FrontEndVersion->"14.3 for Mac OS X ARM (64-bit) (July 8, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f4dc06e9-76ff-4e19-9d53-2ba797dcfe9c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 274, 4, 96, "Title",ExpressionUUID->"1d37c3ca-d612-49a8-b824-032a67794d32"],
Cell[CellGroupData[{
Cell[879, 30, 15657, 430, 552, "Input",ExpressionUUID->"033dd1c9-cbbc-4857-b09d-6b77d8d24751"],
Cell[16539, 462, 5478, 158, 94, "Output",ExpressionUUID->"08c7e09f-a189-4598-b9a8-6afc69556ef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22054, 625, 2205, 65, 102, "Input",ExpressionUUID->"58c7c32e-78c4-437b-9b4c-5ba21db9055e"],
Cell[24262, 692, 426, 10, 32, "Output",ExpressionUUID->"6faa9f24-c768-45c5-a0ce-9f1737d02e25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24725, 707, 1445, 38, 46, "Input",ExpressionUUID->"6a44b5c0-3f09-452f-bffc-40e4da079006"],
Cell[26173, 747, 2518, 77, 69, "Output",ExpressionUUID->"d9361a30-9c98-4023-8058-3553d860bfc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28728, 829, 1491, 40, 84, "Input",ExpressionUUID->"b57608a2-5a69-4603-afa5-3781a91f27e4"],
Cell[30222, 871, 505, 13, 32, "Output",ExpressionUUID->"5f7421d8-37c5-4c20-a2dc-4c37e7128e11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30764, 889, 5230, 136, 201, "Input",ExpressionUUID->"9c411356-30f2-4689-bf40-b875806594ae"],
Cell[35997, 1027, 616, 12, 32, "Output",ExpressionUUID->"aa9a51ba-260f-43e2-809c-820e01e1bd05"],
Cell[36616, 1041, 498, 8, 32, "Output",ExpressionUUID->"6fe170c6-418d-4ebf-92c4-a4086c60bfa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37151, 1054, 1492, 35, 46, "Input",ExpressionUUID->"39b1b154-1a06-41ee-8135-c0dbf6e3dd52"],
Cell[38646, 1091, 4993, 102, 242, "Output",ExpressionUUID->"b2511d70-54f1-46c1-b153-9a2a8b4625c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43676, 1198, 2175, 57, 46, "Input",ExpressionUUID->"5854f673-e70c-42bc-8b9c-2073ad914e1a"],
Cell[45854, 1257, 2676, 81, 81, "Output",ExpressionUUID->"f5d50b46-fb58-42ce-ba5b-aba55cc0b634"]
}, Open  ]],
Cell[48545, 1341, 1548, 39, 65, "Input",ExpressionUUID->"7d309ec3-65fb-4142-b611-e5e56934c397"],
Cell[CellGroupData[{
Cell[50118, 1384, 1241, 33, 46, "Input",ExpressionUUID->"a2af9ec6-390c-46ef-9f8d-c8fbf7801a94"],
Cell[51362, 1419, 1346, 42, 50, "Output",ExpressionUUID->"99b0cf77-0dc5-45ac-b5bf-cca2b80676ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52745, 1466, 5097, 137, 273, "Input",ExpressionUUID->"05c4389f-c1ee-416b-8639-a97aa27894cf"],
Cell[57845, 1605, 37745, 636, 404, "Output",ExpressionUUID->"7dbcd8f6-b4dc-44dc-a296-5062bb7055ab"],
Cell[95593, 2243, 37330, 630, 402, "Output",ExpressionUUID->"81936582-ec76-4e9a-9d64-2a3adb44cc34"],
Cell[132926, 2875, 36909, 623, 403, "Output",ExpressionUUID->"a31bf6ba-5280-4cdf-902e-6792a75e798a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169884, 3504, 246, 4, 96, "Title",ExpressionUUID->"a448cf31-73bb-4c58-aa9f-2576b0a00c3d"],
Cell[CellGroupData[{
Cell[170155, 3512, 7321, 205, 203, "Input",ExpressionUUID->"f0a6d152-d4af-428c-bfb1-47b650e509da"],
Cell[177479, 3719, 186, 3, 32, "Output",ExpressionUUID->"cc8145f0-364c-4252-be69-ee4c6c9e3c3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177702, 3727, 9540, 264, 254, "Input",ExpressionUUID->"64d4c62f-e9dc-4e8d-b424-a5d53379eef4"],
Cell[187245, 3993, 545, 13, 32, "Output",ExpressionUUID->"b2b7bb5b-9605-486f-81c5-546efa84f037"],
Cell[187793, 4008, 545, 13, 32, "Output",ExpressionUUID->"6630060c-70e7-4f60-8ae4-a0a08b38f68a"],
Cell[188341, 4023, 380, 7, 32, "Output",ExpressionUUID->"f975716a-e068-4b60-9aad-5129862b8a60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188758, 4035, 1449, 34, 46, "Input",ExpressionUUID->"62a9534a-0ef4-4aec-b396-84b68594c53b"],
Cell[190210, 4071, 5581, 111, 242, "Output",ExpressionUUID->"80c40788-dddf-491a-9c35-766a9e8d1492"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195828, 4187, 2582, 66, 65, "Input",ExpressionUUID->"ebdec377-3f7e-4453-bd40-4f1b097fb70a"],
Cell[198413, 4255, 5348, 156, 150, "Output",ExpressionUUID->"2180759c-20da-4d56-afc2-79268c4238fc"]
}, Open  ]],
Cell[203776, 4414, 10438, 257, 631, "Input",ExpressionUUID->"909ce820-34e8-431f-a528-1e614eca5c56"],
Cell[CellGroupData[{
Cell[214239, 4675, 899, 14, 46, "Input",ExpressionUUID->"d9d26c20-633c-4b72-9155-ee7a993ab300"],
Cell[215141, 4691, 430, 7, 32, "Output",ExpressionUUID->"25f814b4-3a3b-448b-89e2-38e409fc813e"],
Cell[215574, 4700, 431, 7, 32, "Output",ExpressionUUID->"48eea3d7-6406-47ea-b8a2-541208b40c1d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216054, 4713, 289, 4, 96, "Title",ExpressionUUID->"f986cde2-61bc-44c1-bcf9-1618da029a87"],
Cell[216346, 4719, 20365, 540, 936, "Input",ExpressionUUID->"08f9673a-6154-4e40-8c52-7e9c736a0f21"],
Cell[236714, 5261, 9781, 257, 367, "Input",ExpressionUUID->"d774bc99-d6af-4058-8e20-9048d90e5428"],
Cell[CellGroupData[{
Cell[246520, 5522, 3075, 78, 107, "Input",ExpressionUUID->"88645c1a-f684-4885-99de-26d8949e9673"],
Cell[249598, 5602, 782, 19, 45, "Output",ExpressionUUID->"95514bff-a3b0-4ede-ac6c-9caa02a871d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250417, 5626, 231, 4, 52, "Subtitle",ExpressionUUID->"4a8ff003-421b-4cff-a093-0483db9e3685"],
Cell[250651, 5632, 6992, 190, 518, "Input",ExpressionUUID->"5ebdfb67-a967-439c-8ad6-1e6ce3f76342"],
Cell[CellGroupData[{
Cell[257668, 5826, 253, 5, 28, "Input",ExpressionUUID->"d2e33ef2-8a84-42a0-8cd2-b663ddc0863b"],
Cell[257924, 5833, 371, 10, 26, "Message",ExpressionUUID->"87d3561e-11b8-48fb-9539-83cbc1e48864"],
Cell[258298, 5845, 191, 3, 32, "Output",ExpressionUUID->"00bcdfb6-2e2b-411a-918e-285bc5662f37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258526, 5853, 251, 5, 28, "Input",ExpressionUUID->"7adbbffc-ff8a-4dd3-9019-d3c28d533363"],
Cell[258780, 5860, 168, 3, 32, "Output",ExpressionUUID->"135bb006-4baa-4e0b-9dcc-7dfe93abc716"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258997, 5869, 319, 6, 52, "Subtitle",ExpressionUUID->"7a9ef952-16ad-4851-895f-fa396b756a7e"],
Cell[259319, 5877, 5024, 122, 424, "Input",ExpressionUUID->"1828de32-a363-4dee-a085-24059de2d1b3"],
Cell[CellGroupData[{
Cell[264368, 6003, 465, 8, 46, "Input",ExpressionUUID->"9a33b9c3-5bc9-4cc8-94da-ed4b5c080e0c"],
Cell[264836, 6013, 227, 4, 32, "Output",ExpressionUUID->"f1bf6818-4463-43b9-b58a-fb7bf69922b3"],
Cell[265066, 6019, 227, 4, 32, "Output",ExpressionUUID->"fc832bfb-f3f6-46ef-8381-2f0a59842f88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265330, 6028, 406, 9, 28, "Input",ExpressionUUID->"9f235776-f956-4250-998f-2ba6d45d197c"],
Cell[265739, 6039, 208, 3, 32, "Output",ExpressionUUID->"0d91db63-6a59-45d2-a3e4-f1203a29afbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

